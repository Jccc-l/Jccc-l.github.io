<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Appimage运行失败</title>
    <url>/2024/06/27/Appimage%E8%BF%90%E8%A1%8C%E5%A4%B1%E8%B4%A5/</url>
    <content><![CDATA[<h1 id="appimage运行失败"><a class="markdownIt-Anchor" href="#appimage运行失败"></a> Appimage运行失败</h1>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">This doesn&#x27;t look like a squashfs image.</span><br><span class="line"></span><br><span class="line">Cannot mount AppImage, please check your FUSE setup.</span><br><span class="line">You might still be able to extract the contents of this AppImage</span><br><span class="line">if you run it with the --appimage-extract option.</span><br><span class="line">See https://github.com/AppImage/AppImageKit/wiki/FUSE</span><br><span class="line">for more information</span><br><span class="line">open dir error: No such file or directory</span><br></pre></td></tr></table></figure>
<p>运行以下命令即可</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> <span class="built_in">chmod</span> u+s `<span class="built_in">which</span> fusermount`</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Appimage</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Arch Linux 软件包</title>
    <url>/2024/05/06/Arch-Linux-%E8%BD%AF%E4%BB%B6%E5%8C%85/</url>
    <content><![CDATA[<h1 id="arch-linux-软件包"><a class="markdownIt-Anchor" href="#arch-linux-软件包"></a> Arch Linux 软件包</h1>
<p>Arch Linux中常用的软件包</p>
<table>
<thead>
<tr>
<th>包名</th>
<th>解释</th>
</tr>
</thead>
<tbody>
<tr>
<td>base</td>
<td>定义系统安装的最小包集合</td>
</tr>
<tr>
<td>linux-zen</td>
<td>内核</td>
</tr>
<tr>
<td>linux-zen-headers</td>
<td>内核对应的系统头文件</td>
</tr>
<tr>
<td>linux-firmware</td>
<td>系统固件</td>
</tr>
<tr>
<td>intel-ucode/amd-ucode</td>
<td>CPU微码更新文件，根据CPU进行选择</td>
</tr>
<tr>
<td>linux-tools</td>
<td>一些Linux中的有用工具包</td>
</tr>
<tr>
<td>btrfs-progs</td>
<td>btrfs文件系统的重要工具</td>
</tr>
<tr>
<td>ntfs-3g</td>
<td>Linux访问ntfs分区</td>
</tr>
<tr>
<td>zsh</td>
<td>Z-Shell</td>
</tr>
<tr>
<td>grub</td>
<td>启动加载器</td>
</tr>
<tr>
<td>efibootmgr</td>
<td>EFI启动项管理器</td>
</tr>
<tr>
<td>os-prober</td>
<td>检测硬盘其他系统的工具</td>
</tr>
<tr>
<td>neovim</td>
<td>编辑器</td>
</tr>
<tr>
<td>networkmanager</td>
<td>网络管理器</td>
</tr>
<tr>
<td>man-pages-zh_cn</td>
<td>中文帮助手册</td>
</tr>
<tr>
<td>grub</td>
<td>启动管理器</td>
</tr>
<tr>
<td>efibootmgr</td>
<td>EFI启动项管理器</td>
</tr>
<tr>
<td>os-prober</td>
<td>检测硬盘其他系统</td>
</tr>
<tr>
<td>sudo</td>
<td>提权工具</td>
</tr>
<tr>
<td>xclip</td>
<td>neovim的剪贴板工具</td>
</tr>
<tr>
<td>nodejs</td>
<td>JS运行环境</td>
</tr>
<tr>
<td>npm</td>
<td>JS包管理器</td>
</tr>
<tr>
<td>yarn</td>
<td>JS包管理器</td>
</tr>
<tr>
<td>python-pynvim</td>
<td>neovim的python支持</td>
</tr>
<tr>
<td>ripgrep</td>
<td>文件内容搜索工具</td>
</tr>
<tr>
<td>openssh</td>
<td></td>
</tr>
<tr>
<td>gnome</td>
<td>GNOME DESKTOP</td>
</tr>
<tr>
<td>gnome-shell</td>
<td>GNOME shell</td>
</tr>
<tr>
<td>gnome-tweaks</td>
<td>gnome插件</td>
</tr>
<tr>
<td>tmux</td>
<td>终端复用器</td>
</tr>
<tr>
<td>fcitx5-im</td>
<td>输入法框架</td>
</tr>
<tr>
<td>fcitx5-chinese-addons</td>
<td>中文输入法</td>
</tr>
<tr>
<td>fcitx5-nord</td>
<td>输入法主题</td>
</tr>
<tr>
<td>fcitx5-pinyin-zhwiki</td>
<td>输入法zhwiki词库</td>
</tr>
<tr>
<td>base-devel</td>
<td></td>
</tr>
<tr>
<td>rust</td>
<td></td>
</tr>
<tr>
<td>git</td>
<td>版本控制工具</td>
</tr>
<tr>
<td>acpi</td>
<td>查看电源剩余电量</td>
</tr>
<tr>
<td>chromium</td>
<td>浏览器</td>
</tr>
<tr>
<td>mariadb</td>
<td>数据库</td>
</tr>
<tr>
<td>arch-install-scripts</td>
<td>Arch Linux安装工具</td>
</tr>
<tr>
<td>xf86-video-intel</td>
<td>Intel核显驱动</td>
</tr>
<tr>
<td>nvidia-dkms</td>
<td>Nvidia显卡驱动（非linux内核）</td>
</tr>
<tr>
<td>bbswitch-dkms</td>
<td>显卡驱动电源管理（非linux内核）</td>
</tr>
<tr>
<td>xf86-video-intel</td>
<td>X.Org的Intel核显驱动</td>
</tr>
<tr>
<td>filelight</td>
<td>检测硬盘使用信息的工具</td>
</tr>
<tr>
<td>htop</td>
<td>系统资源监测工具</td>
</tr>
<tr>
<td>bc</td>
<td></td>
</tr>
<tr>
<td>rsync</td>
<td>文件同步工具</td>
</tr>
<tr>
<td>fzf</td>
<td>模糊搜索工具</td>
</tr>
<tr>
<td>jdk-openjdk</td>
<td>Java开发工具</td>
</tr>
<tr>
<td>ntp</td>
<td>时间同步工具</td>
</tr>
<tr>
<td>lsd</td>
<td>更美观的ls命令</td>
</tr>
<tr>
<td>exa</td>
<td>更美观的ls命令</td>
</tr>
<tr>
<td>grim</td>
<td>Wayland下的截图工具可以参考<a href="https://wiki.archlinux.org/title/Screen_capture">Screen Capture</a></td>
</tr>
<tr>
<td>slurp</td>
<td>在Wayland复合器中选择一个区域，与grim配合，部分屏幕截图</td>
</tr>
<tr>
<td>wl-clipboard</td>
<td>Wayland 的命令行复制/粘贴工具，可用于将屏幕截图增加到到剪贴版</td>
</tr>
<tr>
<td>github-cli</td>
<td>The GitHub CLI</td>
</tr>
<tr>
<td>obsidian</td>
<td>笔记应用程序</td>
</tr>
<tr>
<td>wmname</td>
<td>修改窗口管理器名称，用于修复部分应用在小众窗口管理器的运行问题</td>
</tr>
<tr>
<td>pactl</td>
<td>pulseaudio控制软件</td>
</tr>
<tr>
<td>remmina</td>
<td>远程控制软件</td>
</tr>
<tr>
<td>calibre</td>
<td>书库软件</td>
</tr>
<tr>
<td>okular</td>
<td>浏览pdf文档等</td>
</tr>
<tr>
<td>pinta</td>
<td>图片编辑工具、画图工具</td>
</tr>
<tr>
<td>feh</td>
<td>图片浏览、背景设置</td>
</tr>
</tbody>
</table>
<p>AUR包</p>
<table>
<thead>
<tr>
<th>包名</th>
<th>解释</th>
</tr>
</thead>
<tbody>
<tr>
<td>optimus-manager</td>
<td>Intel/AMD+Nvidia双显卡管理</td>
</tr>
<tr>
<td>optimus-manager-qt</td>
<td>optimus-manager的图形界面以及配置文件自动生成(GNOME不可用)</td>
</tr>
<tr>
<td>gdm-prime</td>
<td>GDM:加上Prime补丁以支持Optimus</td>
</tr>
<tr>
<td>python310</td>
<td>Python3.10版本</td>
</tr>
<tr>
<td>google-chrome-dev</td>
<td>Google Chrome浏览器Dev通道测试版</td>
</tr>
<tr>
<td>hmcl-stable-bin</td>
<td>我的世界HMCL启动器（文字有问题）</td>
</tr>
<tr>
<td>youdao-dict</td>
<td>有道词典</td>
</tr>
<tr>
<td>python-pyqt5-webkit</td>
<td>youdao-dict的依赖</td>
</tr>
<tr>
<td>qt5-webkit</td>
<td>python-pyqt5-webkit的依赖</td>
</tr>
<tr>
<td>java-openjfx</td>
<td>Java OpenJFX客户端应用平台(JavaFX的开源实现)</td>
</tr>
<tr>
<td>amdgpu_top</td>
<td>AMD显卡监控软件</td>
</tr>
<tr>
<td>qqmusic-electron</td>
<td>QQ音乐</td>
</tr>
<tr>
<td>amdgpu-pro-installer</td>
<td>AMD PRO 显卡驱动</td>
</tr>
<tr>
<td>python-huggingface-hub</td>
<td>Huggingface终端工具</td>
</tr>
<tr>
<td>visual-studio-code-bin</td>
<td>宇宙最强编辑器Visual Studio Code</td>
</tr>
</tbody>
</table>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Arch Linux</tag>
        <tag>pacman</tag>
      </tags>
  </entry>
  <entry>
    <title>Archlinux基本安装</title>
    <url>/2024/05/06/Archlinux%E5%9F%BA%E6%9C%AC%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<h1 id="archlinux"><a class="markdownIt-Anchor" href="#archlinux"></a> Archlinux</h1>
<h2 id="基础系统安装"><a class="markdownIt-Anchor" href="#基础系统安装"></a> 基础系统安装</h2>
<p>ArchLinux是一个流行的GNU/Linux滚动发行</p>
<h3 id="基础配置"><a class="markdownIt-Anchor" href="#基础配置"></a> 基础配置</h3>
<h4 id="检查是否以uefi启动"><a class="markdownIt-Anchor" href="#检查是否以uefi启动"></a> 检查是否以UEFI启动</h4>
<p>通过检查UEFI的位数来验证启动模式</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> /sys/firmware/efi/fw_platform_size</span><br></pre></td></tr></table></figure>
<p>如果命令结果为<code>64</code>，则系统是以<code>UEFI</code>模式引导且使用<code>64</code>位<code>x64 UEFI</code>。如果命令结果为<code>32</code>，则系统是以<code>UEFI</code>模式引导且使用<code>32</code>位<code>IA32 UEFI</code>，虽然其受支持，但引导加载程序只能使用<code>systemd-boot</code>和<code>GRUB</code>。如果文件不存在，则系统可能是以<code>BIOS</code>模式（或<code>CSM</code>模式）引导。确保系统以UEFI模式启动。</p>
<h4 id="禁用reflector服务"><a class="markdownIt-Anchor" href="#禁用reflector服务"></a> 禁用reflector服务</h4>
<p>禁用reflector服务，避免将需要的镜像源删除</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">systemctl stop reflector</span><br></pre></td></tr></table></figure>
<h4 id="连接网络"><a class="markdownIt-Anchor" href="#连接网络"></a> 连接网络</h4>
<h5 id="无线连接"><a class="markdownIt-Anchor" href="#无线连接"></a> 无线连接</h5>
<p>无线连接使用iwctl进行认证连接</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">iwctl</span><br><span class="line">device list</span><br><span class="line">station wlan0 scan</span><br><span class="line">station wlan0 connect [essid]</span><br><span class="line"><span class="built_in">exit</span></span><br></pre></td></tr></table></figure>
<h5 id="有线连接"><a class="markdownIt-Anchor" href="#有线连接"></a> 有线连接</h5>
<p>一般只要接上网线即可直接联网</p>
<h4 id="测试网络"><a class="markdownIt-Anchor" href="#测试网络"></a> 测试网络</h4>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">ping baidu.com</span><br></pre></td></tr></table></figure>
<p>稍等片刻，如果能看到数据返回，即说明已经联网，<code>ctrl+c</code>终止当前命令。若无法连接，使用<code>ip link set [device name] up</code>来激活对应网卡后再重新网络连接与测试。</p>
<h4 id="更新系统时钟"><a class="markdownIt-Anchor" href="#更新系统时钟"></a> 更新系统时钟</h4>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># timedatectl set-ntp true    # 将系统时间与网络事件进行同步</span></span><br><span class="line">timedatectl status          <span class="comment"># 查看服务状态</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>在Live环境中<code>systemd-timesyncd</code>默认启用，系统连接网络后，系统时间会自动同步，不用使用set-ntp来开启<br />
使用<code>timedatectl</code>确认系统时间准确</p>
</blockquote>
<h4 id="配置pacman"><a class="markdownIt-Anchor" href="#配置pacman"></a> 配置pacman</h4>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">vim /etc/pacman.conf</span><br></pre></td></tr></table></figure>
<p>开启pacman输出颜色和多线程下载</p>
<figure class="highlight plaintext"><figcaption><span>/etc/pacman.conf</span></figcaption><table><tr><td class="code"><pre><span class="line">Color</span><br><span class="line">ILoveCandy</span><br><span class="line"></span><br><span class="line">ParallelDownloads = 8</span><br></pre></td></tr></table></figure>
<p>编辑<code>/etc/pacman.d/mirrorlist</code>文件，选择China的https镜像源放到最上</p>
<h4 id="分区"><a class="markdownIt-Anchor" href="#分区"></a> 分区</h4>
<h5 id="设置分区"><a class="markdownIt-Anchor" href="#设置分区"></a> 设置分区</h5>
<blockquote>
<p>注意：下面的nvmen1等分区修改为你对应的设备分区信息</p>
</blockquote>
<p>使用<code>fdisk</code>分区，<code>p</code>输出分区表，<code>n</code>创建新的分区，<code>t</code>设置分区类型，<code>w</code>保存并退出，<code>q</code>不保存退出，<code>h</code>输出帮助信息</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">fdisk /dev/nvme0n1</span><br></pre></td></tr></table></figure>
<p>分为两个区：</p>
<ul>
<li>/dev/nvme0n1p1: 300M</li>
<li>/dev/nvme0n1p2: 剩余空间</li>
</ul>
<h5 id="格式化分区"><a class="markdownIt-Anchor" href="#格式化分区"></a> 格式化分区</h5>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">mkfs.fat -F32 /dev/nvme0n1p1</span><br><span class="line">mkfs.btrfs /dev/nvme0n1p2</span><br></pre></td></tr></table></figure>
<h5 id="创建子卷"><a class="markdownIt-Anchor" href="#创建子卷"></a> 创建子卷</h5>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">mount /dev/nvme0n1p2 /mnt/Arch --<span class="built_in">mkdir</span></span><br><span class="line"><span class="built_in">cd</span> /mnt/Arch</span><br><span class="line">btrfs subvolume create @</span><br><span class="line">btrfs subvolume create @boot</span><br><span class="line">btrfs subvolume create @home</span><br><span class="line">btrfs subvolume create @var</span><br><span class="line">btrfs subvolume create @pkg</span><br><span class="line">btrfs subvolume create @<span class="built_in">log</span></span><br><span class="line">btrfs subvolume create @swapfile</span><br><span class="line">umount /mnt/Arch</span><br></pre></td></tr></table></figure>
<h5 id="挂载目录"><a class="markdownIt-Anchor" href="#挂载目录"></a> 挂载目录</h5>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">mount /dev/nvme0n1p2 -o compress=zstd,noatime,ssd,discard=async,space_cache=v2,subvol=@  /mnt/Arch --<span class="built_in">mkdir</span></span><br><span class="line">mount /dev/nvme0n1p2 -o compress=zstd,noatime,ssd,discard=async,space_cache=v2,subvol=@boot  /mnt/Arch/boot --<span class="built_in">mkdir</span></span><br><span class="line">mount /dev/nvme0n1p2 -o compress=zstd,noatime,ssd,discard=async,space_cache=v2,subvol=@home  /mnt/Arch/home --<span class="built_in">mkdir</span></span><br><span class="line">mount /dev/nvme0n1p2 -o compress=zstd,noatime,ssd,discard=async,space_cache=v2,subvol=@var  /mnt/Arch/var --<span class="built_in">mkdir</span></span><br><span class="line">mount /dev/nvme0n1p2 -o compress=zstd,noatime,ssd,discard=async,space_cache=v2,subvol=@<span class="built_in">log</span>  /mnt/Arch/var/log --<span class="built_in">mkdir</span></span><br><span class="line">mount /dev/nvme0n1p2 -o compress=zstd,noatime,ssd,discard=async,space_cache=v2,subvol=@pkg  /mnt/Arch/var/cache/pacman/pkg --<span class="built_in">mkdir</span></span><br><span class="line">mount /dev/nvme0n1p2 -o compress=zstd,noatime,ssd,discard=async,space_cache=v2,subvol=@swapfile  /mnt/Arch/swapfile --<span class="built_in">mkdir</span></span><br><span class="line">mount /dev/nvme0n1p1 /mnt/Arch/boot/efi --<span class="built_in">mkdir</span></span><br></pre></td></tr></table></figure>
<h3 id="安装系统和必要工具"><a class="markdownIt-Anchor" href="#安装系统和必要工具"></a> 安装系统和必要工具</h3>
<p>安装基础系统</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">pacstrap -K /mnt/Arch base linux linux-firmware     <span class="comment"># -K选项在安装软件包时在目标中初始化一个空的pacman密钥</span></span><br></pre></td></tr></table></figure>
<p>如果使用linux-zen内核，则使用以下命令</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">pacstrap -K /mnt/Arch base linux-zen linux-zen-headers linux-firmware</span><br></pre></td></tr></table></figure>
<p>安装必要软件</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">pacstrap /mnt/Arch networkmanager <span class="built_in">sudo</span> neovim</span><br></pre></td></tr></table></figure>
<h3 id="配置系统"><a class="markdownIt-Anchor" href="#配置系统"></a> 配置系统</h3>
<h4 id="分区信息导入"><a class="markdownIt-Anchor" href="#分区信息导入"></a> 分区信息导入</h4>
<p>生成目录配置文件fstab：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">genfstab -U /mnt/Arch &gt;&gt; /mnt/Arch/etc/fstab</span><br></pre></td></tr></table></figure>
<p>检查<code>fstab</code>文件</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> /mnt/Arch/fstab</span><br></pre></td></tr></table></figure>
<h4 id="chroot"><a class="markdownIt-Anchor" href="#chroot"></a> Chroot</h4>
<p>切换根系统</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">arch-chroot /mnt/Arch</span><br></pre></td></tr></table></figure>
<h4 id="配置系统时间"><a class="markdownIt-Anchor" href="#配置系统时间"></a> 配置系统时间</h4>
<p>设置时区</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ln</span> -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span><br></pre></td></tr></table></figure>
<p>设置硬件时间，生成/etc/adjtime</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">hwclock --systohc</span><br></pre></td></tr></table></figure>
<p>开启时间同步</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">timedatectl set-ntp <span class="literal">true</span></span><br></pre></td></tr></table></figure>
<p>把硬件时钟（RCT）以本地时间来保存时间（Windows保存硬件时钟的方式，实现两者的时间同步，而不是相差8小时）</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">timedatectl set-local-rtc <span class="literal">true</span></span><br></pre></td></tr></table></figure>
<h4 id="地区设置"><a class="markdownIt-Anchor" href="#地区设置"></a> 地区设置</h4>
<p>设置系统语言，编辑<code>/etc/locale.gen</code>和<code>/etc/locale.conf</code></p>
<p><code>/etc/locale.gen</code>删除<code>en_US.UTF-8 UTF-8</code>前面的<code>#</code></p>
<figure class="highlight plaintext"><figcaption><span>/etc/locale.gen</span></figcaption><table><tr><td class="code"><pre><span class="line">en_US.UTF-8 UTF-8</span><br></pre></td></tr></table></figure>
<p>创建<code>/etc/locale.conf</code>，设置语言变量</p>
<figure class="highlight plaintext"><figcaption><span>/etc/locale.conf</span></figcaption><table><tr><td class="code"><pre><span class="line">LANG=en_US.UTF-8</span><br></pre></td></tr></table></figure>
<p>生成区域设置</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">locale-gen</span><br></pre></td></tr></table></figure>
<h4 id="网络配置"><a class="markdownIt-Anchor" href="#网络配置"></a> 网络配置</h4>
<h5 id="设置主机名"><a class="markdownIt-Anchor" href="#设置主机名"></a> 设置主机名</h5>
<p>创建<code>/etc/hostname</code>，设置为你想为主机取的主机名</p>
<figure class="highlight plaintext"><figcaption><span>/etc/hostname</span></figcaption><table><tr><td class="code"><pre><span class="line">yourhostname</span><br></pre></td></tr></table></figure>
<h5 id="设置hosts"><a class="markdownIt-Anchor" href="#设置hosts"></a> 设置hosts</h5>
<p>Hosts文件(也称为etc/ Hosts)是Windows(和其他操作系统)用于将IP地址映射到主机名或域名的文本文件。此文件充当本地计算机的本地DNS服务，它覆盖计算机通过网络连接到的DNS服务器的映射。<a href="https://www.digitalcitizen.life/etc-hosts-file-windows/#google_vignette">^1</a></p>
<p>编辑<code>/etc/hosts</code>，添加以下内容</p>
<figure class="highlight plaintext"><figcaption><span>/etc/hosts</span></figcaption><table><tr><td class="code"><pre><span class="line">127.0.0.1   localhost</span><br><span class="line">::1         localhost</span><br><span class="line">127.0.1.1   yourhostname.localdomain    yourhostname</span><br></pre></td></tr></table></figure>
<p>两个文件中的<code>yourhostname</code>要保持一致</p>
<h4 id="initramfs"><a class="markdownIt-Anchor" href="#initramfs"></a> Initramfs</h4>
<p>创建Initramfs</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">mkinitcpio -P</span><br></pre></td></tr></table></figure>
<h4 id="启动加载器"><a class="markdownIt-Anchor" href="#启动加载器"></a> 启动加载器</h4>
<p>安装grub和efi管理器等</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> pacman -S grub efibootmgr os-prober</span><br><span class="line">grub-install --target=x86_64-efi --efi-directory /boot/efi --bootloader-id=GRUB     <span class="comment"># 安装grub，命名为GRUB</span></span><br></pre></td></tr></table></figure>
<p>有些电脑的UEFI系统需要在一个特定位置上有一个可启动的文件，才会显示你想要的启动选项。但是有时候，即使你用grub-install命令安装了GRUB引导程序，它在VisualBIOS启动顺序里也可能看不到。解决方法就是用以下命令，把GRUB安装在一个默认的启动路径上：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">grub-install --target=x86_64-efi --efi-directory /boot/efi --removable </span><br></pre></td></tr></table></figure>
<p>另一种方法是将已安装的GRUB EFI可执行文件移动到默认/回退路径：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mv</span> /boot/efi/grub /boot/efi/BOOT</span><br><span class="line"><span class="built_in">mv</span> /boot/efi/EFI/BOOT/grubx64.efi /boot/efi/EFI/BOOT/BOOTX64.EFI</span><br></pre></td></tr></table></figure>
<p><a href="https://wiki.archlinux.org/title/GRUB#Default/fallback_boot_path">参考Arch Linux官方文档</a></p>
<p>编辑<code>/etc/default/grub</code></p>
<figure class="highlight plaintext"><figcaption><span>/etc/default/grub</span></figcaption><table><tr><td class="code"><pre><span class="line">GRUB_DEFAULT=0                                      # 默认启动项，默认为0，如果安装了Windows和Archlinux双系统，则0为Archlinux，2为Windows</span><br><span class="line">GRUB_CMDLINE_LINUX_DEFAULT=&quot;loglevel=5 nowatchdog&quot;  # 内核参数，删除quiet，将loglevel设置为5以显示更详细的日志信息，方便查看调试信息。添加nowatchdog关闭watchdog服务，加快开关机速度</span><br><span class="line">GRUB_SAVEDEFAULT=false                              # 将这次选择的启动项作为下次的默认启动项，由于grub无法写入btrfs文件系统，该选项无效，因此将其关闭</span><br><span class="line">GRUB_DISABLE_OS_PROBER=false                        # false为启用os-prober，使grub调用os-prober检测其他操作系统</span><br></pre></td></tr></table></figure>
<p>生成Grub配置文件</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">grub-mkconfig /boot/grub/grub.cfg</span><br></pre></td></tr></table></figure>
<p>当输出类似以下信息，则生成成功</p>
<blockquote>
<p>Found linux image: /boot/vmlinuz-linux-zen<br />
Found initrd image: /boot/intel-ucode.img /boot/initramfs-linux-zen.img<br />
Found fallback initrd image(s) in /boot:  intel-ucode.img initramfs-linux-zen-fallback.img<br />
Adding boot menu entry for UEFI Firmware Settings …<br />
done</p>
</blockquote>
<p>如果使用了<code>--removable</code>参数，但是又想自定义Bootloader的ID，可以使用efibootmgr进行重命名</p>
<p>首先使用efibootmgr命令找到对应的启动项</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">efibootmgr</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">BootCurrent: 0002</span><br><span class="line">Timeout: 0 seconds</span><br><span class="line">BootOrder: 0002,0000,0007,0008</span><br><span class="line">Boot0000* Windows Boot Manager	HD(1,GPT,08b3ed34-07fe-4e11-b9cd-44509ff2c405,0x800,0x32000)/\EFI\Microsoft\Boot\bootmgfw.efi57494e444f5753000100000088000000780000004200430044004f0042004a004500430054003d007b00390064006500610038003600320063002d0035006300640064002d0034006500370030002d0061006300630031002d006600330032006200330034003400640034003700390035007d00000061000100000010000000040000007fff0400</span><br><span class="line">Boot0002* UEFI OS	HD(1,GPT,b17d053f-31c1-4aed-b5d5-f00c2397f26c,0x800,0x96000)/\EFI\BOOT\BOOTX64.EFI</span><br></pre></td></tr></table></figure>
<p>我这里的启动项是<code>Boot0002</code>，记住后面的<code>\EFI\BOOT\BOOTX64.EFI</code>，以及你的EFI分区（我的分区是/dev/nvme0n1p1）</p>
<p>然后执行以下命令：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">efibootmgr -c -d <span class="string">&#x27;/dev/nvme0n1p1&#x27;</span> -L <span class="string">&quot;Arch Linux&quot;</span> -l \\EFI\\BOOT\\BOOTX64.EFI</span><br></pre></td></tr></table></figure>
<p>这样就会把UEFI启动项命名为<code>Arch Linux</code></p>
<h4 id="设置密码"><a class="markdownIt-Anchor" href="#设置密码"></a> 设置密码</h4>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">passwd</span><br></pre></td></tr></table></figure>
<h4 id="安装完成"><a class="markdownIt-Anchor" href="#安装完成"></a> 安装完成</h4>
<p>通过<code>exit</code>退出chroot环境，<code>umount -R /mnt/Arch</code>取消硬盘挂载（如果显示busy，则先cd到其他目录再取消），输入<code>reboot</code>重启电脑</p>
<h3 id="常用系统配置"><a class="markdownIt-Anchor" href="#常用系统配置"></a> 常用系统配置</h3>
<h4 id="创建普通用户"><a class="markdownIt-Anchor" href="#创建普通用户"></a> 创建普通用户</h4>
<p>创建一个普通用户jack并为他创建home目录</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">useradd -m jack</span><br></pre></td></tr></table></figure>
<p>给jack赋予sudo提权的能力</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">EDITOR=nvim visudo</span><br></pre></td></tr></table></figure>
<p>找到对应位置并添加一行</p>
<figure class="highlight plaintext"><figcaption><span>/etc/sudoers</span></figcaption><table><tr><td class="code"><pre><span class="line">## Uncomment to allow members of group wheel to execute any command</span><br><span class="line"># %wheel ALL=(ALL:ALL) ALL</span><br><span class="line">jack ALL=(ALL:ALL) ALL</span><br></pre></td></tr></table></figure>
<p><code>:wq</code>保存退出</p>
<p>随后第一次使用<code>sudo</code>命令时，会显示以下内容，根据提示输入密码即可</p>
<blockquote>
<p>We trust you have received the usual lecture from the local System<br />
Administrator. It usually boils down to these three things:</p>
<pre><code>#1) Respect the privacy of others.
#2) Think before you type.
#3) With great power comes great responsibility.
</code></pre>
<p>For security reasons, the password you type will not be visible.</p>
<p>[sudo] password for jack:</p>
</blockquote>
<h4 id="swap-file配置"><a class="markdownIt-Anchor" href="#swap-file配置"></a> Swap File配置</h4>
<p>关闭交换文件存储目录的写时复制（CoW）功能</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">chattr +C /swapfile</span><br></pre></td></tr></table></figure>
<p>创建交换文件</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">btrfs filesystem mkswapfile --size 16g --uuid clear /swapfile/swapfile</span><br></pre></td></tr></table></figure>
<p>激活交换文件</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">swapon /swapfile/swapfile</span><br></pre></td></tr></table></figure>
<p>编辑fstab文件，添加一个交换文件的条目</p>
<figure class="highlight plaintext"><figcaption><span>/etc/fstab</span></figcaption><table><tr><td class="code"><pre><span class="line">/swapfile/swapfile none swap defaults 0 0</span><br></pre></td></tr></table></figure>
<h4 id="启用网络"><a class="markdownIt-Anchor" href="#启用网络"></a> 启用网络</h4>
<p>启用<code>NetworkManager.service</code>服务</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> systemctl start NetworkManager.service</span><br></pre></td></tr></table></figure>
<p>输入<code>nmtui</code>打开网络管理器的TUI界面，使用方向键、回车键和ESC键进行网络连接配置</p>
<p>设置NetworkManager开机自启</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> systemctl <span class="built_in">enable</span> NetworkManager.service</span><br></pre></td></tr></table></figure>
<h4 id="启用ssh"><a class="markdownIt-Anchor" href="#启用ssh"></a> 启用ssh</h4>
<h5 id="安装启用"><a class="markdownIt-Anchor" href="#安装启用"></a> 安装启用</h5>
<p>安装<code>openssh</code>，这个软件包包含了服务端和客户端</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> pacman -S openssh</span><br></pre></td></tr></table></figure>
<p>启用<code>sshd</code>服务</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> systemctl start sshd</span><br></pre></td></tr></table></figure>
<h5 id="设置ssh免密登陆"><a class="markdownIt-Anchor" href="#设置ssh免密登陆"></a> 设置ssh免密登陆</h5>
<p>在客户端生成ssh密钥</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa</span><br></pre></td></tr></table></figure>
<p>在<code>/home/jack/.ssh/</code>（Windows的目录在C:/Users/Username/.ssh）中可以看到两个文件<code>id_rsa</code>、<code>id_rsa.pub</code>，将id_rsa.pub文件的内容复制到远程服务器的/home/jack/.ssh/authorized_keys文件中</p>
<p>Linux使用以下命令自动复制</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">ssh-copy-id jack@remote_host</span><br></pre></td></tr></table></figure>
<p>尝试SSH连接：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">ssh jack@remote_host</span><br></pre></td></tr></table></figure>
<p>若设置正确，即可免密登陆</p>
<h4 id="笔记本合盖不睡眠"><a class="markdownIt-Anchor" href="#笔记本合盖不睡眠"></a> 笔记本合盖不睡眠</h4>
<p>编辑<code>/etc/systemd/logind.conf</code>，在<code>Login</code>下方添加<code>HandleLidSwitch=ignore</code></p>
<p>重启<code>systemd-logind</code>服务使配置生效</p>
<h2 id="常用工具配置"><a class="markdownIt-Anchor" href="#常用工具配置"></a> 常用工具配置</h2>
<h3 id="aur依赖"><a class="markdownIt-Anchor" href="#aur依赖"></a> AUR依赖</h3>
<p>安装AUR包需要两个重要工具</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> pacman -S git base-devel       <span class="comment"># 版本管理工具  基础编译包组</span></span><br></pre></td></tr></table></figure>
<h3 id="man手册分页显示工具"><a class="markdownIt-Anchor" href="#man手册分页显示工具"></a> man手册分页显示工具</h3>
<p>man命令指定语言</p>
<blockquote>
<p>需要安装语言包<code>man-pages-zh_cn</code></p>
</blockquote>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">man -L zh_CN [文档]</span><br></pre></td></tr></table></figure>
<!-- ## Minecraft服务器搭建-->
<h2 id="reference"><a class="markdownIt-Anchor" href="#reference"></a> Reference</h2>
<p><a href="https://wiki.archlinux.org/title/Installation_guide">Arch Linux Installation Guide</a></p>
<p><a href="https://sspai.com/post/78916">现代化的 Archlinux 安装，Btrfs、快照、休眠以及更多。</a></p>
<p><a href="https://www.cnblogs.com/yafengabc/p/5172862.html">Archlinux在Btrfs分区上的安装（bios篇）——yafeng</a></p>
<p><a href="https://arch.icekylin.online/guide/">archlinux 简明指南</a></p>
<p><a href="https://archlinuxstudio.github.io/ArchLinuxTutorial/#/">Arch Linux 安装使用教程 - ArchTutorial - Arch Linux Studio</a></p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Arch Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker学习</title>
    <url>/2024/05/09/Docker%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<h1 id="docker学习"><a class="markdownIt-Anchor" href="#docker学习"></a> Docker学习</h1>
<h2 id="安装"><a class="markdownIt-Anchor" href="#安装"></a> 安装</h2>
<p>使用包管理器安装</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> pacman -Syyu docker</span><br></pre></td></tr></table></figure>
<p>安装完后记得把电脑重启一下，然后启动<code>docker</code>服务</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> systemctl restart docker</span><br></pre></td></tr></table></figure>
<h2 id="命令解读"><a class="markdownIt-Anchor" href="#命令解读"></a> 命令解读</h2>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line">    --name mysql \</span><br><span class="line">    -p 3306:3306 \</span><br><span class="line">    -e TZ=Asia/Shanghai \</span><br><span class="line">    -e MYSQL_ROOT_PASSWORD=123 \</span><br><span class="line">    mysql</span><br></pre></td></tr></table></figure>
<ul>
<li><code>docker run -d</code>: 创建并运行一个容器，<code>-d</code>为后台运行</li>
<li><code>--name mysql</code>: 给容器起名，必须唯一</li>
<li><code>-p 3306:3306</code>: 端口映射
<ul>
<li>容器有独立的网络空间，宿主机无法直接连接到容器，可以将容器的端口映射到宿主机的端口，外部就可以通过宿主机的这个端口转发到容器的端口，从而实现连接</li>
<li>宿主机端口:容器端口</li>
</ul>
</li>
<li><code>-e</code>: 设置一些容器的环境变量</li>
<li><code>mysql</code>: 指定运行的镜像的名字，根据这个名字下载对应的镜像
<ul>
<li>镜像名称一般为两部分：<code>[repository]:[tag]</code>
<ul>
<li>repository: 镜像名</li>
<li>tag: 镜像的版本</li>
</ul>
</li>
<li>未指定tag时，默认为<code>latest</code>，代表最新版本镜像</li>
</ul>
</li>
</ul>
<blockquote>
<p>所有docker命令都可以通过<code>--help</code>参数查看说明，比如</p>
<p><code>docker run --help</code></p>
</blockquote>
<h2 id="常见命令"><a class="markdownIt-Anchor" href="#常见命令"></a> 常见命令</h2>
<ul>
<li>查看本地镜像  <figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">docker images</span><br></pre></td></tr></table></figure>
</li>
<li>删除本地镜像  <figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">docker rmi</span><br></pre></td></tr></table></figure>
</li>
<li>构建镜像  <figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">docker build</span><br></pre></td></tr></table></figure>
</li>
<li>保存镜像文件  <figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">docker save</span><br></pre></td></tr></table></figure>
</li>
<li>加载镜像文件  <figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">docker load</span><br></pre></td></tr></table></figure>
</li>
<li>从仓库拉取镜像  <figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">docker pull</span><br></pre></td></tr></table></figure>
</li>
<li>创建并运行镜像：每次运行都会创建一个新的容器并运行  <figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">docker run</span><br></pre></td></tr></table></figure>
</li>
<li>停止容器：将容器停止，但是容器还在，下次不用重复创建  <figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">docker stop</span><br></pre></td></tr></table></figure>
</li>
<li>启动容器：将存在的容器启动  <figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">docker start</span><br></pre></td></tr></table></figure>
</li>
<li>查看容器进程  <figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">docker ps</span><br></pre></td></tr></table></figure>
<ul>
<li>查看所有容器，包括已经停止的  <figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">docker ps -a</span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
<li>进入容器内部：使用bash进入mysql容器（或者直接进入mysql的root用户）  <figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it mysql bash</span><br><span class="line">docker <span class="built_in">exec</span> -it mysql mysql -u root -p</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="数据卷"><a class="markdownIt-Anchor" href="#数据卷"></a> 数据卷</h2>
<p>**数据卷（vulume）**是一个虚拟目录，是容器内目录与宿主机目录之间映射的桥梁</p>
<p>数据卷在宿主机对对应的目录在<code>/var/lib/docker/volumes</code></p>
<p>数据卷对宿主机和容器的文件是双向绑定的，对其中一个修改，对应的另一个也会修改</p>
<p>在创建容器的同时完成数据卷的挂载：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">docker run -d ... -v 数据卷名称:容器内目录</span><br></pre></td></tr></table></figure>
<ul>
<li>查看数据卷  <figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">docker volume <span class="built_in">ls</span></span><br></pre></td></tr></table></figure>
</li>
<li>查看某个数据卷的详细信息  <figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">docker volume inspect [volume name]</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><code>docker inspect Blog</code>输出信息：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&quot;Mounts&quot;: [</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;Type&quot;: &quot;volume&quot;,</span><br><span class="line">        &quot;Name&quot;: &quot;html&quot;,</span><br><span class="line">        &quot;Source&quot;: &quot;/var/lib/docker/volumes/html/_data&quot;,</span><br><span class="line">        &quot;Destination&quot;: &quot;/usr/share/nginx/html&quot;,</span><br><span class="line">        &quot;Driver&quot;: &quot;local&quot;,</span><br><span class="line">        &quot;Mode&quot;: &quot;z&quot;,</span><br><span class="line">        &quot;RW&quot;: true,</span><br><span class="line">        &quot;Propagation&quot;: &quot;&quot;</span><br><span class="line">    &#125;</span><br><span class="line">],</span><br></pre></td></tr></table></figure>
<p>挂载信息：</p>
<ul>
<li>种类</li>
<li>挂载卷名字</li>
<li>宿主机目录</li>
<li>容器目录</li>
</ul>
]]></content>
      <categories>
        <category>Docker</category>
      </categories>
      <tags>
        <tag>Docker</tag>
        <tag>Container</tag>
      </tags>
  </entry>
  <entry>
    <title>Fcitx5输入法的安装配置</title>
    <url>/2024/05/03/Fcitx5%E8%BE%93%E5%85%A5%E6%B3%95%E7%9A%84%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h1 id="fcitx5输入法的安装配置"><a class="markdownIt-Anchor" href="#fcitx5输入法的安装配置"></a> Fcitx5输入法的安装配置</h1>
<h2 id="安装fcitx5"><a class="markdownIt-Anchor" href="#安装fcitx5"></a> 安装Fcitx5</h2>
<p>在Arch Linux中，推荐使用Fcitx5输入法</p>
<p>安装以下必要库</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> pacman -S fcitx5-im fcitx5-chinese-addons fcitx5-chinese-addons fcitx5-pinyin-zhwiki   <span class="comment"># 输入法框架      输入法中文组件      词库</span></span><br></pre></td></tr></table></figure>
<p>设置环境变量。如果使用X11，则全局设置以下环境变量（可在/etc/environment中添加）。如果使用支持文本输入的Wayland合成器，则为每一个Xwayland应用程序设置此环境变量。</p>
<figure class="highlight plaintext"><figcaption><span>/etc/environment</span></figcaption><table><tr><td class="code"><pre><span class="line">GTK_IM_MODULE=fcitx</span><br><span class="line">QT_IM_MODULE=fcitx</span><br></pre></td></tr></table></figure>
<p>对于通用X11应用程序，通过以下环境变量启用 XIM 支持：</p>
<figure class="highlight plaintext"><figcaption><span>/etc/environment</span></figcaption><table><tr><td class="code"><pre><span class="line">XMODIFIERS=@im=fcitx</span><br></pre></td></tr></table></figure>
<h2 id="添加中文输入法"><a class="markdownIt-Anchor" href="#添加中文输入法"></a> 添加中文输入法</h2>
<p>启动fcitx5，启用fcitx5-configtool进行配置</p>
<p>Available Input Method栏下方取消<code>Only Show Current Language</code>选项，找到简体中文（中国）下方的Pinyin，双击添加</p>
<img src="Add_Pinyin.png" style="max-width:70%">
<h2 id="配置字典和云拼音"><a class="markdownIt-Anchor" href="#配置字典和云拼音"></a> 配置字典和云拼音</h2>
<p>点上方的<code>Addons</code>，选择Pinyin，找到Cloud Pinyin，将<code>Backend</code>设置为<code>Baidu</code></p>
<img src="Fcitx5_Pinyin_Configure.png" style="max-width:70%">
<table>
    <tr>
        <td><center><img src="Cloud_Pinyin_1.png" style="max-width:80%">
        <td><center><img src="Cloud_Pinyin_Baidu.png" style="max-width:100%">
    </tr>
</table>
<p>找到<code>Manage Dictionaries</code>，查看zhwiki词库是否已添加。</p>
<img src="Dictionaries.png" style="max-width:100%">
<h2 id="配置外观"><a class="markdownIt-Anchor" href="#配置外观"></a> 配置外观</h2>
<p>找到Classic User Interface，配置自己喜欢的字体和上面安装的nord主题<br />
<img src="UI_Settings.png" style="max-width:70%"></p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Input Method</tag>
        <tag>Fcitx5</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo功能测试</title>
    <url>/2024/05/07/Hexo%E5%8A%9F%E8%83%BD%E6%B5%8B%E8%AF%95/</url>
    <content><![CDATA[<h1 id="hexo功能测试"><a class="markdownIt-Anchor" href="#hexo功能测试"></a> Hexo功能测试</h1>
<h2 id="引用"><a class="markdownIt-Anchor" href="#引用"></a> 引用</h2>
<blockquote>
<p>引用引用引用引用引用引用引用引用引用引用引用引用引用引用引用引用引用引用引用引用引用引用<br />
引用引用引用引用引用引用引用引用引用引用引用引用引用引用引用引用引用引用引用引用引用引用<br />
引用引用引用引用引用引用引用引用引用引用引用引用引用引用引用引用引用引用引用引用引用引用</p>
</blockquote>
<h2 id="代码块"><a class="markdownIt-Anchor" href="#代码块"></a> 代码块</h2>
<figure class="highlight c++"><figcaption><span>test.cpp</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"> </span><br><span class="line"><span class="comment">// 基类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Shape</span> </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">   <span class="comment">// 提供接口框架的纯虚函数</span></span><br><span class="line">   <span class="function"><span class="keyword">virtual</span> <span class="type">int</span> <span class="title">getArea</span><span class="params">()</span> </span>= <span class="number">0</span>;</span><br><span class="line">   <span class="function"><span class="type">void</span> <span class="title">setWidth</span><span class="params">(<span class="type">int</span> w)</span></span></span><br><span class="line"><span class="function">   </span>&#123;</span><br><span class="line">      width = w;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="function"><span class="type">void</span> <span class="title">setHeight</span><span class="params">(<span class="type">int</span> h)</span></span></span><br><span class="line"><span class="function">   </span>&#123;</span><br><span class="line">      height = h;</span><br><span class="line">   &#125;</span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line">   <span class="type">int</span> width;</span><br><span class="line">   <span class="type">int</span> height;</span><br><span class="line">&#125;;</span><br><span class="line"> </span><br><span class="line"><span class="comment">// 派生类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Rectangle</span>: <span class="keyword">public</span> Shape</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">   <span class="function"><span class="type">int</span> <span class="title">getArea</span><span class="params">()</span></span></span><br><span class="line"><span class="function">   </span>&#123; </span><br><span class="line">      <span class="keyword">return</span> (width * height); </span><br><span class="line">   &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Triangle</span>: <span class="keyword">public</span> Shape</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">   <span class="function"><span class="type">int</span> <span class="title">getArea</span><span class="params">()</span></span></span><br><span class="line"><span class="function">   </span>&#123; </span><br><span class="line">      <span class="keyword">return</span> (width * height)/<span class="number">2</span>; </span><br><span class="line">   &#125;</span><br><span class="line">&#125;;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   Rectangle Rect;</span><br><span class="line">   Triangle  Tri;</span><br><span class="line"> </span><br><span class="line">   Rect.<span class="built_in">setWidth</span>(<span class="number">5</span>);</span><br><span class="line">   Rect.<span class="built_in">setHeight</span>(<span class="number">7</span>);</span><br><span class="line">   <span class="comment">// 输出对象的面积</span></span><br><span class="line">   cout &lt;&lt; <span class="string">&quot;Total Rectangle area: &quot;</span> &lt;&lt; Rect.<span class="built_in">getArea</span>() &lt;&lt; endl;</span><br><span class="line"> </span><br><span class="line">   Tri.<span class="built_in">setWidth</span>(<span class="number">5</span>);</span><br><span class="line">   Tri.<span class="built_in">setHeight</span>(<span class="number">7</span>);</span><br><span class="line">   <span class="comment">// 输出对象的面积</span></span><br><span class="line">   cout &lt;&lt; <span class="string">&quot;Total Triangle area: &quot;</span> &lt;&lt; Tri.<span class="built_in">getArea</span>() &lt;&lt; endl; </span><br><span class="line"> </span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="数学公式"><a class="markdownIt-Anchor" href="#数学公式"></a> 数学公式</h2>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><msubsup><mo>∫</mo><mrow><mo>−</mo><mi mathvariant="normal">∞</mi></mrow><mi mathvariant="normal">∞</mi></msubsup><msup><mi>e</mi><mrow><mo>−</mo><msup><mi>x</mi><mn>2</mn></msup></mrow></msup><mi>d</mi><mi>x</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><munderover><mo>∑</mo><mrow><mi>n</mi><mo>=</mo><mn>1</mn></mrow><mi mathvariant="normal">∞</mi></munderover><mfrac><mn>1</mn><msup><mi>n</mi><mn>2</mn></msup></mfrac><mo>=</mo><mfrac><msup><mi>π</mi><mn>2</mn></msup><mn>6</mn></mfrac></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><munder><mo><mi>lim</mi><mo>⁡</mo></mo><mrow><mi>x</mi><mo>→</mo><mi mathvariant="normal">∞</mi></mrow></munder><msup><mrow><mo fence="true">(</mo><mn>1</mn><mo>+</mo><mfrac><mn>1</mn><mi>x</mi></mfrac><mo fence="true">)</mo></mrow><mi>x</mi></msup><mo>=</mo><mi>e</mi></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}
    &amp;f(x) = \int_{-\infty}^{\infty} e^{-x^2} dx \\
    &amp;\sum_{n=1}^{\infty} \frac{1}{n^2} = \frac{\pi^2}{6} \\
    &amp;\lim_{x \to \infty} \left(1 + \frac{1}{x}\right)^x = e
\end{aligned}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:8.657405em;vertical-align:-4.0787025em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.5787025em;"><span style="top:-6.8158075em;"><span class="pstrut" style="height:3.6513970000000002em;"></span><span class="mord"></span></span><span style="top:-3.8941295em;"><span class="pstrut" style="height:3.6513970000000002em;"></span><span class="mord"></span></span><span style="top:-0.8227245000000001em;"><span class="pstrut" style="height:3.6513970000000002em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.0787025em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.5787025em;"><span style="top:-6.8158075em;"><span class="pstrut" style="height:3.6513970000000002em;"></span><span class="mord"><span class="mord"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011249999999999316em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.414292em;"><span style="top:-1.7880500000000001em;margin-left:-0.44445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3.8129000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.970281em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.0369199999999998em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mord mathnormal">d</span><span class="mord mathnormal">x</span></span></span><span style="top:-3.8941295em;"><span class="pstrut" style="height:3.6513970000000002em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.882887em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.267113em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.491108em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">6</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-0.8227245000000001em;"><span class="pstrut" style="height:3.6513970000000002em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-2.4em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mrel mtight">→</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">lim</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.504292em;"><span style="top:-3.9029000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathnormal">e</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.0787025em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>
<h2 id="图片测试"><a class="markdownIt-Anchor" href="#图片测试"></a> 图片测试</h2>
<img src="测试图片.png" style="max_width:50%">
]]></content>
      <categories>
        <category>Blog</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>blog</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo博客常见问题</title>
    <url>/2024/05/06/Hexo%E5%8D%9A%E5%AE%A2%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<h1 id="hexo博客常见问题"><a class="markdownIt-Anchor" href="#hexo博客常见问题"></a> Hexo博客常见问题</h1>
<h2 id="图片存储方案"><a class="markdownIt-Anchor" href="#图片存储方案"></a> 图片存储方案</h2>
<p>在上一章中，我们配置了在创建博客同时创建一个同名文件夹存储图片等文件，但是当我们在博客的Markdown文件中引用图片文件，图片并不能显示出来</p>
<img src="Image_Reference_Failed.png" style="max-width:100%;">
<h3 id="官方方案"><a class="markdownIt-Anchor" href="#官方方案"></a> 官方方案</h3>
<p><a href="https://hexo.io/docs/asset-folders.html">官方</a>给出了一些解决方案，这里我用一个最简单的方法</p>
<p>在<code>_config.yml</code>配置文件中配置以下内容</p>
<figure class="highlight yml"><figcaption><span>[Blogroot]/_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">post_asset_folder:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">marked:</span></span><br><span class="line">  <span class="attr">prependRoot:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">postAsset:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>
<p>如果创建了一篇博客&quot;Hello&quot;，则会在<code>source/_posts</code>文件夹中同时创建一个同名的<code>Hello</code>文件夹，将<code>PicGo.png</code>图片文件放置于<code>Hello</code>文件夹中，在&quot;<a href="http://Hello.md">Hello.md</a>&quot;使用Markdown格式引用图片文件即可</p>
<figure class="highlight md"><figcaption><span>source/_posts/first_blog.md</span></figcaption><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: first<span class="emphasis">_blog</span></span><br><span class="line"><span class="emphasis">date: 2024-05-03 18:20:08</span></span><br><span class="line"><span class="emphasis">tags:</span></span><br><span class="line"><span class="emphasis">---</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis"># first blog</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">![](<span class="link">PicGo.png</span>)</span></span><br></pre></td></tr></table></figure>
<p>可以看到图片成功显示出来</p>
<img src="Image_Displayed.png" style="max-width:100%;">
<blockquote>
<p>在博客主页的图片似乎还是不能显示，只有打开具体某篇博客的页面才能显示出来。。。</p>
</blockquote>
<h3 id="图床"><a class="markdownIt-Anchor" href="#图床"></a> 图床</h3>
<p>另一个方案可以使用图床，我在另一篇博客中有教怎么用Github搭建图床</p>
<h2 id="模板"><a class="markdownIt-Anchor" href="#模板"></a> 模板</h2>
<p>在执行<code>hexo new</code>命令时，Hexo会在对应的目录根据模板文件生成一个新的文件，可以对模板进行自定义</p>
<figure class="highlight md"><figcaption><span>scaffolds/post.md</span></figcaption><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: &#123;&#123; title &#125;&#125;</span><br><span class="line">date: &#123;&#123; date &#125;&#125;</span><br><span class="line">categories: </span><br><span class="line"><span class="bullet">-</span> </span><br><span class="line">tags: </span><br><span class="line"><span class="bullet">-</span> </span><br></pre></td></tr></table></figure>
<h2 id="hexo的katex支持"><a class="markdownIt-Anchor" href="#hexo的katex支持"></a> Hexo的Katex支持</h2>
<h3 id="方案一"><a class="markdownIt-Anchor" href="#方案一"></a> 方案一</h3>
<p>安装插件<a href="https://github.com/hexojs/hexo-math">hexo-math</a>，通过标签插件支持<a href="https://katex.org/">KaTeX</a>和<a href="https://www.mathjax.org/">MathJax</a></p>
<p>在文章信息部分启用katex和mathjax选项</p>
<figure class="highlight md"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: Hexo博客常见问题</span><br><span class="line">date: 2024-05-06 15:39:50</span><br><span class="line">categories:</span><br><span class="line"><span class="bullet">-</span> Blog</span><br><span class="line">tags:</span><br><span class="line"><span class="bullet">-</span> Hexo</span><br><span class="line"><span class="bullet">-</span> Blog</span><br><span class="line">katex: true</span><br><span class="line"><span class="section">mathjax: false</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure>
<p>然后就可以数学公式就可以用CSS格式进行渲染了，像这样</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">&#123;% katex %&#125;</span><br><span class="line">c = \pm\sqrt&#123;<span class="selector-tag">a</span>^<span class="number">2</span> + <span class="selector-tag">b</span>^<span class="number">2</span>&#125;</span><br><span class="line">&#123;% endkatex %&#125;</span><br></pre></td></tr></table></figure>
<h3 id="next主题方案"><a class="markdownIt-Anchor" href="#next主题方案"></a> NexT主题方案</h3>
<p>用另一个渲染内核代替默认内核</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">npm un hexo-renderer-marked --save</span><br><span class="line">npm i hexo-renderer-markdown-it-plus --save</span><br></pre></td></tr></table></figure>
<p>修改NexT主题配置</p>
<figure class="highlight yml"><figcaption><span>[Blogroot]/_config.next.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">math:</span></span><br><span class="line">  <span class="string">...</span></span><br><span class="line">  <span class="attr">katex:</span></span><br><span class="line">    <span class="comment"># See: https://github.com/KaTeX/KaTeX/tree/master/contrib/copy-tex</span></span><br><span class="line">    <span class="attr">copy_tex:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>
<h2 id="punycode模块报警告"><a class="markdownIt-Anchor" href="#punycode模块报警告"></a> punycode模块报警告</h2>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(node:7616) [DEP0040] DeprecationWarning: The `punycode` module is deprecated. Please use a userland alternative instead.</span><br><span class="line">(Use `node --trace-deprecation ...` to show where the warning was created)</span><br></pre></td></tr></table></figure>
<p>安装<code>punycode</code>模块</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">npm install punycode --save</span><br></pre></td></tr></table></figure>
<p>在node_modules目录中找到包含<code>require('punycode')</code>的文件，在<code>punycode</code>的后面添加上<code>/</code></p>
<p>我使用的markdown-it模块中，<code>index.js</code>文件使用了这个模块，修改文件内容</p>
<figure class="highlight js"><figcaption><span>[Blogroot]/node_modules/markdown-it/lib/index.js</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> punycode     = <span class="built_in">require</span>(<span class="string">&#x27;punycode/&#x27;</span>);</span><br></pre></td></tr></table></figure>
<h2 id="latex警告"><a class="markdownIt-Anchor" href="#latex警告"></a> LaTex警告</h2>
<p>使用<code>\\</code>或<code>\newline</code>进行<span class='katex-error' title='ParseError: KaTeX parse error: Undefined control sequence: \Latex at position 1: \̲L̲a̲t̲e̲x̲'>\Latex</span>中的换行时，会有以下警告，但是能正常换行</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">LaTeX-incompatible input and strict mode is set to &#x27;warn&#x27;: In LaTeX, \\ or \newline does nothing in display mode [newLineInDisplayMode]</span><br></pre></td></tr></table></figure>
<p>通义千问的解释如下</p>
<blockquote>
<p>显示模式与文本模式：LaTeX中有两种基本的数学模式，一种是文本模式（text mode），用于正文中的小公式；另一种是显示模式（display mode），用于独立于正文、通常居中的大块数学公式。在文本模式中，\或\newline可以用来实现换行，但在显示模式下，这些命令不用于控制换行，因为数学公式的布局是由LaTeX自动管理的。</p>
<p>严格模式的影响：如果你的系统或编译器设置了严格的模式（比如，strict选项被设置为warn），它会更加仔细地检查潜在的错误或不当用法，并给出警告而不是直接忽略。这样的警告机制有助于开发者或作者发现并修正可能的排版问题。</p>
</blockquote>
<p>解决方法：避免直接在数学模式中使用换行符</p>
<h3 id="使用align环境"><a class="markdownIt-Anchor" href="#使用align环境"></a> 使用align环境</h3>
<p>对于较为复杂的数学公式，尤其是那些需要对齐的多行公式，可以使用align环境。在Markdown中插入KaTeX公式时，你需要使用\begin{align}…\end{align}环境。每个等式行末尾使用\来换行，并且可以使用&amp;符号来指定对齐点。</p>
<p>例如：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">$$</span><br><span class="line">\begin&#123;align&#125;</span><br><span class="line">\cos^2(x) + \sin^2(x) &amp;= 1 \\</span><br><span class="line">\frac&#123;d&#125;&#123;dx&#125;\sin(x) &amp;= \cos(x)</span><br><span class="line">\end&#123;align&#125;</span><br><span class="line">$$</span><br></pre></td></tr></table></figure>
<p>请注意，由于Markdown和KaTeX的解析方式，确保你的Markdown编辑器或渲染器支持这种语法。在一些场景下，你可能需要直接嵌入HTML来包裹KaTeX的标签以确保正确解析。</p>
<h3 id="分别显示多个公式"><a class="markdownIt-Anchor" href="#分别显示多个公式"></a> 分别显示多个公式</h3>
<p>如果不需要对齐，只是简单地想在两个公式之间换行，可以将它们分别放在两个$$…$$块中：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">$$</span><br><span class="line">\cos^2(x) + \sin^2(x) = 1</span><br><span class="line">$$</span><br><span class="line"></span><br><span class="line">$$</span><br><span class="line">\frac&#123;d&#125;&#123;dx&#125;\sin(x) = \cos(x)</span><br><span class="line">$$</span><br></pre></td></tr></table></figure>
<p>这种方法虽然简单，但不会像align那样提供对齐功能。</p>
<p>注意事项<br />
确保你的Markdown处理器或所用的KaTeX插件支持这些高级数学环境的解析。<br />
在实际应用中，根据你的Markdown编辑器或平台的具体配置（如是否支持拓展的数学环境），可能需要进行适当调整。</p>
<h2 id="reference"><a class="markdownIt-Anchor" href="#reference"></a> Reference</h2>
<p><a href="https://theme-next.js.org/docs/third-party-services/math-equations.html?highlight=math">Math Equations - NexT</a></p>
<p><a href="https://blog.csdn.net/u014378628/article/details/134555420">DeprecationWarning: The <code>punycode</code> module is deprecated. Please use a userland alternative instead.</a></p>
]]></content>
      <categories>
        <category>Blog</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Blog</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo博客添加标签和分类</title>
    <url>/2024/05/07/Hexo%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%E6%A0%87%E7%AD%BE%E5%92%8C%E5%88%86%E7%B1%BB/</url>
    <content><![CDATA[<h1 id="hexo博客添加标签和分类"><a class="markdownIt-Anchor" href="#hexo博客添加标签和分类"></a> Hexo博客添加标签和分类<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></h1>
<h2 id="配置博客标签"><a class="markdownIt-Anchor" href="#配置博客标签"></a> 配置博客标签</h2>
<p>首先要创建一个标签页面，在博客根目录输入</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">hexo new page tags</span><br></pre></td></tr></table></figure>
<p>在创建的文章中添加页面类型，如下：</p>
<figure class="highlight md"><figcaption><span>[Blogroot]/source/tags/index.md</span></figcaption><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: tags</span><br><span class="line">date: 2024-05-07 08:53:57</span><br><span class="line"><span class="section">type: &quot;tags&quot;</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure>
<p>在博客中添加标签，比如这篇博客的标签：</p>
<figure class="highlight md"><figcaption><span>[Blogroot]/source/_posts/搭建我的Hexo博客.md</span></figcaption><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: 搭建我的Hexo博客</span><br><span class="line">date: 2024-01-17 13:35:13</span><br><span class="line">tags:</span><br><span class="line"><span class="bullet">-</span> Hexo</span><br><span class="line"><span class="section">- Blog</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure>
<p>部分主题需要取消注释开启tags页面，比如NexT主题：</p>
<figure class="highlight yml"><figcaption><span>[Blogroot]/themes/next/_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="comment">#home: / || fa fa-home</span></span><br><span class="line">  <span class="comment">#about: /about/ || fa fa-user</span></span><br><span class="line">  <span class="attr">tags:</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-tags</span></span><br><span class="line">  <span class="attr">categories:</span> <span class="string">/categories/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-th</span></span><br><span class="line">  <span class="attr">archives:</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-archive</span></span><br><span class="line">  <span class="comment">#schedule: /schedule/ || fa fa-calendar</span></span><br><span class="line">  <span class="comment">#sitemap: /sitemap.xml || fa fa-sitemap</span></span><br><span class="line">  <span class="comment">#commonweal: /404/ || fa fa-heartbeat</span></span><br></pre></td></tr></table></figure>
<h2 id="博客分类"><a class="markdownIt-Anchor" href="#博客分类"></a> 博客分类</h2>
<p>与博客标签类似，将<code>tags</code>改为<code>categories</code>即可</p>
<p><code>categories/index.md</code>文件内容如下</p>
<figure class="highlight md"><figcaption><span>[Blogroot]/source/categories/index.md</span></figcaption><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: categories</span><br><span class="line">date: 2024-05-07 09:04:59</span><br><span class="line"><span class="section">type: &quot;categories&quot;</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure>
<p>博客信息部分如下：</p>
<figure class="highlight md"><figcaption><span>[Blogroot]/source/_posts/搭建我的Hexo博客.md</span></figcaption><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: 搭建我的Hexo博客</span><br><span class="line">date: 2024-01-17 13:35:13</span><br><span class="line">tags:</span><br><span class="line"><span class="bullet">-</span> Hexo</span><br><span class="line"><span class="bullet">-</span> Blog</span><br><span class="line">categories:</span><br><span class="line"><span class="section">- Blog</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p><a href="https://www.jianshu.com/p/e17711e44e00">Hexo使用攻略-添加分类及标签</a> <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
      <categories>
        <category>Blog</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Blog</tag>
        <tag>标签</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo插件推荐</title>
    <url>/2023/05/24/Hexo%E6%8F%92%E4%BB%B6%E6%8E%A8%E8%8D%90/</url>
    <content><![CDATA[<h1 id="hexo插件推荐"><a class="markdownIt-Anchor" href="#hexo插件推荐"></a> Hexo插件推荐</h1>
<p>hexo-blog-encrypt</p>
<p>hexo-hide-posts</p>
<p>hexo-symbols-count-time</p>
<p>hexo-math</p>
<p>hexo-deployer-git</p>
]]></content>
      <categories>
        <category>Blog</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Blog</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo自定义CSS</title>
    <url>/2024/05/07/Hexo%E8%87%AA%E5%AE%9A%E4%B9%89CSS/</url>
    <content><![CDATA[<h1 id="hexo自定义css"><a class="markdownIt-Anchor" href="#hexo自定义css"></a> Hexo自定义CSS</h1>
<h2 id="创建css文件"><a class="markdownIt-Anchor" href="#创建css文件"></a> 创建CSS文件</h2>
<p>首先创建<code>[Blogroot]/source/_data/style.css</code>文件</p>
<p>在这个文件里编写自定义的CSS样式</p>
<figure class="highlight css"><figcaption><span>[Blogroot]/source/_data/style.css</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.blockquote</span> &#123;</span><br><span class="line">    <span class="attribute">text-align</span>: left; <span class="comment">/* 将引用块中的文本左对齐 */</span></span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">0</span>; <span class="comment">/* 去除引用块的左侧间距 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="主题设置"><a class="markdownIt-Anchor" href="#主题设置"></a> 主题设置</h2>
<h3 id="clean-blog主题"><a class="markdownIt-Anchor" href="#clean-blog主题"></a> clean-blog主题</h3>
<p>进入主题<code>layout</code>目录，在主题的布局文件中<code>&lt;head&gt;</code>标签</p>
<p>clean-blog主题的<code>&lt;head&gt;</code>标签在<code>layout/head.ejs</code>中，且有注释说明自定义的位置，按照说明操作，如果主题中没有注释，则在<code>&lt;head&gt;</code>标签内添加下面的内容</p>
<figure class="highlight plaintext"><figcaption><span>[Blogroot]/themes/clean-blog/layout/_partial/head.ejs</span></figcaption><table><tr><td class="code"><pre><span class="line">&lt;!-- Custom CSS --&gt;</span><br><span class="line">&lt;%- css(&#x27;css/style.css&#x27;) %&gt;</span><br></pre></td></tr></table></figure>
<p>创建<code>[Blogroot]/style.css</code>文件，在里面编写就好了</p>
<h3 id="next主题"><a class="markdownIt-Anchor" href="#next主题"></a> NexT主题</h3>
<p>在主题配置文件中取消注释</p>
<figure class="highlight yml"><figcaption><span>[Blogroot]/_config.next.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">custom_file_path:</span></span><br><span class="line">  <span class="comment">#head: source/_data/head.njk</span></span><br><span class="line">  <span class="comment">#header: source/_data/header.njk</span></span><br><span class="line">  <span class="comment">#sidebar: source/_data/sidebar.njk</span></span><br><span class="line">  <span class="comment">#postMeta: source/_data/post-meta.njk</span></span><br><span class="line">  <span class="comment">#postBodyStart: source/_data/post-body-start.njk</span></span><br><span class="line">  <span class="comment">#postBodyEnd: source/_data/post-body-end.njk</span></span><br><span class="line">  <span class="attr">footer:</span> <span class="string">source/_data/footer.njk</span></span><br><span class="line">  <span class="comment">#bodyEnd: source/_data/body-end.njk</span></span><br><span class="line">  <span class="comment">#variable: source/_data/variables.styl</span></span><br><span class="line">  <span class="comment">#mixin: source/_data/mixins.styl</span></span><br><span class="line">  <span class="attr">style:</span> <span class="string">source/_data/styles.styl</span></span><br></pre></td></tr></table></figure>
<p>创建文件<code>[Blogroot]/source/_data/styles.styl</code>等文件，编辑文件</p>
<figure class="highlight styl"><figcaption><span>[Blogroot]/source/_data/styles.styl</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment">/* Body背景设置 */</span></span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">url</span>(/images/background.jpg) no-repeat fixed;</span><br><span class="line">    <span class="attribute">background-size</span>: cover;</span><br><span class="line">    <span class="attribute">background-position</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 文章背板颜色设置 */</span></span><br><span class="line"><span class="selector-class">.main-inner</span> &gt; <span class="selector-class">.sub-menu</span>,</span><br><span class="line"><span class="selector-class">.main-inner</span> &gt; <span class="selector-class">.post-block</span>,</span><br><span class="line"><span class="selector-class">.main-inner</span> &gt; <span class="selector-class">.tabs-comment</span>,</span><br><span class="line"><span class="selector-class">.main-inner</span> &gt; <span class="selector-class">.comments</span>,</span><br><span class="line"><span class="selector-class">.main-inner</span> &gt; <span class="selector-class">.pagination</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">245</span>, <span class="number">245</span>, <span class="number">245</span>, <span class="number">0.8</span>); <span class="comment">/* 背景色透明度设置 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 文字颜色设置 */</span></span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#000</span>; <span class="comment">/* 主体字体颜色为纯黑 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.posts-expand</span> <span class="selector-class">.post-title-link</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#222</span>; <span class="comment">/* 首页文章标题颜色 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.posts-expand</span> <span class="selector-class">.post-meta-container</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#62a7b6</span>; <span class="comment">/* 文章日期颜色 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 侧边框透明度设置 */</span></span><br><span class="line"><span class="selector-class">.sidebar</span> &#123;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">0.9</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 菜单栏颜色设置 */</span></span><br><span class="line"><span class="selector-class">.header-inner</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.7</span>); <span class="comment">/* 菜单栏背景色透明度设置 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 搜索框透明度设置 */</span></span><br><span class="line"><span class="selector-class">.popup</span> &#123;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">0.5</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 主体背景设置 */</span></span><br><span class="line"><span class="selector-class">.main-inner</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0</span>); <span class="comment">/* 主体背景透明 */</span></span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">40px</span>; <span class="comment">/* 调整组件位置 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 底部字体颜色设置 */</span></span><br><span class="line"><span class="selector-class">.footer-inner</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#555555</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 图片和table-container不透明设置 */</span></span><br><span class="line"><span class="selector-tag">img</span> &#123;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">1</span>; <span class="comment">/* 设置图片不透明 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.table-container</span> &#123;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">1</span>; <span class="comment">/* 设置 table-container 不透明 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>设定完成后，重新生成博客即可</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">hexo generate</span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Blog</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Blog</tag>
        <tag>CSS</tag>
      </tags>
  </entry>
  <entry>
    <title>IBus on Ubuntu</title>
    <url>/2024/05/06/IBus-in-Ubuntu/</url>
    <content><![CDATA[<h1 id="install-chinese-input-method"><a class="markdownIt-Anchor" href="#install-chinese-input-method"></a> Install Chinese Input Method</h1>
<p>If you choose English when you install ubuntu, there is not a Chinese input method installed, but you can install it with commands in the terminal.</p>
<h2 id="update-your-system"><a class="markdownIt-Anchor" href="#update-your-system"></a> Update Your System</h2>
<p>Before you install input method, you should update your software.</p>
<p>If you want to stay in 20.04(or what you are using), <strong>DON’T</strong> upgrade your system. Just update the software.</p>
<img src="not_upgrade_1.png" style="max-width:50%">
<img src="not_upgrade_2.png" style="max-width:50%">
<p>Update your software repository and upgrade your software<br />
Use <code>ctrl</code>+<code>alt</code>+<code>t</code> to start a terminal, and run the command to update</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt update     <span class="comment"># Update the software repository</span></span><br><span class="line"><span class="built_in">sudo</span> apt upgrade    <span class="comment"># Update the software. If failed, type `sudo apt upgrade --fix-missing` to try again.  </span></span><br><span class="line">reboot              <span class="comment"># Restart your computer.</span></span><br></pre></td></tr></table></figure>
<p>Or just click <code>Install Now</code> when the window pop up.</p>
<img src="update_1.png" style="max-width:70%">
<p>If you don’t see the pop-up window, you still have 2 ways to start the update.</p>
<p><img src="update_2.png" style="max-width:70%"> or <img src="Software_update.png" style="max-width:70%"></p>
<h2 id="install-the-pinyin-input-method"><a class="markdownIt-Anchor" href="#install-the-pinyin-input-method"></a> Install the Pinyin Input Method</h2>
<p>Install ibus-pinyin</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt install ibus-pinyin</span><br></pre></td></tr></table></figure>
<p>You’d better restart your system or log out and log in again for the ibus to load its profile again.</p>
<h2 id="setup-ibus"><a class="markdownIt-Anchor" href="#setup-ibus"></a> Setup IBus</h2>
<p>So what is <strong>IBus</strong>?</p>
<h2 id="ibus"><a class="markdownIt-Anchor" href="#ibus"></a> <a href="https://help.ubuntu.com/community/ibus">IBus</a></h2>
<p>The Intelligent Input Bus (IBus) is an input method framework for multilingual input in Unix-like operating systems. It’s called “Bus” because it has a bus-like architecture.</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">ibus-setup</span><br></pre></td></tr></table></figure>
<p>Click <code>Input Method</code>-<code>Add</code> and choose Pinyin (or Bopomofo if you like to).</p>
<table>
    <tr>
        <td ><center><img src="Add_Chinese_Input_Method.png" style="max-width:100%">
        <td ><center><img src="Add_Chinese_Input_Method_2.png" style="max-width:100%">
        <td ><center><img src="Add_Chinese_Input_Method_3.png" style="max-width:106%">
        </tr>
</table>
<h2 id="add-input-source"><a class="markdownIt-Anchor" href="#add-input-source"></a> Add Input Source</h2>
<p>Add input source in system settings by <code>Settings</code>-<code>Region &amp; Language</code>-<code>Input Sources</code>, click the <code>+</code> and add Chinese input method.</p>
<table>
    <tr>
        <td ><center><img src="settings.png" style="max-width:100%">
        <td ><center><img src="Region_and_Language.png" style="max-width:80%">
    </tr>
</table>
<img src="Region_and_Language_3.png" style="max-width:50%">
<p>Click Super(Win)+Space to switch your input method to Chinese and you can happily type Chinese.</p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Input Method</tag>
        <tag>Ubuntu</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux下腾讯系软件使用</title>
    <url>/2023/05/26/Linux%E4%B8%8B%E8%85%BE%E8%AE%AF%E7%B3%BB%E8%BD%AF%E4%BB%B6%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h1 id="linux下腾讯系软件使用"><a class="markdownIt-Anchor" href="#linux下腾讯系软件使用"></a> Linux下腾讯系软件使用</h1>
<h2 id="linux-qq"><a class="markdownIt-Anchor" href="#linux-qq"></a> Linux QQ</h2>
<p>在2022年年末，腾讯推出了全新的Linux QQ 3.0并<a href="https://im.qq.com/linuxqq/download.html">上线官网</a><sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>，经过几天使用，体验还不错</p>
<h3 id="arch-linux下的安装"><a class="markdownIt-Anchor" href="#arch-linux下的安装"></a> Arch Linux下的安装</h3>
<p>linuxqq已经被打包上传至<a href="https://aur.archlinux.org/packages/linuxqq">AUR</a>，安装可通过AUR helper进行</p>
<p>paur安装：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">paru -S linuxqq</span><br></pre></td></tr></table></figure>
<p>yay安装：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">yay -S linuxqq</span><br></pre></td></tr></table></figure>
<p>不使用AUR helper，手动构建安装</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://aur.archlinux.org/linuxqq.git <span class="comment"># 克隆linuxqq仓库</span></span><br><span class="line"><span class="built_in">cd</span> linuxqq                                      <span class="comment"># 进入linuxqq目录</span></span><br><span class="line">makepkg -si                                     <span class="comment"># 构建安装linuxqq 或者使用参数全称makepkg --syncdeps --install</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>说明：</p>
<p><code>s for syncdeps</code></p>
<p>s选项表示构建软件包并安装所需要的依赖包</p>
<p>当满足依赖包关系且软件包被构建成功时，将会在工作目录下生成一个包文件<code>pkgname-pkgver.pkg.tar.zst</code></p>
<p><code>i for install</code></p>
<p>使用<code>--install</code>进行安装</p>
</blockquote>
<h3 id="使用过程问题"><a class="markdownIt-Anchor" href="#使用过程问题"></a> 使用过程问题</h3>
<p>可能会发生闪退的现象，需要删除<code>~/.config/QQ/crash_files/</code>目录中的所有文件然后删除该目录的读写权限</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">chmod</span> -rw ~/.config/QQ/crash_files</span><br></pre></td></tr></table></figure>
<p>随后(也许)不会在出现闪退现象</p>
<h2 id="微信"><a class="markdownIt-Anchor" href="#微信"></a> 微信</h2>
<p>微信在Linux中有很多解决方案，比如Wine兼容层、虚拟机等，首选的是微信Linux原生版的重构<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup></p>
<h3 id="原生重构版微信"><a class="markdownIt-Anchor" href="#原生重构版微信"></a> 原生重构版微信</h3>
<p>微信的原生版已被打包到AUR包<a href="https://aur.archlinux.org/packages/wechat-uos-qt">wechat-uos-qt</a>中</p>
<h3 id="统信uos魔改版"><a class="markdownIt-Anchor" href="#统信uos魔改版"></a> 统信UOS魔改版</h3>
<p>安装<a href="https://aur.archlinux.org/packages/wechat-uos/">wechat-uos</a>AUR包即可，但是这个魔改版功能有所阉割</p>
<h3 id="wine"><a class="markdownIt-Anchor" href="#wine"></a> Wine</h3>
<p>在Arch Linux中有几种兼容层安装微信的方案</p>
<ul>
<li>depin-wine-wechat，为Arch Linux运行微信的Wine容器，版本为最新官方版</li>
<li>Deepin官网配置的Wine应用，<a href="https://aur.archlinux.org/packages/com.qq.weixin.deepin/">com.qq.weixin.deepin</a>，版本比较旧</li>
<li>archlinuxcn仓库的wine-for-wechat</li>
<li><a href="https://github.com/huan/docker-wechat">Docker容器</a></li>
</ul>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p><a href="https://wiki.archlinux.org/title/Tencent_QQ">Tencent QQ - ArchWiki</a> <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn2" class="footnote-item"><p><a href="https://wiki.archlinuxcn.org/wiki/%E5%BE%AE%E4%BF%A1">微信 - ArchWiki</a> <a href="#fnref2" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>QQ</tag>
        <tag>WeChat</tag>
        <tag>Tencent</tag>
      </tags>
  </entry>
  <entry>
    <title>Mariadb数据库安装配置</title>
    <url>/2024/05/03/Mariadb%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h1 id="mariadb安装配置"><a class="markdownIt-Anchor" href="#mariadb安装配置"></a> Mariadb安装配置</h1>
<h2 id="基本安装"><a class="markdownIt-Anchor" href="#基本安装"></a> 基本安装</h2>
<p>创建<code>/var/lib/mysql</code>目录并关闭目录的写时复制(CoW)</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> <span class="built_in">mkdir</span> /var/lib/mysql</span><br><span class="line">chattr +C /var/lib/mysql</span><br></pre></td></tr></table></figure>
<p>运行以下命令安装<code>mariadb</code>包并初始化</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> pacman -S mariadb</span><br><span class="line">mariadb-install-db --user=mysql --basedir=/usr --datadir=/var/lib/mysql</span><br></pre></td></tr></table></figure>
<p>设置Mariadb服务开机自动启动并立刻启动</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> systemctl <span class="built_in">enable</span> --now mariadb.service</span><br></pre></td></tr></table></figure>
<p>命令创建了两个具有所有特权的帐户。</p>
<ul>
<li>一个是<code>root@localhost</code>，它没有密码，但您需要是系统的<code>root</code>用户才能连接。例如，使用<code>sudo mysql</code>。</li>
<li>另一个是<code>mysql@localhost</code>，它也没有密码，但您需要是系统的<code>mysql</code>用户才能连接。连接后，你可以设置密码，如果你需要以有密码和无需<code>sudo</code>的任何这些用户身份连接。</li>
</ul>
<h2 id="添加用户"><a class="markdownIt-Anchor" href="#添加用户"></a> 添加用户</h2>
<p>创建用户普通用户<code>user</code>，密码为<code>password</code>，并赋予<code>mydb</code>数据库的所有权限</p>
<blockquote>
<p><code>localhost</code>表示运行本机登录</p>
<p><code>%</code>表示所有主机均可登录</p>
</blockquote>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> <span class="string">&#x27;user&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;password&#x27;</span>;</span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> PRIVILEGES <span class="keyword">ON</span> mydb.<span class="operator">*</span> <span class="keyword">TO</span> <span class="string">&#x27;user&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;password&#x27;</span>;</span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> PRIVILEGES <span class="keyword">ON</span> mydb.<span class="operator">*</span> <span class="keyword">TO</span> <span class="string">&#x27;user&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;password&#x27;</span>;</span><br><span class="line">FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure>
<h2 id="开启自动补全"><a class="markdownIt-Anchor" href="#开启自动补全"></a> 开启自动补全</h2>
<p>mariadb的自动补全默认关闭，需要手动开启。</p>
<p>修改客户端设置，在<code>client-maariadb</code>的下方添加<code>auto-rehash</code></p>
<figure class="highlight plaintext"><figcaption><span>/etc/my.cnf.d/client.cnf</span></figcaption><table><tr><td class="code"><pre><span class="line">[client-maariadb]</span><br><span class="line">auto-rehash</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Database</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Arch Linux</tag>
        <tag>数据库</tag>
        <tag>MySQL</tag>
        <tag>Mariadb</tag>
      </tags>
  </entry>
  <entry>
    <title>Python环境管理</title>
    <url>/2024/05/06/Python%E7%8E%AF%E5%A2%83%E7%AE%A1%E7%90%86/</url>
    <content><![CDATA[<h1 id="python环境管理"><a class="markdownIt-Anchor" href="#python环境管理"></a> Python环境管理</h1>
<h2 id="python不同版本安装"><a class="markdownIt-Anchor" href="#python不同版本安装"></a> Python不同版本安装</h2>
<p>以下举两个例子，其他Linux发行版大同小异</p>
<h2 id="arch-linux"><a class="markdownIt-Anchor" href="#arch-linux"></a> Arch Linux</h2>
<p>由于Arch Linux是一个滚动更新的发行版，官方源只提供最新的稳定版本（现在是Python3.12），如果想安装以前的版本或者预览版本，可以通过AUR进行安装</p>
<p>AUR安装Python3.10可以使用以下命令，其它版本同理（或者如果你喜欢，可以使用AUR助手）</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://aur.archlinux.org/python310</span><br><span class="line"><span class="built_in">cd</span> python310</span><br><span class="line">makepkg -si</span><br></pre></td></tr></table></figure>
<h2 id="ubuntu"><a class="markdownIt-Anchor" href="#ubuntu"></a> Ubuntu</h2>
<p>首先需要输入以下命令添加deadsnakes PPA<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> add-apt-repository ppa:deadsnakes/ppa</span><br><span class="line"><span class="built_in">sudo</span> apt update</span><br></pre></td></tr></table></figure>
<p>然后安装自己需要的版本</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt-get install python3.10 python3.10-venv</span><br></pre></td></tr></table></figure>
<h2 id="虚拟环境创建"><a class="markdownIt-Anchor" href="#虚拟环境创建"></a> 虚拟环境创建</h2>
<p>对多版本的Python进行管理，一般使用虚拟环境</p>
<p>创建虚拟环境可以通过<code>python3.x -m venv venv</code>（<code>python3.x</code>替换为你所需的Python版本）命令进行。</p>
<p>创建好虚拟环境以后，通过<code>source venv/bin/activate</code>命令将虚拟环境激活</p>
<p>随后即可使用<code>pip</code>命令在虚拟环境中管理第三方库文件。</p>
<p>如果想退出虚拟环境，输入<code>deactivate</code>命令。</p>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p><a href="https://launchpad.net/~deadsnakes/+archive/ubuntu/ppa">“deadsnakes” team</a> <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>SCNU编译原理2024年1月</title>
    <url>/2024/02/01/SCNU%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%862024%E5%B9%B41%E6%9C%88/</url>
    <content><![CDATA[<h1 id="华南师范大学scnu编译原理2024年1月期末卷"><a class="markdownIt-Anchor" href="#华南师范大学scnu编译原理2024年1月期末卷"></a> 华南师范大学SCNU编译原理2024年1月期末卷</h1>
<h3 id="华南师范大学-人工智能学院-2023-2024-学年-第1学期编译原理a卷"><a class="markdownIt-Anchor" href="#华南师范大学-人工智能学院-2023-2024-学年-第1学期编译原理a卷"></a> 华南师范大学 人工智能学院 2023-2024 学年 第(1)学期《编译原理》A卷</h3>
<h4 id="一-基础知识题-15分"><a class="markdownIt-Anchor" href="#一-基础知识题-15分"></a> 一、基础知识题 (15分)</h4>
<p>判断文法是否正确，若不正确请改正文法.</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>R</mi><mi>E</mi><mo>→</mo><mi>R</mi><mi>E</mi><mo>+</mo><mi>R</mi><mi>E</mi><mi mathvariant="normal">∣</mi><mi>R</mi><mi>E</mi><mo>−</mo><mi>R</mi><mi>E</mi><mi mathvariant="normal">∣</mi><mi>R</mi><mi>E</mi><mo>∗</mo><mi>R</mi><mi>E</mi><mi mathvariant="normal">∣</mi><mi>R</mi><mi>E</mi><mi mathvariant="normal">/</mi><mi>R</mi><mi>E</mi><mi mathvariant="normal">∣</mi><mo stretchy="false">(</mo><mi>R</mi><mi>E</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">RE\rightarrow RE+RE|RE-RE|RE*RE|RE/RE|(RE)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord">/</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord">∣</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mclose">)</span></span></span></span></span></p>
<h4 id="二-正则表达式-dfa分析题-15分"><a class="markdownIt-Anchor" href="#二-正则表达式-dfa分析题-15分"></a> 二、正则表达式-&gt;DFA分析题 (15分)</h4>
<p>程序题∶nfa转dfa中，写出求闭包的程序代码.(实验二内容)</p>
<h4 id="三-自顶向下分析设计题-18分"><a class="markdownIt-Anchor" href="#三-自顶向下分析设计题-18分"></a> 三、自顶向下分析设计题 (18分)</h4>
<p>程序题∶写出求follow集的程序代码及相关存储结构，<br />
设first集已得.(实验四内容)</p>
<h4 id="四-lr分析题-18分"><a class="markdownIt-Anchor" href="#四-lr分析题-18分"></a> 四、LR分析题 (18分)</h4>
<p>编译程序时常遇到识别前后括号问题，<br />
例如…{…}…(…{…[…]…}…)…{…[…]…}…，<br />
写出其文法，并判断文法是否为SLR(1)文法.</p>
<h4 id="五-语义分析题-18分"><a class="markdownIt-Anchor" href="#五-语义分析题-18分"></a> 五、语义分析题 (18分)</h4>
<p>输入二进制输出十进制, 如110.01=6.25, 写出识别二进制的文法，和二进制转十进制的属性文法.</p>
<h4 id="六-综合分析设计-16分"><a class="markdownIt-Anchor" href="#六-综合分析设计-16分"></a> 六、综合分析设计 (16分)</h4>
<p>写出识别正则表达式的文法，<br />
符号包括连接、选择’|‘、 重复’*’ 、闭包’+’ 、括号’( )'，<br />
然后写生成语法树的递归分析程序.</p>
]]></content>
      <categories>
        <category>编译原理</category>
      </categories>
      <tags>
        <tag>Compilers</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu下QQ音乐无法启动</title>
    <url>/2024/06/20/Ubuntu%E4%B8%8BQQ%E9%9F%B3%E4%B9%90%E6%97%A0%E6%B3%95%E5%90%AF%E5%8A%A8/</url>
    <content><![CDATA[<h1 id="ubuntu下qq音乐无法启动"><a class="markdownIt-Anchor" href="#ubuntu下qq音乐无法启动"></a> Ubuntu下QQ音乐无法启动</h1>
<p>QQ音乐安装完成后启动不久后闪退，在终端下启动，报错如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(electron) The default value of app.allowRendererProcessReuse is deprecated, it is currently &quot;false&quot;.  It will change to be &quot;true&quot; in Electron 9.  For more information please check https://github.com/electron/electron/issues/18397</span><br><span class="line">QQ login</span><br><span class="line">cookie set success</span><br><span class="line">cookie set success</span><br><span class="line">[6846:0620/214021.934203:FATAL:gpu_data_manager_impl_private.cc(1034)] The display compositor is frequently crashing. Goodbye.</span><br><span class="line">zsh: trace trap (core dumped)  qqmusic</span><br></pre></td></tr></table></figure>
<h2 id="原因分析"><a class="markdownIt-Anchor" href="#原因分析"></a> 原因分析</h2>
<p>原因不太确定，可能是以下原因：</p>
<ul>
<li>Wayland与Electron的沙盒机制有兼容性问题</li>
<li>GPU问题：在使用Wayland或特定的GPU驱动时，沙盒机制引发与GPU相关的兼容性问题，导致GPU进程崩溃</li>
</ul>
<h2 id="解决方式"><a class="markdownIt-Anchor" href="#解决方式"></a> 解决方式</h2>
<h3 id="关闭qq音乐的沙盒临时方案"><a class="markdownIt-Anchor" href="#关闭qq音乐的沙盒临时方案"></a> 关闭QQ音乐的沙盒（临时方案）</h3>
<p><strong>通过禁用沙盒可以解决这个问题，但是可能会降低应用程序的安全性</strong></p>
<p>打开启动项文件</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> nano /usr/share/applications/qqmusic.desktop</span><br></pre></td></tr></table></figure>
<p>以下是文件内容</p>
<figure class="highlight plaintext"><figcaption><span>/usr/share/applications/qqmusic.desktop</span></figcaption><table><tr><td class="code"><pre><span class="line">[Desktop Entry]</span><br><span class="line">Name=qqmusic</span><br><span class="line">Exec=/opt/qqmusic/qqmusic %U</span><br><span class="line">Terminal=false</span><br><span class="line">Type=Application</span><br><span class="line">Icon=qqmusic</span><br><span class="line">StartupWMClass=qqmusic</span><br><span class="line">Comment=Tencent QQMusic</span><br><span class="line">Categories=AudioVideo;</span><br></pre></td></tr></table></figure>
<p>在Exec一行加上参数<code>--no-sandbox</code></p>
<p>即修改后文件内容如下</p>
<figure class="highlight plaintext"><figcaption><span>/usr/share/applications/qqmusic.desktop</span></figcaption><table><tr><td class="code"><pre><span class="line">[Desktop Entry]</span><br><span class="line">Name=qqmusic</span><br><span class="line">Exec=/opt/qqmusic/qqmusic --no-sandbox %U</span><br><span class="line">Terminal=false</span><br><span class="line">Type=Application</span><br><span class="line">Icon=qqmusic</span><br><span class="line">StartupWMClass=qqmusic</span><br><span class="line">Comment=Tencent QQMusic</span><br><span class="line">Categories=AudioVideo;</span><br></pre></td></tr></table></figure>
<p>修改完成后通过桌面打开QQ音乐，可以看到能正常启动</p>
<img src="QQ音乐正常启动.png" style="max-width:50%">
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Ubuntu</tag>
        <tag>Electron</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu下的MySQL安装配置</title>
    <url>/2024/06/16/Ubuntu%E4%B8%8B%E7%9A%84MySQL%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h2 id="ubuntu下mysql的安装与配置"><a class="markdownIt-Anchor" href="#ubuntu下mysql的安装与配置"></a> Ubuntu下MySQL的安装与配置</h2>
<p>本案例实验需要把数据存入关系型数据库MySQL，同时，也需要安装MySQL为Hive提供元数据存储服务，因此，需要安装MySQL数据库。</p>
<p>通过<code>apt</code>安装MySQL</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt-get install mysql-server</span><br></pre></td></tr></table></figure>
<p>启动MySQL服务</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> service mysql start</span><br></pre></td></tr></table></figure>
<p>配置MySQL开机自动启动</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> systemctl <span class="built_in">enable</span> mysql</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Synchronizing state of mysql.service with SysV service script with /lib/systemd/systemd-sysv-install.</span><br><span class="line">Executing: /lib/systemd/systemd-sysv-install enable mysql</span><br><span class="line">Created symlink /etc/systemd/system/multi-user.target.wants/mysql.service → /lib/systemd/system/mysql.service.</span><br></pre></td></tr></table></figure>
<p>登录MySQl Shell</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> mysql -u root</span><br></pre></td></tr></table></figure>
<blockquote>
<p>在Ubuntu中，MySQL的root用户登录验证方式为<code>auth_socket</code>，允许Linux的同名用户<code>root</code>免密登录，而不能使用密码登录</p>
</blockquote>
<p>输入<code>exit</code>退出MySQL</p>
]]></content>
      <categories>
        <category>Database</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>MySQL</tag>
        <tag>Database</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu安装配置Waydroid</title>
    <url>/2024/06/17/Ubuntu%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AEWaydroid/</url>
    <content><![CDATA[<h1 id="ubuntu安装配置waydroid"><a class="markdownIt-Anchor" href="#ubuntu安装配置waydroid"></a> Ubuntu安装配置Waydroid</h1>
<h2 id="安装"><a class="markdownIt-Anchor" href="#安装"></a> 安装</h2>
<p>根据<a href="https://docs.waydro.id/usage/install-on-desktops">Waydroid的文档</a>安装好</p>
<p>安装前置软件</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt-get install curl ca-certificates -y</span><br></pre></td></tr></table></figure>
<p>添加软件源</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">curl https://repo.waydro.id | <span class="built_in">sudo</span> bash</span><br></pre></td></tr></table></figure>
<p>安装Waydroid</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt-get install -y waydroid</span><br></pre></td></tr></table></figure>
<p>启动Waydroid服务</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">systemctl start waydroid-container.service</span><br></pre></td></tr></table></figure>
<p>启动Waydroid以后显示“Intialize Waydroid”，点击Download下载安桌内核</p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Container</tag>
        <tag>Ubuntu</tag>
        <tag>Android</tag>
        <tag>Waydroid</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows与Linux双系统常见问题</title>
    <url>/2023/05/31/Windows%E4%B8%8ELinux%E5%8F%8C%E7%B3%BB%E7%BB%9F%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<h1 id="windows与linux双系统常见问题解决"><a class="markdownIt-Anchor" href="#windows与linux双系统常见问题解决"></a> Windows与Linux双系统常见问题解决</h1>
<h2 id="双系统八小时时间差"><a class="markdownIt-Anchor" href="#双系统八小时时间差"></a> 双系统八小时时间差</h2>
<p>原因：<br />
硬件时钟是存储在主板CMOS的时间，关机后该时钟仍然运行，主板电池为其供电。<br />
系统时间：软件系统的时钟。系统启动后读取硬件时间，然后独立运行。</p>
<ul>
<li><code>Local Time</code>: 本地时间，只有Windows使用，Windows把硬件时间当作本地时间，或同步时间后把本地时间写入主板，即当地时间与硬件时间一致</li>
<li><code>UTC</code>: 世界标准时间，Unix-like系统多数会使用，UTC时间经过加减时区后得到本地时间，操作系统中显示的时间与硬件时钟相差相应的时区，如北京时间是UTC+8，系统中的时间是硬件时间加上8小时</li>
</ul>
<p>当安装双系统后，两者同步时间后都会对主板时钟进行写入，而操作系统一般不会在开机时自动同步时间</p>
<h3 id="解决方法"><a class="markdownIt-Anchor" href="#解决方法"></a> 解决方法</h3>
<h4 id="修改系统的计时方式"><a class="markdownIt-Anchor" href="#修改系统的计时方式"></a> 修改系统的计时方式</h4>
<ul>
<li>将Windows的计时方式改为<code>UTC</code>
<ul>
<li>在<code>PowerShell</code>中运行以下命令：</li>
</ul>
  <figure class="highlight ps1"><table><tr><td class="code"><pre><span class="line">reg add “HKEY_LOCAL_MACHINE\System\CurrentControlSet\Control\TimeZoneInformation” /v RealTimeIsUniversal /d <span class="number">1</span> /t REG_QWORD /f</span><br></pre></td></tr></table></figure>
</li>
<li>将Linux的计时方式改为<code>Local Time</code>（这个方法好像没有生效）
<ul>
<li>以<code>root</code>用户运行以下命令（如果想改回<code>UTC</code>，则将<code>--localtime</code>改为<code>--utc</code>）</li>
</ul>
  <figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">hwclock -s --localtime</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="系统启动联网后自动同步时间"><a class="markdownIt-Anchor" href="#系统启动联网后自动同步时间"></a> 系统启动联网后自动同步时间</h4>
<h5 id="linux系统"><a class="markdownIt-Anchor" href="#linux系统"></a> Linux系统</h5>
<p>在Linux中，联网后一段时间，<code>systemd-timesyncd</code>服务会自动同步时间，不需要额外的操作设置</p>
<h5 id="windows系统"><a class="markdownIt-Anchor" href="#windows系统"></a> Windows系统</h5>
<p><code>Win+r</code>运行<code>services.msc</code>，打开服务管理页面</p>
<p>找到<code>Windows Time</code>服务，将启动类型修改为<strong>自动（延迟启动）</strong><br />
<img src="Windows时间服务.png" style="max-width:50%"></p>
<p>打开控制面板，找到<strong>时钟和区域</strong>，点击<strong>日期和时间</strong></p>
<p>切换到<code>Internet时间</code>标签，点击<strong>更改设置</strong>，将服务器修改为可用的NTP服务器，比如这里我选择了阿里云的服务器<code>ntp2.aliyun.com</code>，并勾选上<strong>与Internet时间服务器同步</strong><br />
<img src="修改NTP服务器.png" style="max-width:50%"></p>
<p>以后启动电脑并联网后，时间将会自动同步</p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Windows</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows清除、关闭备用内存</title>
    <url>/2024/05/12/Windows%E6%B8%85%E9%99%A4%E3%80%81%E5%85%B3%E9%97%AD%E5%A4%87%E7%94%A8%E5%86%85%E5%AD%98/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="前面的区域，以后再来探索吧~" data-whm="Oh, these decrypted content cannot be verified, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="b3fe808840df1b16236cc2288362085068e8d40bf1e6816d3ce9fe98164a871e">398176a844d281419bcb00a175eca18365c14269a666a62567aa69f152e8be121f3f74c97ba091e9f1fa51f71ebfce0f6c59db3ec9d79818be6b234a5c8925b1dd0cdc8490fc38293364cb71013708d31c156ff3ea208b34525de602bb1ab972657a740a5a209c22670944dabb67ca7800b0cdf81178228d892e9e6b73c1fc43c03896a241648f0f74318bd8bc0b90553cc0274e80bbe3b91fb8d9f1ae7e52a821083db01c8ea0c94fe5fbd8c3a0b8739f8a8399ca33206fd896a3d5fa88151db3e5cddbd790e116f8a57aa8dd0c25dd503d77acbcdf91276c0be8323c8d119461645bbd7279495ff619e293e4b10d6536ea5b6aa33810b529a54ac15848e368223f866cdd4e7a5c49cf8c93d3687b5684bfcda7e7ad3a8d0cf8c97957d665e417ea3f56f0c376da4394fb548ce9ae32639748e6a684c862378904b5178a2bc9344809735e6f40208e281d70d450fee3589ef26821d878bc0dd440a08dbba033292af0505fe8be54f8f1792c9deb629dd0ac2f1f7e914ebd6ae4871fee33145028d1e8dcae7c6407bd046f36ad8b2e2d5218d36821e9b35c17d3641646de63f47a1fdaf9923abe05447f547a07a4cd6b44c3e31fe987e73de83b752b9db6f2f58b1e4458c6ceb0d952d26746a60837fa03e396999d0a62053836e149106cb33ab8dba9f0db7342e9f2c5a5170d3438f5f7e15a138186fd3841eeeaa0dd3ee3bb8a71622f33cf3c4c7c0e9bdec6af213b16dd19bcb445d33f61f2a9aa42c6d0d0022b34eb2ce12302c87cd35ae0677a1dfb48f1645ff6132a4693b1ee0711f80d814a22c1b349b710198ff310723161290075777511ceaab209d70bed82202d4f6cdedd7dac350d795e9c447b2b0569d7980e5fcf3524886c29513804499368fa842754f674db1b10c3d70ce6f8755a44aee7aab1348c2011c5887fb8049c33d7569b8d548c961ed912f0bfd4bc50fe79</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-up">
      <input class="hbe hbe-input-field hbe-input-field-up" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-up" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-up">这里需要验证身份</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>Windows</tag>
        <tag>Memory</tag>
        <tag>加密</tag>
      </tags>
  </entry>
  <entry>
    <title>Z-Shell的配置</title>
    <url>/2024/05/06/Z-Shell%E7%9A%84%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h1 id="z-shell配置"><a class="markdownIt-Anchor" href="#z-shell配置"></a> Z-Shell配置</h1>
<h2 id="前置准备"><a class="markdownIt-Anchor" href="#前置准备"></a> 前置准备</h2>
<p>创建一个文件夹来存放zsh的配置</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> ~/.config/zsh/plugins</span><br></pre></td></tr></table></figure>
<h2 id="基础配置"><a class="markdownIt-Anchor" href="#基础配置"></a> 基础配置</h2>
<p>在第一次使用Z-Shell时，由于配置文件.zshrc不存在，会出现提示，按<code>1</code>进入配置选项</p>
<p>Please pick one of the following options:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(1)  Configure settings for history, i.e. command lines remembered</span><br><span class="line">     and saved by the shell.  (Recommended.)</span><br><span class="line"></span><br><span class="line">(2)  Configure the new completion system.  (Recommended.)</span><br><span class="line"></span><br><span class="line">(3)  Configure how keys behave when editing command lines.  (Recommended.)</span><br><span class="line"></span><br><span class="line">(4)  Pick some of the more common shell options.  These are simple &quot;on&quot;</span><br><span class="line">     or &quot;off&quot; switches controlling the shell&#x27;s features.  </span><br><span class="line"></span><br><span class="line">(0)  Exit, creating a blank ~/.zshrc file.</span><br><span class="line"></span><br><span class="line">(a)  Abort all settings and start from scratch.  Note this will overwrite</span><br><span class="line">     any settings from zsh-newuser-install already in the startup file.</span><br><span class="line">     It will not alter any of your other settings, however.</span><br><span class="line"></span><br><span class="line">(q)  Quit and do nothing else.  The function will be run again next time.</span><br><span class="line">--- Type one of the keys in parentheses --- </span><br></pre></td></tr></table></figure>
<h3 id="历史设置"><a class="markdownIt-Anchor" href="#历史设置"></a> 历史设置</h3>
<p>按1进入历史选项设置，我的设置如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">History configuration</span><br><span class="line">=====================</span><br><span class="line"></span><br><span class="line"># (1) Number of lines of history kept within the shell.</span><br><span class="line">HISTSIZE=100000                                                                      (set but not saved)</span><br><span class="line"># (2) File where history is saved.</span><br><span class="line">HISTFILE=~/.zsh_history                                                              (set but not saved)</span><br><span class="line"># (3) Number of lines of history to save to $HISTFILE.</span><br><span class="line">SAVEHIST=100000                                                                      (set but not saved)</span><br><span class="line"></span><br><span class="line"># (0)  Remember edits and return to main menu (does not save file yet)</span><br><span class="line"># (q)  Abandon edits and return to main menu</span><br><span class="line"></span><br><span class="line">--- Type one of the keys in parentheses ---</span><br></pre></td></tr></table></figure>
<h3 id="配置补全系统"><a class="markdownIt-Anchor" href="#配置补全系统"></a> 配置补全系统</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">The new completion system (compsys) allows you to complete</span><br><span class="line">commands, arguments and special shell syntax such as variables.  It provides</span><br><span class="line">completions for a wide range of commonly used commands in most cases simply</span><br><span class="line">by typing the TAB key.  Documentation is in the zshcompsys manual page.</span><br><span class="line">If it is not turned on, only a few simple completions such as filenames</span><br><span class="line">are available but the time to start the shell is slightly shorter.</span><br><span class="line"></span><br><span class="line">You can:</span><br><span class="line">  (1)  Turn on completion with the default options.</span><br><span class="line"></span><br><span class="line">  (2)  Run the configuration tool (compinstall).  You can also run</span><br><span class="line">       this from the command line with the following commands:</span><br><span class="line">        autoload -Uz compinstall</span><br><span class="line">        compinstall</span><br><span class="line">       if you don&#x27;t want to configure completion now.</span><br><span class="line"></span><br><span class="line">  (0)  Don&#x27;t turn on completion.</span><br><span class="line"></span><br><span class="line">--- Type one of the keys in parentheses ---</span><br></pre></td></tr></table></figure>
<p>按<code>2</code>进行自动补全功能的自定义</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">If you have some already defined by compinstall, edit the name of the</span><br><span class="line">file where these can be found.  Note that this will only work if they</span><br><span class="line">are exactly the form in which compinstall inserted them.  If you leave</span><br><span class="line">the line as it is, or empty, I won&#x27;t search.</span><br><span class="line">file&gt; /home/user/.zshrc</span><br></pre></td></tr></table></figure>
<p>直接回车即可</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">               *** compinstall: main menu ***</span><br><span class="line">Note that hitting `q&#x27; in menus does not abort the set of changes from</span><br><span class="line">lower level menus.  However, quitting at top level will ensure that nothing</span><br><span class="line">at all is actually written out.</span><br><span class="line"></span><br><span class="line">1.  Completers:  choose completion behaviour for tasks such as</span><br><span class="line">    approximation, spell-checking, expansion.</span><br><span class="line"></span><br><span class="line">2.  Matching control: set behaviour for case-insensitive matching,</span><br><span class="line">    extended (partial-word) matching and substring matching.</span><br><span class="line"></span><br><span class="line">3.  Styles for changing the way completions are displayed and inserted.</span><br><span class="line"></span><br><span class="line">4.  Styles for particular completions.</span><br><span class="line"></span><br><span class="line">c.  Change context (plus more information on contexts).</span><br><span class="line"></span><br><span class="line">q.  Return without saving.</span><br><span class="line">0.  Save and exit.</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h4 id="compliter配置"><a class="markdownIt-Anchor" href="#compliter配置"></a> Compliter配置</h4>
<p>按<code>1</code>，进入completers配置</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Current context: :completion:*</span><br><span class="line"></span><br><span class="line">The following completers are available.  Those marked `(*)&#x27; are already</span><br><span class="line">set for the context shown above.  If none are selected, the completers will</span><br><span class="line">not be set for this context at all.</span><br><span class="line"></span><br><span class="line">1. (*) Basic completion.</span><br><span class="line">2. (*) Approximate completion:  completion with correction of existing word.</span><br><span class="line">3. (*) Correction:  correct existing word, no completion.</span><br><span class="line">4. (*) Expansion: use globbing and parameter substitution, if possible.</span><br><span class="line"></span><br><span class="line">o.     Set options for the completers above.</span><br><span class="line">m.     Set completers that modify the behaviour of the four main ones above.</span><br><span class="line">q.     Return without saving.</span><br><span class="line">0.     Done setting completers.</span><br></pre></td></tr></table></figure>
<p>按<code>1</code>,<code>2</code>,<code>3</code>,<code>4</code>选择四个completer的选项，然后按<code>o</code></p>
<h5 id="设置completion选项"><a class="markdownIt-Anchor" href="#设置completion选项"></a> 设置:completion:*选项</h5>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Current context: :completion:*</span><br><span class="line"></span><br><span class="line">The following options are available.  Note that these require the relevant</span><br><span class="line">completers to be present, as set in the menu above this one.</span><br><span class="line"></span><br><span class="line">a.     Set options for approximation or correction.</span><br><span class="line">e.     Set options for expansion.</span><br><span class="line">q.     Return without saving.</span><br><span class="line"></span><br><span class="line">0.     Done setting options.</span><br></pre></td></tr></table></figure>
<h6 id="模糊和修正补全"><a class="markdownIt-Anchor" href="#模糊和修正补全"></a> 模糊和修正补全</h6>
<p>按a，进入模糊和改正匹配的设置</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Approximation and correction can correct the errors in what you have typed,</span><br><span class="line">up to a maximum number of errors which you can specify.  Each `error&#x27;</span><br><span class="line">is the omission of a character, the addition of a superfluous character,</span><br><span class="line">the substitution of one character by an incorrect one, or transposition of</span><br><span class="line">two different characters.</span><br><span class="line"></span><br><span class="line">Current context: :completion:*</span><br><span class="line"></span><br><span class="line">To have different values for approximation and correction, you should</span><br><span class="line">change the context appropriately.  For approximation, use</span><br><span class="line">`:completion:*:approximate:*&#x27; and for correction use</span><br><span class="line">`:completion:*:correct:*&#x27;.</span><br><span class="line"></span><br><span class="line">Enter maximum number of errors allowed:</span><br><span class="line"></span><br><span class="line">number&gt;3</span><br></pre></td></tr></table></figure>
<p>输入修正的错误字符个数</p>
<p>然后设置数字前缀行为的选项，用于指定在自动补全或近似补全时如何处理数字前缀：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Select behaviour of numeric prefix.</span><br><span class="line"></span><br><span class="line">1.     Numeric prefix is not used by approximation or completion.</span><br><span class="line">2.     Numeric prefix, if provided, gives max number of errors allowed,</span><br><span class="line">       replacing the number you just typed for that one completion.</span><br><span class="line">3.     Numeric prefix, if provided, prevents approximation or completion</span><br><span class="line">       from taking place at all for that one completion.</span><br><span class="line"></span><br><span class="line">--- Hit selection ---</span><br></pre></td></tr></table></figure>
<p>我选择的是2，可以在前面输入前缀表明允许的错误个数</p>
<h6 id="扩展选项"><a class="markdownIt-Anchor" href="#扩展选项"></a> 扩展选项</h6>
<p>按<code>e</code>进入扩展选项，选项：</p>
<ul>
<li>通配符扩展</li>
<li>替换功能</li>
<li>显示所有补全选项</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">The _expand completer can be tuned to perform any of globbing (filename</span><br><span class="line">generation), substitution (anything with a `$&#x27; or backquote), or</span><br><span class="line">normal completion (which is useful for inserting all possible completions</span><br><span class="line">into the command line).  For each feature, a 1 turns it on, while a 0 turns</span><br><span class="line">it off; if the feature is unset, that expansion will *not* be performed.</span><br><span class="line"></span><br><span class="line">You can also give more complicated mathematical expressions, which can use</span><br><span class="line">the parameter NUMERIC to refer to the numeric argument.  For example, the</span><br><span class="line">expression `NUMERIC == 2&#x27; means that the expansion takes effect if you</span><br><span class="line">type ESC-2 (Emacs mode) or 2 (Vi command mode) before the expansion.</span><br><span class="line">Quotes will be added automatically as needed.</span><br><span class="line"></span><br><span class="line">g.     Set condition to perform globbing: 1</span><br><span class="line">s.     Set condition to perform substitution: 1</span><br><span class="line">c.     Set condition to perform completion: 1</span><br><span class="line">0.     Done setting conditions (will not be saved until you leave options)</span><br><span class="line"></span><br><span class="line">--- Enter selection ---</span><br></pre></td></tr></table></figure>
<p>然后返回这个界面</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">              *** compinstall: completer menu ***</span><br><span class="line"></span><br><span class="line">Current context: :completion:*</span><br><span class="line"></span><br><span class="line">The following completers are available.  Those marked `(*)&#x27; are already</span><br><span class="line">set for the context shown above.  If none are selected, the completers will</span><br><span class="line">not be set for this context at all.</span><br><span class="line"></span><br><span class="line">1. (*) Basic completion.</span><br><span class="line">2. (*) Approximate completion:  completion with correction of existing word.</span><br><span class="line">3. (*) Correction:  correct existing word, no completion.</span><br><span class="line">4. (*) Expansion: use globbing and parameter substitution, if possible.</span><br><span class="line"></span><br><span class="line">o.     Set options for the completers above.</span><br><span class="line">m.     Set completers that modify the behaviour of the four main ones above.</span><br><span class="line">q.     Return without saving.</span><br><span class="line">0.     Done setting completers.</span><br></pre></td></tr></table></figure>
<h5 id="设置备用completers"><a class="markdownIt-Anchor" href="#设置备用completers"></a> 设置备用completers</h5>
<p>选择<code>m</code>设置备用Completers</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">              *** compinstall: minor completer menu ***</span><br><span class="line"></span><br><span class="line">Current context: :completion:*</span><br><span class="line"></span><br><span class="line">The following completers are available.  Those marked `(*)&#x27; are already</span><br><span class="line">set for the context shown above.  Note none of these are required for</span><br><span class="line">normal completion behaviour.</span><br><span class="line"></span><br><span class="line">1. (*) _ignored: Use patterns that were previously ignored if no matches so far.</span><br><span class="line">2. (*) _list:    Only list matches until the second time you hit TAB.</span><br><span class="line">3.     _oldlist: Keep matches generated by special completion functions.</span><br><span class="line">4. (*) _match:   If completion fails, retry with pattern matching.</span><br><span class="line">5.     _prefix:  If completion fails, retry ignoring the part after the cursor.</span><br><span class="line"></span><br><span class="line">o.     Set options for the completers above.</span><br><span class="line">q.     Return without saving.</span><br><span class="line">0.     Done setting minor completers.</span><br></pre></td></tr></table></figure>
<p>按<code>0</code>退出备用completer设置</p>
<h4 id="匹配控制"><a class="markdownIt-Anchor" href="#匹配控制"></a> 匹配控制</h4>
<p>设置了四个匹配器，按优先顺序：</p>
<ol>
<li>不匹配</li>
<li>小写匹配大写</li>
<li>大小写相互匹配</li>
<li>部分单词匹配，用三个字符<code>.</code>、<code>_</code>、<code>-</code>来表示省略部分进行匹配。实现这个功能需要在匹配的单词后面加上.，比如输入<code>c.u</code>不会匹配<code>comp.source.unix</code>，而输入<code>c.u.</code>会匹配。</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">              *** compinstall: matcher menu ***</span><br><span class="line"></span><br><span class="line">`Matchers&#x27; compare the completion code with the possible matches in some</span><br><span class="line">special way.  Numbers in parentheses show matchers to be tried and the order.</span><br><span class="line">The same number can be assigned to different matchers, meaning apply at the</span><br><span class="line">same time.  Omit a sequence number to try normal matching at that point.</span><br><span class="line">A `+&#x27; in the first line indicates the element is added to preceding matchers</span><br><span class="line">instead of replacing them; toggle this with `t&#x27;.  You don&#x27;t need to set</span><br><span class="line">all four, or indeed any matchers --- then the style will not be set.</span><br><span class="line"></span><br><span class="line">   (    )   `+&#x27; indicates add to previous matchers, else replace</span><br><span class="line">n. (1   ) No matchers; you may want to try this as the first choice.</span><br><span class="line">c. ( 2  ) Case-insensitive completion (lowercase matches uppercase)</span><br><span class="line">C. (  3 ) Case-insensitive completion (lower/uppercase match each other)</span><br><span class="line">p. (   4) Partial-word completion:  expand &#x27;f.b&#x27; to &#x27;foo.bar&#x27;, etc., in one go.</span><br><span class="line">          You can choose the separators (here `.&#x27;) used each time.</span><br><span class="line">s. (    ) Substring completion:  complete on substrings, not just initial</span><br><span class="line">          strings.  Warning: it is recommended this not be used for element 1.</span><br><span class="line"></span><br><span class="line">t.        Toggle replacing previous matchers (` &#x27; at top) or add (`+&#x27;)</span><br><span class="line">q.        Return without saving.</span><br><span class="line">0.        Done setting matchers.</span><br><span class="line"></span><br><span class="line">--- Hit selection --- p</span><br><span class="line">Set/unset for element number (1234)? 4</span><br><span class="line">Edit the set of characters which terminate partial words.  Typically</span><br><span class="line">these are punctuation characters, such as `.&#x27;, `_&#x27; and `-&#x27;.</span><br><span class="line">The expression will automatically be quoted.</span><br><span class="line"></span><br><span class="line">characters&gt; ._-</span><br><span class="line"></span><br><span class="line">You can allow the partial-word terminators to be matched in the pattern,</span><br><span class="line">too:  then  for example `c.u&#x27; would expand to `comp.source.unix&#x27;, whereas</span><br><span class="line">usually you would need to type an extra intervening dot.  Do you wish the</span><br><span class="line">terminators to be matched in this way? (y/n) [n] y</span><br></pre></td></tr></table></figure>
<h4 id="设置自动完成显示和插入的样式"><a class="markdownIt-Anchor" href="#设置自动完成显示和插入的样式"></a> 设置自动完成显示和插入的样式</h4>
<p>Styles for changing the way completions are displayed and inserted.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">         *** compinstall: display and insertion options ***</span><br><span class="line"></span><br><span class="line">1.  Change appearance of completion lists:  allows descriptions of</span><br><span class="line">    completions to appear and sorting of different types of completions.</span><br><span class="line"></span><br><span class="line">2.  Change how completions are inserted: includes options for sorting,</span><br><span class="line">    and keeping the original or an unambiguous prefix with correction etc.</span><br><span class="line"></span><br><span class="line">3.  Configure coloured/highlighted completion lists, selection of items</span><br><span class="line">    and scrolling.</span><br><span class="line"></span><br><span class="line">4.  Change whether old-style `compctl&#x27; completions will be used.</span><br><span class="line"></span><br><span class="line">q.  Return without saving.</span><br><span class="line">0.  Done setting display and insertion options.</span><br><span class="line"></span><br><span class="line">--- Hit selection --- </span><br></pre></td></tr></table></figure>
<h5 id="自动完成列表的外观"><a class="markdownIt-Anchor" href="#自动完成列表的外观"></a> 自动完成列表的外观</h5>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">       *** compinstall: order and descriptions in completion lists ***</span><br><span class="line">Type the appropriate number for more information on how this would affect</span><br><span class="line">listings.</span><br><span class="line"></span><br><span class="line">1.  Print a message above completion lists describing what is being</span><br><span class="line">    completed.</span><br><span class="line"></span><br><span class="line">2.  Make different types of completion appear in separate lists.</span><br><span class="line"></span><br><span class="line">3.  Make completion verbose, using option descriptions etc. (on by default).</span><br><span class="line"></span><br><span class="line">4.  Make single-valued options display the value&#x27;s description as</span><br><span class="line">    part of the option&#x27;s description.</span><br><span class="line"></span><br><span class="line">q.  Return without saving.</span><br><span class="line">0.  Done setting options for formatting of completion lists.</span><br></pre></td></tr></table></figure>
<ol>
<li>输出正在进行的补全操作</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">You can set a string which is displayed on a line above the list of matches</span><br><span class="line">for completions.  A `%d&#x27; in this string will be replaced by a brief</span><br><span class="line">description of the type of completion.  For example, if you set the</span><br><span class="line">string to `Completing %d&#x27;, and type ^D to show a list of files, the line</span><br><span class="line">`Completing files&#x27; will appear above that list.  Enter an empty line to</span><br><span class="line">turn this feature off.  If you enter something which doesn&#x27;t include `%d&#x27;,</span><br><span class="line">then `%d&#x27; will be appended.  Quotation will be added automatically.</span><br><span class="line"></span><br><span class="line">description&gt; Compliting %d</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>不同类型的补全出现在单独的列表中</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Normally, all possible completions are listed together in a single list, and</span><br><span class="line">if you have set a description with 1) above, the descriptions are listed</span><br><span class="line">together above that.  However, you can specify that different types of</span><br><span class="line">completion appear in separate lists; any description appears above its</span><br><span class="line">own list.  For example, external commands and shell functions would appear</span><br><span class="line">in separate lists when you are completing a command name.  Do you</span><br><span class="line">want to turn this on?</span><br><span class="line"></span><br><span class="line">[y]es, [n]o, [k]eep old setting? y</span><br></pre></td></tr></table></figure>
<ol start="3">
<li>自动补全显示详细信息，比如选项描述</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">By default, completion uses a `verbose&#x27; setting.  This</span><br><span class="line">affects different completions in different ways.  For example,  many</span><br><span class="line">well-known commands have short, uninformative option names; in some cases,</span><br><span class="line">completion will indicate what the options do when offering to complete them.</span><br><span class="line">If you prefer shorter listings you can turn this off.  What setting to</span><br><span class="line">you want?</span><br><span class="line"></span><br><span class="line">[v]erbose, [n]ot verbose, [k]eep old setting? </span><br></pre></td></tr></table></figure>
<ol start="4">
<li>当选项的值是单一的时候，使值的描述显示在选项的描述中。</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Many commands have options which take a single argument.  In some cases,</span><br><span class="line">completion is not set up to describe the option even though it has a</span><br><span class="line">description for the argument.  You can enter a string containing `%d&#x27;,</span><br><span class="line">which will be replaced by the description for the option.  For</span><br><span class="line">example, if you enter the string `specify: %d&#x27;, and an option -ifile</span><br><span class="line">exists which has an argument whose description is `input file&#x27;, then the</span><br><span class="line">description `specify: input file&#x27; will appear when the option itself</span><br><span class="line">is listed.  As this long explanation suggests, this is only occasionally</span><br><span class="line">useful.  Enter an empty line to turn this feature off.  If you enter</span><br><span class="line">something which doesn&#x27;t include `%d&#x27;, then `%d&#x27; will be appended.</span><br><span class="line">Quotation will be added automatically.</span><br><span class="line"></span><br><span class="line">auto-description&gt; %d</span><br></pre></td></tr></table></figure>
<h5 id="更改自动补全的插入方式"><a class="markdownIt-Anchor" href="#更改自动补全的插入方式"></a> 更改自动补全的插入方式</h5>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">          *** compinstall: options for inserting completions ***</span><br><span class="line"></span><br><span class="line">1.   In completers that change what you have already typed, insert any</span><br><span class="line">     unambiguous prefix rather than go straight to menu completion.</span><br><span class="line"></span><br><span class="line">2.   In completers which correct what you have typed, keep what you</span><br><span class="line">     originally typed as one of the list of possible completions.</span><br><span class="line"></span><br><span class="line">q.   Return without saving.</span><br><span class="line">0.   Done setting options for insertion.</span><br></pre></td></tr></table></figure>
<ol>
<li>在你已经输入一部分内容后，如果系统能够确定你输入的内容在自动完成列表中有一个明确的前缀，那么系统会直接将这个前缀插入到你的输入中。这样你就不需要再从自动完成列表中选择完整的选项了。(启用)</li>
<li>当系统纠正你输入的内容后，它会将你最初输入的内容保留在自动完成列表中，作为一个备选选项。这样，即使系统纠正了你的输入，你还是可以选择保留原始输入的内容。(启用)</li>
</ol>
<h5 id="配置彩色和高亮显示的自动完成列表光标选择项目和滚动浏览列表"><a class="markdownIt-Anchor" href="#配置彩色和高亮显示的自动完成列表光标选择项目和滚动浏览列表"></a> 配置彩色和高亮显示的自动完成列表，光标选择项目和滚动浏览列表</h5>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">     *** compinstall: options for colouring and selecting in lists ***</span><br><span class="line"></span><br><span class="line">1.   Use coloured lists for listing completions.</span><br><span class="line"></span><br><span class="line">2.   Use cursor keys to select completions from completion lists.</span><br><span class="line"></span><br><span class="line">3.   Allow scrolling of long selection lists and set the prompt.</span><br><span class="line"></span><br><span class="line">q.   Return without saving.</span><br><span class="line">0.   Done setting options for insertion.</span><br></pre></td></tr></table></figure>
<ol>
<li>设置补全列表的颜色 <a id="section1"></a>
<ul>
<li>默认颜色</li>
<li>通过<code>$LS_COLORS</code>环境变量已经设定好的颜色</li>
<li>关闭颜色(*)</li>
</ul>
</li>
<li>使用光标键(方向键)在自动补全菜单中选择补全项
<ul>
<li>无条件启用该功能</li>
<li>补全项超过指定数量时启用该功能(*, 3）
<ul>
<li><code>Edit a prompt below. It can contain '%l' to show the number of matches as 'current_number/total_number', '%p' to show the fraction of the way down the list, or font-control sequences such as %B, %U, %S and the corresponding %b, %u, %s; quotes will be added automatically. Delete the whole line to turn it off. Hit return to keep the current value. prompt&gt; %SMatches: %l, Progress: %p%</code></li>
<li>显示效果：<code>Matches: [当前匹配项数量]/[总匹配项数量], Progress: [当前列表位置的百分比]%</code></li>
</ul>
</li>
<li>列表无法完全显示在屏幕上时启用此功能</li>
<li>对于只进行补全项立标的命令，也会在列表无法完全显示在屏幕上时启用此功能。</li>
</ul>
</li>
<li>允许选择列表很长时使用滚动条浏览列表并设置提示信息(关闭这个功能，保持空白即可）
<ul>
<li>显示提示：prompt&gt; %SAt %p: Hit TAB for more, or the character to insert</li>
</ul>
</li>
</ol>
<h5 id="4-是否使用旧式的compctl配置方式"><a class="markdownIt-Anchor" href="#4-是否使用旧式的compctl配置方式"></a> 4. 是否使用旧式的compctl配置方式</h5>
<p>不使用旧式<code>compctl</code>方式，直接跳过不用管</p>
<h4 id="特定补全项的样式"><a class="markdownIt-Anchor" href="#特定补全项的样式"></a> 特定补全项的样式</h4>
<h5 id="文件补全选项"><a class="markdownIt-Anchor" href="#文件补全选项"></a> 文件补全选项</h5>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">      *** compinstall: options for filename completion ***</span><br><span class="line"></span><br><span class="line">1.  Choose how to sort the displayed list of filename matches.(File Name)</span><br><span class="line"></span><br><span class="line">2.  In expressions with .., don&#x27;t include directories already implied.(p c d)</span><br><span class="line"></span><br><span class="line">3.  Allow completion of . and .. for the bone idle.(y 允许在自动补全时包括当前目录 . 和父目录 ..)</span><br><span class="line"></span><br><span class="line">4.  When expanding paths, `foo//bar&#x27; is treated as `foo/bar&#x27;.(y，把多于的斜杠合为一条)</span><br><span class="line"></span><br><span class="line">5.  Configure how multiple paths are expanded and displayed, </span><br><span class="line">    e.g. /f/b -&gt; /foo/bar</span><br><span class="line">    (1. y /f/b允许匹配/foo/bar、/foo/basket，也允许匹配/foo/test/bar（关闭后则不匹配）</span><br><span class="line">     2. n 匹配到不含歧义的部分，如果存在/foo/bar和/food/basket，只补全到/foo，然后进行选择/foo还是/food，而不是显示所有匹配/f/b的项，比如列出/foo/bar和/food/basket</span><br><span class="line">     3. y</span><br><span class="line">        对于目录/foo/bar /foo/bad /failed/bag，第三个功能如果选y 则会显示</span><br><span class="line">        /foo/bar</span><br><span class="line">        /foo/bad</span><br><span class="line">        /failed/bag</span><br><span class="line">        如果选n，则会显示</span><br><span class="line">        /foo</span><br><span class="line">        /foo</span><br><span class="line">        /failed</span><br><span class="line">     )</span><br><span class="line"></span><br><span class="line">6.  Keep certain prefixes unchanged, such as `//resource/&#x27;.</span><br><span class="line"></span><br><span class="line">q.  Return without saving.</span><br><span class="line">0.  Done setting options for filename completion.</span><br></pre></td></tr></table></figure>
<h3 id="选择默认的编辑配置"><a class="markdownIt-Anchor" href="#选择默认的编辑配置"></a> 选择默认的编辑配置</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Default editing configuration</span><br><span class="line">=============================</span><br><span class="line"></span><br><span class="line">The keys in the shell&#x27;s line editor can be made to behave either</span><br><span class="line">like Emacs or like Vi, two common Unix editors.  If you have no</span><br><span class="line">experience of either, Emacs is recommended.  If you don&#x27;t pick one,</span><br><span class="line">the shell will try to guess based on the EDITOR environment variable.</span><br><span class="line">Usually it&#x27;s better to pick one explicitly.</span><br><span class="line"></span><br><span class="line"># (1) Change default editing configuration</span><br><span class="line">bindkey -e                                                                         (set but not saved)</span><br><span class="line"></span><br><span class="line"># (0)  Remember edits and return to main menu (does not save file yet)</span><br><span class="line"># (q)  Abandon edits and return to main menu</span><br><span class="line"></span><br><span class="line">--- Type one of the keys in parentheses --- 1</span><br><span class="line">Pick a keymap (set of keys) to use when editing.</span><br><span class="line">Type:</span><br><span class="line">  (e) for Emacs keymap (recommended unless you are vi user)</span><br><span class="line">  (v) for Vi keymap</span><br><span class="line">  (n) not to set a keymap (allow shell to choose)</span><br><span class="line">  (k) to keep the current setting, (e):</span><br><span class="line">--- Type one of the keys in parentheses --- </span><br></pre></td></tr></table></figure>
<p>这里我选择v，即Vi的键位设置</p>
<p>终于，一些基础配置和compinstall已经完善了</p>
<p>配置完后可以将<sub>/.zshrc移动到</sub>/.config/zsh/目录中方便管理，建立一个链接即可</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mv</span> ~/.zshrc ~/.config/zsh/zshrc</span><br><span class="line"><span class="built_in">ln</span> -sf ~/.config/zsh/.zshrc ~/.zshrc</span><br></pre></td></tr></table></figure>
<h3 id="命令纠正"><a class="markdownIt-Anchor" href="#命令纠正"></a> 命令纠正</h3>
<p>配置功能：当输入错误命令时，询问是否为某一个命令</p>
<p>添加下列配置</p>
<figure class="highlight zsh"><figcaption><span>$HOME/.zshrc</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="built_in">setopt</span> correct</span><br></pre></td></tr></table></figure>
<p>效果如下，把sudo输入成了<code>sudi</code></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudi pacman -Syyu</span><br><span class="line">zsh: correct <span class="string">&#x27;sudi&#x27;</span> to <span class="string">&#x27;sudo&#x27;</span> [nyae]? y</span><br></pre></td></tr></table></figure>
<p>输入<code>y</code>以后就会执行这个命令</p>
<h3 id="创建别名"><a class="markdownIt-Anchor" href="#创建别名"></a> 创建别名</h3>
<p>通过<code>alias</code>指令设置别名</p>
<p>创建<code>~/.config/zsh/alias.zsh</code>文件进行别名的配置</p>
<figure class="highlight zsh"><figcaption><span>$HOME/.config/zsh/alias.zsh</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="built_in">alias</span> cnpm=<span class="string">&quot;npm --registry=https://registry.npmmirror.com --cache=<span class="variable">$HOME</span>/.npm/.cache/cnpm --disturl=https://npmmirror.com/mirrors/node --userconfig=<span class="variable">$HOME</span>/.cnpmrc&quot;</span></span><br><span class="line"><span class="built_in">alias</span> e=<span class="string">&quot;exit&quot;</span></span><br><span class="line"><span class="built_in">alias</span> <span class="built_in">ls</span>=<span class="string">&quot;lsd&quot;</span></span><br><span class="line"><span class="built_in">alias</span> la=<span class="string">&quot;ls -a&quot;</span></span><br><span class="line"><span class="built_in">alias</span> ll=<span class="string">&quot;ls -llha&quot;</span></span><br><span class="line"><span class="built_in">alias</span> gia=<span class="string">&quot;git add&quot;</span></span><br><span class="line"><span class="built_in">alias</span> gic=<span class="string">&quot;git commit&quot;</span></span><br><span class="line"><span class="built_in">alias</span> gicfg=<span class="string">&quot;git config&quot;</span></span><br></pre></td></tr></table></figure>
<p>加载配置</p>
<figure class="highlight zsh"><figcaption><span>$HOME/.zshrc</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/.config/zsh/alias.zsh</span><br></pre></td></tr></table></figure>
<h3 id="问题"><a class="markdownIt-Anchor" href="#问题"></a> 问题</h3>
<h4 id="需要按两次tab才能补全无歧义的内容"><a class="markdownIt-Anchor" href="#需要按两次tab才能补全无歧义的内容"></a> 需要按两次tab才能补全无歧义的内容</h4>
<p>原因：</p>
<p>与下面这行配置后面选项的配置有关，要把<code>_complete</code>放在第一个</p>
<figure class="highlight zsh"><figcaption><span>$HOME/.zshrc</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="built_in">zstyle</span> <span class="string">&#x27;:completion:*&#x27;</span> completer _complete _list _expand _ignored _match _correct _approximate</span><br></pre></td></tr></table></figure>
<h2 id="vi-mode"><a class="markdownIt-Anchor" href="#vi-mode"></a> Vi-Mode</h2>
<p>在上面的<a href="#%E9%80%89%E6%8B%A9%E9%BB%98%E8%AE%A4%E7%9A%84%E7%BC%96%E8%BE%91%E9%85%8D%E7%BD%AE">基础配置</a>部分，已经设置了Vi-Mode键位，现在需要设置Vi-Mode的光标，可以将Vi-Mode相关的配置从<code>.zshrc</code>移动到<code>vi.zsh</code>，方便管理</p>
<p><code>~/.config/zsh/vi.zsh</code>配置如下，主要配置了Inserte Mode和Common Mode的光标显示效果：</p>
<figure class="highlight zsh"><figcaption><span>$HOME/.config/zsh/vi.zsh</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="built_in">bindkey</span> -v</span><br><span class="line"><span class="keyword">function</span> zle-keymap-select &#123;</span><br><span class="line">	<span class="keyword">if</span> [[ <span class="variable">$&#123;KEYMAP&#125;</span> == vicmd ]] || [[ <span class="variable">$1</span> = <span class="string">&#x27;block&#x27;</span> ]]; <span class="keyword">then</span></span><br><span class="line">		<span class="built_in">echo</span> -ne <span class="string">&#x27;\e[1 q&#x27;</span></span><br><span class="line">	<span class="keyword">elif</span> [[ <span class="variable">$&#123;KEYMAP&#125;</span> == main ]] || [[ <span class="variable">$&#123;KEYMAP&#125;</span> == viins ]] || [[ <span class="variable">$&#123;KEYMAP&#125;</span> = <span class="string">&#x27;&#x27;</span> ]] || [[ <span class="variable">$1</span> = <span class="string">&#x27;beam&#x27;</span> ]]; <span class="keyword">then</span></span><br><span class="line">		<span class="built_in">echo</span> -ne <span class="string">&#x27;\e[5 q&#x27;</span></span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">zle</span> -N zle-keymap-select</span><br><span class="line"></span><br><span class="line"><span class="comment"># Use beam shape cursor on startup.</span></span><br><span class="line"><span class="built_in">echo</span> -ne <span class="string">&#x27;\e[5 q&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Use beam shape cursor for each new prompt.</span></span><br><span class="line"><span class="function"><span class="title">preexec</span></span>() &#123;</span><br><span class="line">	<span class="built_in">echo</span> -ne <span class="string">&#x27;\e[5 q&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_fix_cursor</span></span>() &#123;</span><br><span class="line">	<span class="built_in">echo</span> -ne <span class="string">&#x27;\e[5 q&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">precmd_functions+=(_fix_cursor)</span><br><span class="line"></span><br><span class="line">KEYTIMEOUT=1</span><br></pre></td></tr></table></figure>
<p>加载配置</p>
<figure class="highlight zsh"><figcaption><span>$HOME/.zshrc</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/.config/zsh/vi.zsh</span><br></pre></td></tr></table></figure>
<h3 id="键位配置"><a class="markdownIt-Anchor" href="#键位配置"></a> 键位配置</h3>
<p>键位配置的语法如下：</p>
<figure class="highlight zsh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Set keymaps for Vi-Mode</span></span><br><span class="line"><span class="built_in">bindkey</span> -M vicmd keys action</span><br><span class="line"><span class="comment"># &#x27;keys&#x27; is the key combination to bind, and &#x27;action&#x27; is the corresponding action or command.</span></span><br></pre></td></tr></table></figure>
<p>具体可以查看 <a href="https://zsh.sourceforge.io/Doc/Release/Zsh-Line-Editor.html#Movement">Zsh Line Editor - Movements</a></p>
<p>例如</p>
<figure class="highlight zsh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Map &#x27;k&#x27; to backward-char</span></span><br><span class="line"><span class="built_in">bindkey</span> -M vicmd <span class="string">&#x27;k&#x27;</span> backward-char</span><br></pre></td></tr></table></figure>
<h2 id="输入历史记录"><a class="markdownIt-Anchor" href="#输入历史记录"></a> 输入历史记录</h2>
<p>将上下方向键绑定到历史记录搜索功能。按上下方向键时，zsh 将会显示与当前输入行匹配的过去命令，直到当前光标位置为止。</p>
<figure class="highlight zsh"><figcaption><span>$HOME/.zshrc</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="built_in">autoload</span> -Uz up-line-or-beginning-search down-line-or-beginning-search</span><br><span class="line"><span class="built_in">zle</span> -N up-line-or-beginning-search</span><br><span class="line"><span class="built_in">zle</span> -N down-line-or-beginning-search</span><br><span class="line"></span><br><span class="line">[[ -n <span class="string">&quot;<span class="variable">$&#123;key[Up]&#125;</span>&quot;</span>   ]] &amp;&amp; <span class="built_in">bindkey</span> -- <span class="string">&quot;<span class="variable">$&#123;key[Up]&#125;</span>&quot;</span>   up-line-or-beginning-search</span><br><span class="line">[[ -n <span class="string">&quot;<span class="variable">$&#123;key[Down]&#125;</span>&quot;</span> ]] &amp;&amp; <span class="built_in">bindkey</span> -- <span class="string">&quot;<span class="variable">$&#123;key[Down]&#125;</span>&quot;</span> down-line-or-beginning-search</span><br></pre></td></tr></table></figure>
<h2 id="插件"><a class="markdownIt-Anchor" href="#插件"></a> 插件</h2>
<h3 id="主题插件"><a class="markdownIt-Anchor" href="#主题插件"></a> 主题插件</h3>
<p>这次选择了<a href="https://github.com/romkatv/powerlevel10k">Powerlevel10k</a>主题，通过手动方式安装</p>
<p>主题样式如下：<br />
<img src="https://raw.githubusercontent.com/romkatv/powerlevel10k-media/master/prompt-styles-high-contrast.png" style="max-width:50%"></p>
<p>安装方法：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> --depth=1 https://github.com/romkatv/powerlevel10k.git ~/.config/zsh/plugins/powerlevel10k</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;source ~/.config/zsh/plugins/powerlevel10k/powerlevel10k.zsh-theme&#x27;</span> &gt;&gt;~/.zshrc</span><br></pre></td></tr></table></figure>
<p>如果速度慢可以使用Gitee上的官方镜像进行加速</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> --depth=1 https://gitee.com/romkatv/powerlevel10k.git ~/.config/zsh/plugins/powerlevel10k</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;source ~/.config/zsh/plugins/powerlevel10k/powerlevel10k.zsh-theme&#x27;</span> &gt;&gt;~/.zshrc</span><br></pre></td></tr></table></figure>
<p>在终端中输入<code>source ~/.zshrc</code>，就会出现初始配置提示，按照提示进行操作</p>
<p>将配置文件移动到<code>~/.config/zsh</code>中方便管理，创建链接</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mv</span> ~/.p10k.zsh ~/.config/zsh/</span><br><span class="line"><span class="built_in">ln</span> -sf ~/.config/zsh/.p10k.zsh ~/.p10k.zsh</span><br></pre></td></tr></table></figure>
<p>配置效果如下：</p>
<img src="P10K.png" style="max-width:50%">
<h3 id="命令补全"><a class="markdownIt-Anchor" href="#命令补全"></a> 命令补全</h3>
<p>在<a href="#%E9%85%8D%E7%BD%AE%E8%A1%A5%E5%85%A8%E7%B3%BB%E7%BB%9F">基础配置</a>部分已经配置了大部分的补全功能，而这个插件提供了补全的扩展功能</p>
<p><strong>ghost text提示和补全</strong></p>
<p>安装<a href="https://github.com/zsh-users/zsh-autosuggestions">zsh-autosuggestions</a>插件实现ghost text提示和补全</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/zsh-users/zsh-autosuggestions ~/.config/zsh/plugins/zsh-autosuggestions</span><br></pre></td></tr></table></figure>
<p>加载插件</p>
<figure class="highlight zsh"><figcaption><span>$HOME/.zshrc</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/.config/zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh</span><br></pre></td></tr></table></figure>
<p>在输入命令时，会在光标的后面以柔和的灰色显示补全，可以在配置中用<code>ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE</code>变量来更改颜色，如果按右方向键<code>⇒</code>或<code>end</code>键，会补全灰色部分的内容。</p>
<h3 id="命令行高亮显示"><a class="markdownIt-Anchor" href="#命令行高亮显示"></a> 命令行高亮显示</h3>
<p>通过插件<a href="https://github.com/zsh-users/zsh-syntax-highlighting">zsh-syntax-highlighting</a>实现命令行的高亮效果</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/zsh-users/zsh-syntax-highlighting.git ~/.config/zsh/plugins/zsh-syntax-highlighting</span><br></pre></td></tr></table></figure>
<p>加载插件</p>
<figure class="highlight zsh"><figcaption><span>$HOME/.zshrc</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/.config/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh</span><br></pre></td></tr></table></figure>
<p><strong>注意</strong></p>
<p>这个插件好像跟<a href="#section1">列表颜色的配置</a>有冲突，建议把颜色选项关闭，<code>zshrc</code>对应的配置如下，在前面添加<code>#</code>注释掉该配置</p>
<figure class="highlight zsh"><figcaption><span>$HOME/.zshrc</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="built_in">zstyle</span> <span class="string">&#x27;:completion:*&#x27;</span> list-colors <span class="string">&#x27;&#x27;</span></span><br></pre></td></tr></table></figure>
<p>效果如下：<br />
<img src="https://raw.githubusercontent.com/zsh-users/zsh-syntax-highlighting/master/images/after2.png" style="max-width:50%"></p>
<h3 id="提示显示别名"><a class="markdownIt-Anchor" href="#提示显示别名"></a> 提示显示别名</h3>
<p>接下来这个插件在你输入了一个命令，而这个命令有对应存在的别名时，提醒你应当去使用别名</p>
<p><a href="https://github.com/MichaelAquilina/zsh-you-should-use">You Should Use</a></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/MichaelAquilina/zsh-you-should-use.git ~/.config/zsh/plugins/zsh-you-should-use</span><br></pre></td></tr></table></figure>
<p>加载插件</p>
<figure class="highlight zsh"><figcaption><span>$HOME/.zshrc</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/.config/zsh/plugins/zsh-you-should-use/you-should-use.plugin.zsh</span><br></pre></td></tr></table></figure>
<img src="https://raw.githubusercontent.com/MichaelAquilina/zsh-you-should-use/master/img/alias.png" style="max-width:50%">
<h2 id="显示效果"><a class="markdownIt-Anchor" href="#显示效果"></a> 显示效果</h2>
<img src="zsh-screenshot.png" style="max-width:50%">
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Z-Shell</tag>
        <tag>Shell</tag>
      </tags>
  </entry>
  <entry>
    <title>使用PicGo和Github仓库搭建图床</title>
    <url>/2024/05/06/%E4%BD%BF%E7%94%A8PicGo%E5%92%8CGithub%E4%BB%93%E5%BA%93%E6%90%AD%E5%BB%BA%E5%9B%BE%E5%BA%8A/</url>
    <content><![CDATA[<h1 id="搭建图床"><a class="markdownIt-Anchor" href="#搭建图床"></a> 搭建图床</h1>
<p>图床是储存图片的服务器，允许把外部网站链接到图片，方便我们编写博客和网站</p>
<h2 id="安装picgo"><a class="markdownIt-Anchor" href="#安装picgo"></a> 安装PicGO</h2>
<p>从<a href="https://github.com/Molunerfinn/PicGo/releases/">PicGo的仓库</a>中下载PicGo的AppImage</p>
<p>赋予执行权限</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">chmod</span> +x PicGo-2.3.1.AppImage</span><br></pre></td></tr></table></figure>
<h2 id="创建并配置github仓库"><a class="markdownIt-Anchor" href="#创建并配置github仓库"></a> 创建并配置Github仓库</h2>
<p>创建一个公开的Github仓库用于存储我们的图片</p>
<p>在终端输入PicGo-2.3.1.AppImage的路径，启动PicGo，就会看到它的图标</p>
<img src="https://pic.molunerfinn.com/picgo/docs/logo-150.png" style="max-width:100%">
<p>右键图标打开主窗口</p>
<p>图床设置选择Github，设置好仓库名</p>
<p>将分支名从master改为main</p>
<p>生成token</p>
<table>
    <tr>
        <td ><center><img src="Generate_token_1.png" style="max-width:100%">
        <td ><center><img src="Generate_token_2.png" style="max-width:100%">
    </tr>
</table>
<table>
    <tr>
        <td ><center><img src="Generate_token_3.png" style="max-width:100%">
        <td ><center><img src="Generate_token_4.png" style="max-width:100%">
    </tr>
</table>
<p>选择期限和权限</p>
<img src="Generate_token_5.png" style="max-width:100%">
<p>复制这个token，粘贴到PicGo的<code>设定Token</code>中</p>
<img src="Copy_Token.png" style="max-width:100%">
<p>PicGo的设置如图所示，将Github设置为默认图床</p>
<img src="PicGo_Settings.png" style="max-width:100%">
<h2 id="配置cdn加速"><a class="markdownIt-Anchor" href="#配置cdn加速"></a> 配置CDN加速</h2>
<p>使用<a href="https://www.jsdelivr.com/github">JSDELIVR</a>进行CND配置</p>
<p>只需要在<code>设定自定义域名</code>这一项中添加网址，后面跟着你的仓库链接。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://cdn.jsdelivr.net/gh/&lt;username&gt;/&lt;repo&gt;</span><br></pre></td></tr></table></figure>
<p>我的仓库是<code>Jccc-l/Image-Bed</code>，就写成</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://cdn.jsdelivr.net/gh/Jccc-l/Image-Bed</span><br></pre></td></tr></table></figure>
<h2 id="reference"><a class="markdownIt-Anchor" href="#reference"></a> Reference</h2>
<ul>
<li><a href="https://www.bilibili.com/video/BV1Ua4y1D7Li/?spm_id_from=333.337.search-card.all.click">通过GitHub+PicGo+CDN搭建自己的图床</a></li>
</ul>
]]></content>
      <categories>
        <category>Blog</category>
      </categories>
      <tags>
        <tag>Blog</tag>
        <tag>图床</tag>
        <tag>Github</tag>
        <tag>PicGo</tag>
      </tags>
  </entry>
  <entry>
    <title>在Linux中搭建AMD的深度学习环境</title>
    <url>/2024/05/06/%E5%9C%A8Linux%E4%B8%AD%E4%BD%BF%E7%94%A8AMD%E6%98%BE%E5%8D%A1%E6%90%AD%E5%BB%BA%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%8E%AF%E5%A2%83/</url>
    <content><![CDATA[<h1 id="amd-gpu运行pytorch"><a class="markdownIt-Anchor" href="#amd-gpu运行pytorch"></a> AMD GPU运行Pytorch</h1>
<h2 id="配置过程"><a class="markdownIt-Anchor" href="#配置过程"></a> 配置过程</h2>
<p>以下命令<strong>配置环境变量</strong><sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></p>
<figure class="highlight zsh"><figcaption><span>$HOME/.zshrc</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> HSA_OVERRIDE_GFX_VERSION=10.3.0</span><br><span class="line"><span class="built_in">export</span> LD_LIBRARY_PATH=/opt/rocm/lib</span><br></pre></td></tr></table></figure>
<blockquote>
<ol>
<li>HIP_VISIBLE_DEVICES=0 此处非必要不要改动，多显卡用户(例如核显+独显)出现RuntimeError: Torch is not able to use GPU问题的时候将0改为1；</li>
<li>HSA_OVERRIDE_GFX_VERSION= 这里要根据自己显卡型号修改：
<ul>
<li>HSA_OVERRIDE_GFX_VERSION=9.0.6对应显卡型号： Radeon VII</li>
<li>HSA_OVERRIDE_GFX_VERSION=10.3.0对应显卡型号：RX5000 / 6000系列</li>
<li>HSA_OVERRIDE_GFX_VERSION=11.0.0对应显卡型号：RX7000系列</li>
</ul>
</li>
</ol>
</blockquote>
<p>创建并激活虚拟环境</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">python -m venv venv</span><br><span class="line"><span class="built_in">source</span> venv/bin/activate</span><br></pre></td></tr></table></figure>
<p>通过<a href="pytorch.org">Pytorch主页</a>的方法安装好ROCm版本的PyTorch</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">pip3 install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/rocm6.0</span><br></pre></td></tr></table></figure>
<p>测试ROCm是否可用</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ python</span><br><span class="line">Python 3.10.14 (main, Apr 28 2024, 15:11:45) [GCC 13.2.1 20240417] on linux</span><br><span class="line">Type &quot;help&quot;, &quot;copyright&quot;, &quot;credits&quot; or &quot;license&quot; for more information.</span><br><span class="line">&gt;&gt;&gt; import torch</span><br><span class="line">&gt;&gt;&gt; torch.cuda.is_available()</span><br><span class="line">True</span><br></pre></td></tr></table></figure>
<img src="torch_available.png" style="max-width:100%">
<p>可以看到ROCm可用</p>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p><a href="https://zhuanlan.zhihu.com/p/656480759?utm_psn=1710569878971547648">AMD显卡满血Stable Diffusion无脑部署笔记(ROCm6.1)(SD+Fooocus+ComfyUI)[长期更新]</a> <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Deep Learning</tag>
        <tag>Pytorch</tag>
        <tag>AMD</tag>
      </tags>
  </entry>
  <entry>
    <title>在Linux中使用锐捷登录校园网</title>
    <url>/2024/06/27/%E5%9C%A8Linux%E4%B8%AD%E4%BD%BF%E7%94%A8%E9%94%90%E6%8D%B7%E7%99%BB%E5%BD%95%E6%A0%A1%E5%9B%AD%E7%BD%91/</url>
    <content><![CDATA[<h1 id="在linux中使用锐捷登录校园网"><a class="markdownIt-Anchor" href="#在linux中使用锐捷登录校园网"></a> 在Linux中使用锐捷登录校园网</h1>
<blockquote>
<p><strong>注</strong>：不知为何现在脚本会报错<em>不允许的接入方式</em></p>
</blockquote>
<p>本文以Ubuntu20.04为例</p>
<h2 id="下载配置锐捷客户端"><a class="markdownIt-Anchor" href="#下载配置锐捷客户端"></a> 下载配置锐捷客户端</h2>
<p>如果通过网线连接，在访问网页时，浏览器将会自动导航至<code>客户端管理中心</code>，可直接下载Linux系统客户端。若未自动转到该网页，可通过<a href="http://10.10.232.51:8012/Setup/index.htm">链接</a>下载<strong>RG Supplicant For Linux</strong>。</p>
<p>下载完成后，在<code>下载</code>文件夹中找到<code>RG_Supplicant_For_Linux_V1.31.zip</code>文件，将其解压，进入<code>rjsupplicant</code>文件夹</p>
<p>在<code>rjsupplicant</code>文件夹中打开终端，输出以下命令，为<code>rjsupplicant.sh</code>文件添加执行权限</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo chmod +x rjsupplicant.sh</span><br></pre></td></tr></table></figure>
<h2 id="登录校园网"><a class="markdownIt-Anchor" href="#登录校园网"></a> 登录校园网</h2>
<p>首次登录需要输入学号、密码，输入以下命令以登录校园网</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo ./rjsupplicant.sh -a 1 -d 1 -u xxx -p *** -S 1</span><br></pre></td></tr></table></figure>
<p>上述命令各参数的作用可通过<code>./rjsupplicant --help</code>查看，<code>xxx</code>改为你的学号，<code>***</code>改为你的密码，其中<code>-S 1</code>是为了保存帐号密码，保存以后再次登录不需要手动输入学号和密码，即：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo ./rjsupplicant.sh -a 1 -d 1</span><br></pre></td></tr></table></figure>
<h2 id="开机自动登录"><a class="markdownIt-Anchor" href="#开机自动登录"></a> 开机自动登录</h2>
<p>如果需要开机运行这条命令，需要将这条命令写入一个shell脚本，例如将其保存到<code>connect.sh</code>文件中，其中<code>./jsupplicant.sh</code>需要改成文件的绝对路径，比如我的文件目录为<code>/home/jccc/Downloads/RG_Supplicant_For_Linux_V1.31/rjsupplicant.sh</code>，我的<code>connect.sh</code>文件应写为：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo /home/jccc/Downloads/RG_Supplicant_For_Linux_V1.31/rjsupplicant.sh -a 1 -d 1</span><br></pre></td></tr></table></figure>
<p>将文件保存后，在文件当前目录进入终端，通过以下命令为该文件添加超级用户执行权限</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo chmod +x connect.sh</span><br></pre></td></tr></table></figure>
<p>然后在<strong>全部应用</strong>中找到<strong>启动应用程序首选项</strong>(Startup Applicantions Preferences)，将<code>connect.sh</code>添加到开机启动程序中，即可实现开机自动登录</p>
<img src="startup_apps.png" style="max-width:80%">
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Ubuntu</tag>
        <tag>Network</tag>
      </tags>
  </entry>
  <entry>
    <title>在Wayland环境下的Electron应用中使用Fcitx5输入法</title>
    <url>/2024/06/23/%E5%9C%A8Wayland%E7%8E%AF%E5%A2%83%E4%B8%8B%E7%9A%84Electron%E5%BA%94%E7%94%A8%E4%B8%AD%E4%BD%BF%E7%94%A8Fcitx5%E8%BE%93%E5%85%A5%E6%B3%95/</url>
    <content><![CDATA[<h1 id="在wayland环境下的electron应用中使用fcitx5输入法"><a class="markdownIt-Anchor" href="#在wayland环境下的electron应用中使用fcitx5输入法"></a> 在Wayland环境下的Electron应用中使用Fcitx5输入法</h1>
<p>为Electron添加以下配置<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup><sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup></p>
<figure class="highlight plaintext"><figcaption><span>$HOME/.config/electron-flags.conf</span></figcaption><table><tr><td class="code"><pre><span class="line">--enable-features=WaylandWindowDecorations</span><br><span class="line">--ozone-platform-hint=wayland</span><br><span class="line">--enable-wayland-ime</span><br></pre></td></tr></table></figure>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p><a href="https://wiki.archlinux.org/title/Wayland#Electron">Wayland#Electron - ArchWiki</a> <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn2" class="footnote-item"><p><a href="https://www.bilibili.com/video/BV1aL41117kc/?spm_id_from=333.1007.top_right_bar_window_history.content.click&amp;vd_source=e2a73086fbc135c64d40acbe84e65505">Linux Wayland进展+1——Electron应用可以使用fcitx5输入法了</a> <a href="#fnref2" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Fcitx5</tag>
        <tag>Electron</tag>
        <tag>Wayland</tag>
      </tags>
  </entry>
  <entry>
    <title>基于NexT主题的Hexo博客美化</title>
    <url>/2024/05/08/%E5%9F%BA%E4%BA%8ENexT%E4%B8%BB%E9%A2%98%E7%9A%84Hexo%E5%8D%9A%E5%AE%A2%E7%BE%8E%E5%8C%96/</url>
    <content><![CDATA[<h2 id="主题安装"><a class="markdownIt-Anchor" href="#主题安装"></a> 主题安装</h2>
<p>通过<code>git</code>安装主题</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> [Blogroot]</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/next-theme/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure>
<p>修改博客主配置文件</p>
<figure class="highlight yml"><figcaption><span>[Blogroot]/_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">next</span></span><br></pre></td></tr></table></figure>
<p>备份NexT主题的配置文件</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cp</span> [Blogroot]/theme/next/_config.yml [Blogroot]/_config.next.yml</span><br><span class="line"><span class="built_in">mv</span> [Blogroot]/theme/next/_config.yml [Blogroot]/theme/next/_config.yml.template</span><br></pre></td></tr></table></figure>
<p>安装完成，重新生成博客就能直接用了</p>
<p>当然NexT提供了四种主题，可以在<code>_config.next.yml</code>文件中进行设置</p>
<figure class="highlight yml"><figcaption><span>[Blogroot]/_config.next.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">scheme:</span> <span class="string">Gemini</span></span><br></pre></td></tr></table></figure>
<h2 id="主题修改美化和功能设置"><a class="markdownIt-Anchor" href="#主题修改美化和功能设置"></a> 主题修改美化和功能设置</h2>
<h3 id="黑暗模式"><a class="markdownIt-Anchor" href="#黑暗模式"></a> 黑暗模式</h3>
<p>NexT主题支持<s>黑化</s>黑暗模式</p>
<figure class="highlight yml"><figcaption><span>[Blogroot]/_config.next.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">darkmode:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>
<h3 id="网页信息设置"><a class="markdownIt-Anchor" href="#网页信息设置"></a> 网页信息设置</h3>
<h4 id="主页头像"><a class="markdownIt-Anchor" href="#主页头像"></a> 主页头像</h4>
<p>将头像文件放在<code>[Blogroot]/theme/next/source/images/</code>中，然后引用文件URL</p>
<p>或者可以使用网络图片的链接</p>
<figure class="highlight yml"><figcaption><span>[Blogroot]/_config.next.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">custom_logo:</span> <span class="string">/images/avatar.jpeg</span></span><br></pre></td></tr></table></figure>
<h4 id="许可信息"><a class="markdownIt-Anchor" href="#许可信息"></a> 许可信息</h4>
<p>可以在文章末或侧栏中设置许可信息</p>
<figure class="highlight yml"><figcaption><span>[Blogroot]/_config.next.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment"># Creative Commons 4.0 International License.</span></span><br><span class="line"><span class="comment"># See: https://creativecommons.org/about/cclicenses/</span></span><br><span class="line"><span class="attr">creative_commons:</span></span><br><span class="line">  <span class="comment"># Available values: by | by-nc | by-nc-nd | by-nc-sa | by-nd | by-sa | cc-zero</span></span><br><span class="line">  <span class="attr">license:</span> <span class="string">by-nc-sa</span></span><br><span class="line">  <span class="comment"># Available values: big | small</span></span><br><span class="line">  <span class="attr">size:</span> <span class="string">small</span></span><br><span class="line">  <span class="attr">sidebar:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">post:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># You can set a language value if you prefer a translated version of CC license, e.g. deed.zh</span></span><br><span class="line">  <span class="comment"># CC licenses are available in 39 languages, you can find the specific and correct abbreviation you need on https://creativecommons.org</span></span><br><span class="line">  <span class="attr">language:</span></span><br></pre></td></tr></table></figure>
<h2 id="布局调整"><a class="markdownIt-Anchor" href="#布局调整"></a> 布局调整</h2>
<h3 id="调整内容宽度"><a class="markdownIt-Anchor" href="#调整内容宽度"></a> 调整内容宽度</h3>
<p>Gemini主题默认的文章宽度太宽了</p>
<p>打开<code>[Blogroot]/themes/next/source/css/_variables/Pisces.styl</code>文件，调整三个变量</p>
<figure class="highlight styl"><figcaption><span>[Blogroot]/themes/next/source/css/_variables/Pisces.styl</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="variable">$content</span>-desktop              = <span class="string">&#x27;calc(100% - %s)&#x27;</span> % <span class="built_in">unit</span>(<span class="variable">$content</span>-desktop-<span class="attribute">padding</span> / <span class="number">2</span>, <span class="string">&#x27;px&#x27;</span>);</span><br><span class="line"><span class="variable">$content</span>-desktop-large        = <span class="number">1000px</span>;</span><br><span class="line"><span class="variable">$content</span>-desktop-largest      = <span class="number">60%</span>;</span><br></pre></td></tr></table></figure>
<p>这个文件还能调整标题、侧栏等的布局</p>
<h2 id="菜单设置"><a class="markdownIt-Anchor" href="#菜单设置"></a> 菜单设置</h2>
<p>修改主题配置文件，增加<code>标签</code>、<code>分类</code>、<code>归档</code>等菜单，并为菜单各个选项添加对应的页面</p>
<figure class="highlight yml"><figcaption><span>[Blogroot]/_config.next.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">home:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-home</span></span><br><span class="line">  <span class="attr">about:</span> <span class="string">/about/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-user</span></span><br><span class="line">  <span class="attr">tags:</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-tags</span></span><br><span class="line">  <span class="attr">categories:</span> <span class="string">/categories/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-th</span></span><br><span class="line">  <span class="attr">archives:</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-archive</span></span><br></pre></td></tr></table></figure>
<p>建立页面</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">hexo n page categories</span><br><span class="line">hexo n page about</span><br><span class="line">hexo n page tags</span><br></pre></td></tr></table></figure>
<p>编辑添加的页面，主要是要设置好<code>type</code>，让主题能够找到这个页面</p>
<figure class="highlight md"><figcaption><span>[Blogroot]/source/categories/index.md</span></figcaption><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: categories</span><br><span class="line">date: 2024-05-07 09:04:59</span><br><span class="line"><span class="section">type: &quot;categories&quot;</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure>
<figure class="highlight md"><figcaption><span>[Blogroot]/source/tags/index.md</span></figcaption><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: tags</span><br><span class="line">date: 2024-05-07 08:53:57</span><br><span class="line"><span class="section">type: &quot;tags&quot;</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure>
<figure class="highlight md"><figcaption><span>[Blogroot]/source/about/index.md</span></figcaption><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: about</span><br><span class="line">date: 2024-05-07 08:53:57</span><br><span class="line"><span class="section">type: &quot;about&quot;</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure>
<h2 id="侧栏"><a class="markdownIt-Anchor" href="#侧栏"></a> 侧栏</h2>
<h3 id="侧栏设置"><a class="markdownIt-Anchor" href="#侧栏设置"></a> 侧栏设置</h3>
<figure class="highlight yml"><figcaption><span>[Blogroot]/_config.next.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment"># 设置侧边栏默认开启</span></span><br><span class="line"><span class="attr">sidebar:</span></span><br><span class="line">  <span class="attr">display:</span> <span class="string">always</span></span><br><span class="line"><span class="comment"># 设置社交链接</span></span><br><span class="line"><span class="attr">social:</span></span><br><span class="line">  <span class="attr">GitHub:</span> <span class="string">https://github.com/Jccc-l</span> <span class="string">||</span> <span class="string">fab</span> <span class="string">fa-github</span></span><br><span class="line">  <span class="comment"># E-Mail: mailto:1216550215Jc@gmail.com || fa fa-envelope</span></span><br></pre></td></tr></table></figure>
<h3 id="社交媒体"><a class="markdownIt-Anchor" href="#社交媒体"></a> 社交媒体</h3>
<figure class="highlight yml"><figcaption><span>[Blogroot]/_config.next.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">social:</span></span><br><span class="line">  <span class="attr">GitHub:</span> <span class="string">https://github.com/yourname</span> <span class="string">||</span> <span class="string">fab</span> <span class="string">fa-github</span></span><br><span class="line">  <span class="comment">#E-Mail: mailto:yourname@gmail.com || fa fa-envelope</span></span><br></pre></td></tr></table></figure>
<h3 id="侧栏头像"><a class="markdownIt-Anchor" href="#侧栏头像"></a> 侧栏头像</h3>
<p>可以在配置文件中插入图片URL</p>
<figure class="highlight yml"><figcaption><span>[Blogroot]/_config.next.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">avatar:</span></span><br><span class="line">  <span class="attr">url:</span> <span class="string">https://1234567.com/xxxxx.png</span></span><br></pre></td></tr></table></figure>
<p>或者将头像文件放至<code>[Blogroot]/themes/next/source/images/</code>中，然后设置头像</p>
<figure class="highlight yml"><figcaption><span>[Blogroot]/_config.next.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">avatar:</span></span><br><span class="line">  <span class="comment"># 头像文件位置</span></span><br><span class="line">  <span class="attr">url:</span> <span class="string">/images/avatar.jpeg</span></span><br><span class="line">  <span class="comment"># 圆形头像</span></span><br><span class="line">  <span class="attr">rounded:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># 鼠标放在头像处时旋转</span></span><br><span class="line">  <span class="attr">rotated:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>
<h3 id="链接"><a class="markdownIt-Anchor" href="#链接"></a> 链接</h3>
<h3 id="文章目录"><a class="markdownIt-Anchor" href="#文章目录"></a> 文章目录</h3>
<figure class="highlight yml"><figcaption><span>[Blogroot]/_config.next.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">toc:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># 关闭序号</span></span><br><span class="line">  <span class="attr">number:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># 长标题换行</span></span><br><span class="line">  <span class="attr">wrap:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># 只在展开浏览中部分的目录</span></span><br><span class="line">  <span class="attr">expand_all:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># 目录的最大深度</span></span><br><span class="line">  <span class="attr">max_depth:</span> <span class="number">6</span></span><br></pre></td></tr></table></figure>
<p>还可以在侧栏添加知识共享许可信息，在<a href="#%E8%AE%B8%E5%8F%AF%E4%BF%A1%E6%81%AF">网页信息</a>部分有提到</p>
<h3 id="网易云音乐播放器"><a class="markdownIt-Anchor" href="#网易云音乐播放器"></a> 网易云音乐播放器</h3>
<p>打开网易云音乐的一首音乐的页面，点击生成外链播放器</p>
<img src="Outside_link.png" style="max-width:80%">
<p>复制HTML代码</p>
<img src="Copy_link.png" style="max-width:80%">
<p>编辑<code>[Blogroot]/themes/next/layout/_macro/sidebar.njk</code>文件，在其中合适的位置添加代码，并将iframe改为embed<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></p>
<figure class="highlight plaintext"><figcaption><span>[Blogroot]/themes/next/layout/_macro/sidebar.njk</span></figcaption><table><tr><td class="code"><pre><span class="line">&lt;embed id=&quot;musicplayer&quot; frameborder=&quot;no&quot; border=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; width=400 height=86 src=&quot;//music.163.com/outchain/player?type=2&amp;id=407450660&amp;auto=1&amp;height=66&quot;&gt;&lt;/embed&gt;</span><br></pre></td></tr></table></figure>
<p>然后重新生成博客即可</p>
<p>如果想在切换页面时仍然保持音乐的播放，需要开启<code>pjax</code></p>
<figure class="highlight yml"><figcaption><span>[Blogroot]/_config.next.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">pjax:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>自动播放用不了，暂时不知道怎么解决</p>
</blockquote>
<h2 id="页脚"><a class="markdownIt-Anchor" href="#页脚"></a> 页脚</h2>
<h3 id="添加网站运行时间"><a class="markdownIt-Anchor" href="#添加网站运行时间"></a> 添加网站运行时间<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup></h3>
<p>修改NexT主题配置，自定义footer</p>
<figure class="highlight yml"><figcaption><span>[Blogroot]/_config.next.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">custom_file_path:</span></span><br><span class="line">  <span class="attr">footer:</span> <span class="string">source/_data/footer.njk</span></span><br><span class="line">  <span class="attr">style:</span> <span class="string">source/_data/styles.styl</span></span><br></pre></td></tr></table></figure>
<p>编辑<code>footer.njk</code>文件</p>
<figure class="highlight plaintext"><figcaption><span>[Blogroot]/source/_data/footer.njk</span></figcaption><table><tr><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">&lt;span id=&quot;timeDate&quot;&gt;载入天数...&lt;/span&gt;&lt;span id=&quot;times&quot;&gt;载入时分秒...&lt;/span&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    var now = new Date();</span><br><span class="line">    function createtime() &#123;</span><br><span class="line">        var grt= new Date(&quot;05/04/2023 00:00:00&quot;);</span><br><span class="line">        now.setTime(now.getTime()+250);</span><br><span class="line">        days = (now - grt ) / 1000 / 60 / 60 / 24; dnum = Math.floor(days);</span><br><span class="line">        hours = (now - grt ) / 1000 / 60 / 60 - (24 * dnum); hnum = Math.floor(hours);</span><br><span class="line">        if(String(hnum).length ==1 )&#123;hnum = &quot;0&quot; + hnum;&#125; minutes = (now - grt ) / 1000 /60 - (24 * 60 * dnum) - (60 * hnum);</span><br><span class="line">        mnum = Math.floor(minutes); if(String(mnum).length ==1 )&#123;mnum = &quot;0&quot; + mnum;&#125;</span><br><span class="line">        seconds = (now - grt ) / 1000 - (24 * 60 * 60 * dnum) - (60 * 60 * hnum) - (60 * mnum);</span><br><span class="line">        snum = Math.round(seconds); if(String(snum).length ==1 )&#123;snum = &quot;0&quot; + snum;&#125;</span><br><span class="line">        document.getElementById(&quot;timeDate&quot;).innerHTML = &quot;本站已安全运行 &quot;+dnum+&quot; 天 &quot;;</span><br><span class="line">        document.getElementById(&quot;times&quot;).innerHTML = hnum + &quot; 小时 &quot; + mnum + &quot; 分 &quot; + snum + &quot; 秒&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">setInterval(&quot;createtime()&quot;,250);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>
<p>时间改为网站的起始时间</p>
<h3 id="添加版权信息"><a class="markdownIt-Anchor" href="#添加版权信息"></a> 添加版权信息</h3>
<figure class="highlight yml"><figcaption><span>[Blogroot]/_config.next.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">footer:</span></span><br><span class="line">  <span class="attr">copyright:</span> <span class="string">&lt;span</span> <span class="string">id=&quot;copyright&quot;&gt;</span> <span class="string">路过的即是风景.</span> <span class="string">All</span> <span class="string">rights</span> <span class="string">reserved.</span> <span class="string">Non-commercial</span> <span class="string">use</span> <span class="string">allowed</span> <span class="string">under</span> <span class="string">&lt;a</span> <span class="string">href=&quot;https://creativecommons.org/licenses/by-nc-sa/4.0/&quot;</span> <span class="string">target=&quot;_blank&quot;&gt;CC</span> <span class="string">BY-NC-SA</span> <span class="number">4.0</span><span class="string">&lt;/a&gt;.&lt;/span&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="正文形式配置"><a class="markdownIt-Anchor" href="#正文形式配置"></a> 正文形式配置</h2>
<h3 id="浏览进度条"><a class="markdownIt-Anchor" href="#浏览进度条"></a> 浏览进度条</h3>
<p>配置以下内容，可以在页面顶部或底部添加浏览进度条</p>
<figure class="highlight yml"><figcaption><span>[Blogroot]/_config.next.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">reading_progress:</span></span><br><span class="line">  <span class="comment"># 启用进度条</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># 进度条位置: top | bottom</span></span><br><span class="line">  <span class="attr">position:</span> <span class="string">top</span></span><br><span class="line">  <span class="comment"># 进度条颜色</span></span><br><span class="line">  <span class="attr">color:</span> <span class="string">&quot;#37c6c0&quot;</span></span><br><span class="line">  <span class="comment"># 进度条高度</span></span><br><span class="line">  <span class="attr">height:</span> <span class="string">3px</span></span><br></pre></td></tr></table></figure>
<h3 id="代码块"><a class="markdownIt-Anchor" href="#代码块"></a> 代码块</h3>
<figure class="highlight yml"><figcaption><span>[Blogroot]/_config.next.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">codeblock:</span></span><br><span class="line">  <span class="comment"># 高亮主题</span></span><br><span class="line">  <span class="comment"># All available themes: https://theme-next.js.org/highlight/</span></span><br><span class="line">  <span class="attr">theme:</span></span><br><span class="line">    <span class="attr">light:</span> <span class="string">github</span></span><br><span class="line">    <span class="attr">dark:</span> <span class="string">github-dark</span></span><br><span class="line">  <span class="attr">prism:</span></span><br><span class="line">    <span class="attr">light:</span> <span class="string">prism</span></span><br><span class="line">    <span class="attr">dark:</span> <span class="string">prism-dark</span></span><br><span class="line">  <span class="comment"># 在代码块处添加复制按钮</span></span><br><span class="line">  <span class="attr">copy_button:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="comment"># Available values: default | flat | mac</span></span><br><span class="line">    <span class="attr">style:</span> <span class="string">flat</span></span><br><span class="line">  <span class="comment"># 折叠代码块</span></span><br><span class="line">  <span class="attr">fold:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">height:</span> <span class="number">500</span></span><br></pre></td></tr></table></figure>
<h2 id="配置背景图"><a class="markdownIt-Anchor" href="#配置背景图"></a> 配置背景图</h2>
<p>自定义styl文件，设置背景</p>
<figure class="highlight styl"><figcaption><span>[Blogroot]/source/_data/styles.styl</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment">/* Body背景设置 */</span></span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">url</span>(/images/background.jpg) no-repeat fixed;</span><br><span class="line">    <span class="attribute">background-size</span>: cover;</span><br><span class="line">    <span class="attribute">background-position</span>: center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>设置文章背板等的颜色，并设置半透明效果</p>
<figure class="highlight styl"><figcaption><span>[Blogroot]/source/_data/styles.styl</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.main-inner</span> &gt; <span class="selector-class">.sub-menu</span>,</span><br><span class="line"><span class="selector-class">.main-inner</span> &gt; <span class="selector-class">.post-block</span>,</span><br><span class="line"><span class="selector-class">.main-inner</span> &gt; <span class="selector-class">.tabs-comment</span>,</span><br><span class="line"><span class="selector-class">.main-inner</span> &gt; <span class="selector-class">.comments</span>,</span><br><span class="line"><span class="selector-class">.main-inner</span> &gt; <span class="selector-class">.pagination</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">245</span>, <span class="number">245</span>, <span class="number">245</span>, <span class="number">0.8</span>); <span class="comment">/* 背景色透明度设置 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>将代码块、图片等部分透明度调为1，即不透明</p>
<figure class="highlight styl"><figcaption><span>[Blogroot]/source/_data/styles.styl</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">img</span> &#123;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">1</span>; <span class="comment">/* 设置图片不透明 */</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.table-container</span> &#123;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">1</span>; <span class="comment">/* 设置 table-container 不透明 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>设置侧边栏的透明度</p>
<figure class="highlight styl"><figcaption><span>[Blogroot]/source/_data/styles.styl</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.sidebar</span> &#123;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">0.9</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p><a href="https://www.cnblogs.com/roccoshi/p/13057664.html">为博客添加网易云音乐播放器外链</a> <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn2" class="footnote-item"><p><a href="https://blog.csdn.net/wangqingchuan92/article/details/126346205">【个人网站搭建】hexo框架Next主题下添加网站运行时间</a> <a href="#fnref2" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
      <categories>
        <category>Blog</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Blog</tag>
        <tag>NexT</tag>
      </tags>
  </entry>
  <entry>
    <title>大数据实验踩坑指南_No.1——Hadoop的安装配置</title>
    <url>/2024/06/16/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AE%9E%E9%AA%8C%E8%B8%A9%E5%9D%91%E6%8C%87%E5%8D%97-No-1%E2%80%94%E2%80%94Hadoop%E7%9A%84%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h1 id="大数据实验踩坑指南_no1hadoop的安装配置"><a class="markdownIt-Anchor" href="#大数据实验踩坑指南_no1hadoop的安装配置"></a> 大数据实验踩坑指南_No.1——Hadoop的安装配置</h1>
<!-- ```sh -->
<!-- #!/bin/bash -->
<!--  -->
<!-- # 检查是否以 root 权限运行 -->
<!-- if [ "$EUID" -ne 0 ]; then -->
  <!-- echo "Please run as root" -->
  <!-- exit 1 -->
<!-- fi -->
<!--  -->
<!-- rm -rf /usr/local/hadoop -->
<!-- rm -rf /usr/local/hive -->
<!-- rm -rf /usr/local/hbase -->
<!-- rm -rf /usr/local/zookeeper -->
<!--  -->
<!-- # 获取原始用户的用户名和组名 -->
<!-- original_user=$(id -un $SUDO_UID) -->
<!-- original_group=$(id -gn $SUDO_GID) -->
<!--  -->
<!-- # 解压文件 -->
<!-- tar -zxvf ./hadoop*.tar.gz -C /usr/local/ -->
<!-- tar -zxvf ./apache-hive*.tar.gz -C /usr/local/ -->
<!-- tar -zxvf ./apache-zookeeper*.tar.gz -C /usr/local/ -->
<!-- tar -zxvf ./hbase*.tar.gz -C /usr/local/ -->
<!--  -->
<!-- # 移动解压后的目录 -->
<!-- mv /usr/local/hadoop* /usr/local/hadoop -->
<!-- mv /usr/local/apache-hive* /usr/local/hive -->
<!-- mv /usr/local/apache-zookeeper* /usr/local/zookeeper -->
<!-- mv /usr/local/hbase* /usr/local/hbase -->
<!--  -->
<!-- echo "Directories have been extracted and ownership changed to $original_user:$original_group" -->
<!--  -->
<!-- # 配置环境变量 -->
<!-- echo "export HADOOP_HOME=/usr/local/hadoop">> /home/$original_user/.bashrc -->
<!-- echo "export HIVE_HOME=/usr/local/hive">> /home/$original_user/.bashrc -->
<!-- echo "export ZOOKEEPER_HOME=/usr/local/zookeeper">> /home/$original_user/.bashrc -->
<!-- echo "export HBASE_HOME=/usr/local/hbase">> /home/$original_user/.bashrc -->
<!-- echo "export JAVA_HOME=$(readlink -f $(which javac)|sed 's#/bin/javac##')">> /home/$original_user/.bashrc -->
<!-- echo "export JRE_HOME=/usr/lib/jvm/java-8-openjdk-amd64/jre">> /home/$original_user/.bashrc -->
<!-- echo "export CLASSPATH=.:\${JAVA_HOME}/lib:\${JRE_HOME}/lib">> /home/$original_user/.bashrc -->
<!-- echo "export PATH=\$PATH:\$HADOOP_HOME/bin:\$HADOOP_HOME/sbin:\$HIVE_HOME/bin:\$ZOOKEEPER_HOME/bin:\$HBASE_HOME/bin">>/home/$original_user/.bashrc -->
<!--  -->
<!-- # 安装JDBC驱动 -->
<!-- cp ./mysql-connector*.deb /tmp/ -->
<!-- apt install /tmp/mysql-connector*.deb -y -->
<!-- cp /usr/share/java/mysql-connector-j-*.jar /usr/local/hive/lib/ -->
<!--  -->
<!-- # 更改目录拥有者 -->
<!-- chown -R $original_user:$original_group /usr/local/hadoop -->
<!-- chown -R $original_user:$original_group /usr/local/hive -->
<!-- chown -R $original_user:$original_group /usr/local/hbase -->
<!-- chown -R $original_user:$original_group /usr/local/zookeeper -->
<!-- chown -R $original_user:$original_group /usr/local/bigdatacase -->
<!--  -->
<!-- ``` -->
<h2 id="前置准备"><a class="markdownIt-Anchor" href="#前置准备"></a> 前置准备</h2>
<h3 id="系统安装"><a class="markdownIt-Anchor" href="#系统安装"></a> 系统安装</h3>
<p>先要安装好<a href="https://mirrors.tuna.tsinghua.edu.cn/ubuntu-releases/22.04/ubuntu-22.04.4-desktop-amd64.iso">Ubuntu22.04</a></p>
<p>安装过程比较简单，下载镜像写入U盘，通过U盘启动镜像，根据提示安装即可</p>
<p>有一些比较重要的点写在下面</p>
<h4 id="显卡驱动问题"><a class="markdownIt-Anchor" href="#显卡驱动问题"></a> 显卡驱动问题</h4>
<p>NVIDIA显卡在安装的过程中可能会有显示不正常或者黑屏的问题，这是因为默认使用的是开源驱动<code>Nouveau</code>，只需要在引导界面<code>grub</code>上按<code>e</code>，然后在内核参数那一行加上<code>nomodeset</code>，禁用显卡驱动，安装过程就显示正常了</p>
<p>系统安装完成重启，同样加上<code>nomodeset</code>参数，然后安装好NVIDIA的显卡驱动重启就能正常了（如果在系统安装的时候选择了安装第三方软件，驱动应该也是装好的，装好后就不需要<code>nomodeset</code>参数了）</p>
<h4 id="分区"><a class="markdownIt-Anchor" href="#分区"></a> 分区</h4>
<p>安装过程中涉及到分区的操作，Linux中的分区与Windows不同，注意谨慎操作，以免造成数据丢失</p>
<p>我把300G的空闲分区分成两部分</p>
<ul>
<li>300MB的EFI分区（这是用于存放引导文件的分区，用于系统的启动）</li>
<li>剩余部分分给了根分区（用于存储系统的文件）</li>
</ul>
<p>当然也可以选择其他的分区方式</p>
<h3 id="必要程序的安装"><a class="markdownIt-Anchor" href="#必要程序的安装"></a> 必要程序的安装</h3>
<p>在这个案例中，所需要安装的apt包有以下这些，可以通过<code>sudo apt-get install [包名]</code>命令进行安装</p>
<ul>
<li><code>ssh</code>：网络传输协议</li>
<li><code>openjdk-8-jdk</code>：Java开发环境</li>
<li><code>mysql-server</code>：MySQL开源数据库</li>
<li><code>build-essential</code>：基础编译工具集合</li>
<li><code>cmake</code>：开源的跨平台自动化建构系统</li>
</ul>
<p>还有一些可选的工具包</p>
<ul>
<li><code>vim</code>：上手难度大但是强大的编辑器</li>
<li><code>xclip</code>：为vim提供一个访问系统剪贴板的接口（X11桌面协议）</li>
<li><code>wl-clipboard</code>：为vim提供一个访问系统剪贴板的接口（Wayland桌面协议，需要将环境变量<code>WAYLAND_DISPLAY设置为</code>wayland-0`）</li>
<li><code>git</code>：版本管理工具</li>
<li><code>curl</code>：网络传输工具，在安装R等软件的时候会用到</li>
</ul>
<h3 id="ssh配置"><a class="markdownIt-Anchor" href="#ssh配置"></a> SSH配置</h3>
<p>大数据软件需要SSH登录，用于各个软件、各个节点之间的相互访问</p>
<p>安装好<code>ssh</code>软件后，通过以下命令启动ssh服务</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> service ssh start</span><br></pre></td></tr></table></figure>
<p>然后通过以下命令登录本机</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">ssh localhost</span><br></pre></td></tr></table></figure>
<p>此时会有如下提示，输入yes。然后按照提示输入用户密码<code>hadoop</code>，即可登录到本机</p>
<blockquote>
<p>输入密码时不会像一些软件一样显示***的样式，直接输入密码回车</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">The authenticity of host &#x27;localhost (127.0.0.1)&#x27; can&#x27;t be established.</span><br><span class="line">ED25519 key fingerprint is SHA256:6puIK4dNQMuwyyKW+AIJscyEMvCLPSfbAWGM36Bslc4.</span><br><span class="line">This key is not known by any other names</span><br><span class="line">Are you sure you want to continue connecting (yes/no/[fingerprint])? yes</span><br><span class="line">Warning: Permanently added &#x27;localhost&#x27; (ED25519) to the list of known hosts.</span><br><span class="line">hadoop@localhost&#x27;s password: </span><br></pre></td></tr></table></figure>
<p>但是这样每次登录都需要输入密码，接下来配置无密码登录。首先输入<code>exit</code>退出ssh，回到原先的终端窗口，通过<code>ssh-keygen</code>生成密钥</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">ssh-keygen</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Generating public/private rsa key pair.</span><br><span class="line">Enter file in which to save the key (/home/hadoop/.ssh/id_rsa): Enter passphrase (empty for no passphrase): </span><br><span class="line">Enter same passphrase again: </span><br><span class="line">Your identification has been saved in /home/hadoop/.ssh/id_rsa</span><br><span class="line">Your public key has been saved in /home/hadoop/.ssh/id_rsa.pub</span><br><span class="line">The key fingerprint is:</span><br><span class="line">SHA256:dAclEXM4BgyYqGnpsRqRdUvVGmdbJBZU+Lhn7wi164o hadoop@jccc-MS-7D48</span><br><span class="line">The key&#x27;s randomart image is:</span><br></pre></td></tr></table></figure>
<blockquote>
<p>可以通过<code>-t</code>选项指定密钥类型，我这里不指定了，一路回车即可</p>
</blockquote>
<p>通过<code>ssh-copy-id</code>命令将公钥安装到远程主机上，按照提示输入密码<code>hadoop</code></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">ssh-copy-id localhost</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: &quot;/home/hadoop/.ssh/id_rsa.pub&quot;</span><br><span class="line">/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed</span><br><span class="line">/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys</span><br><span class="line">hadoop@localhost&#x27;s password: </span><br><span class="line"></span><br><span class="line">Number of key(s) added: 1</span><br><span class="line"></span><br><span class="line">Now try logging into the machine, with:   &quot;ssh &#x27;localhost&#x27;&quot;</span><br><span class="line">and check to make sure that only the key(s) you wanted were added.</span><br></pre></td></tr></table></figure>
<p>接下来尝试登录本机</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">ssh localhost</span><br></pre></td></tr></table></figure>
<p>可以看到不需要密码就能登陆了</p>
<h3 id="jdk"><a class="markdownIt-Anchor" href="#jdk"></a> JDK</h3>
<p>通过命令安装jdk</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt-get install openjdk-8-jdk</span><br></pre></td></tr></table></figure>
<p>查看<code>/usr/lib/jvm</code>目录的内容</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ls</span> /usr/lib/jvm</span><br></pre></td></tr></table></figure>
<p>可以看到<code>/usr/lib/jvm</code>内有两个目录<code>java-1.8.0-openjdk-amd64</code>和<code>java-8-openjdk-amd64</code>，其中<code>java-1.8.0-openjdk-amd64</code>是<code>java-8-openjdk-amd64</code>链接，相当于一个快捷方式（说法不太准确，但是先这样理解）</p>
<p>然后用你熟悉的编辑器（比如vim、nano，其中nano用法比较简单，也可以使用gedit，gedit是ubuntu中的一个GUI的编辑器，类似Windows的记事本）来打开<code>/home/hadoop/.bashrc</code>文件</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">gedit /home/hadoop/.bashrc</span><br></pre></td></tr></table></figure>
<p>在这个文件中添加以下内容（林子雨老师的教程中写的是在文件的开头添加，实际上配置的先后没有影响，除非前面的配置出现问题，导致配置文件加载失败，错误行以后的内容都不会进行加载）</p>
<figure class="highlight sh"><figcaption><span>/home/hadoop/.bashrc</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64</span><br><span class="line"><span class="built_in">export</span> JRE_HOME=/usr/lib/jvm/java-8-openjdk-amd64/jre</span><br><span class="line"><span class="built_in">export</span> CLASSPATH=.:<span class="variable">$&#123;JAVA_HOME&#125;</span>/lib:<span class="variable">$&#123;JRE_HOME&#125;</span>/lib</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$&#123;JAVA_HOME&#125;</span>/bin:<span class="variable">$PATH</span>		<span class="comment"># 通过apt安装的jdk好像不需要这一行，因为/usr/bin是被包含在PATH里的，而里面的java、javac等程序都是JAVA_HOME内程序的链接</span></span><br></pre></td></tr></table></figure>
<h2 id="hadoop基础安装"><a class="markdownIt-Anchor" href="#hadoop基础安装"></a> Hadoop基础安装</h2>
<p>到Hadoop官网<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>下载好<a href="https://www.apache.org/dyn/closer.cgi/hadoop/common/hadoop-3.3.6/hadoop-3.3.6.tar.gz">hadoop-3.3.6.tar.gz</a></p>
<p>将Hadoop解压到<code>/usr/local/</code>目录下</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> tar -zxvf /home/hadoop/Downloads/hadoop-3.3.6.tar.gz -C /usr/local/	<span class="comment"># 如果系统语言为中文，则文件路径应当是/home/hadoop/下载/hadoop-3.3.6.tar.gz，或者你下载到其他目录，就改为对应的路径</span></span><br><span class="line"><span class="built_in">cd</span> /usr/local													<span class="comment"># 进入安装目录</span></span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">mv</span> ./hadoop-3.3.6 hadoop									<span class="comment"># 将文件明改为hadoop</span></span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">chown</span> -R hadoop:hadoop ./hadoop							<span class="comment"># 将目录以及目录内的所有子目录、文件的拥有者改为hadoop用户组的hadoop用户</span></span><br></pre></td></tr></table></figure>
<p>编辑Hadoop的环境变量，找到文件对应的行进行修改，需要将<code>#</code>删掉，每一项的说明都可以在文件里查看</p>
<figure class="highlight sh"><figcaption><span>$HADOOP_HOME/etc/hadoop/hadoop-env.sh</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64</span><br><span class="line"><span class="built_in">export</span> HADOOP_HOME=/usr/local/hadoop</span><br><span class="line"><span class="built_in">export</span> HADOOP_CONF_DIR=<span class="variable">$&#123;HADOOP_HOME&#125;</span>/etc/hadoop</span><br><span class="line"><span class="built_in">export</span> HADOOP_PID_DIR=/usr/local/hadoop/pids</span><br></pre></td></tr></table></figure>
<p>输入以下命令来检查Hadoop是否可用，成功则会显示版本信息</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> <span class="variable">$HADOOP_HOME</span>			    <span class="comment"># 进入Hadoop的目录</span></span><br><span class="line">./bin/hadoop version        <span class="comment"># 查看Hadoop版本</span></span><br></pre></td></tr></table></figure>
<p>为了可以在任何目录下执行hadoop的命令，我们在.bashrc中配置环境变量</p>
<figure class="highlight sh"><figcaption><span>/home/hadoop/.bashrc</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> HADOOP_HOME=/usr/local/hadoop</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$HADOOP_HOME</span>/bin:<span class="variable">$HADOOP_HOME</span>/sbin</span><br></pre></td></tr></table></figure>
<blockquote>
<p><code>$</code>表示用于引用变量的值，<code>:</code>用于分隔路径列表</p>
</blockquote>
<p>配置完成后，通过以下命令加载配置</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">source</span> /home/hadoop/.bashrc</span><br></pre></td></tr></table></figure>
<p>执行以下命令，如果显示版本信息，则配置成功</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">hadoop version</span><br></pre></td></tr></table></figure>
<h2 id="伪分布式配置"><a class="markdownIt-Anchor" href="#伪分布式配置"></a> 伪分布式配置</h2>
<p>Hadoop可以在单节点以一个伪分布式的模式机型运行。不同的Hadoop守护进程运行在不同的java进程中。</p>
<p>编辑以下文件：<a id="tmpdir"></a></p>
<figure class="highlight xml"><figcaption><span>$HADOOP_HOME/etc/hadoop/core-site.xml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">name</span>&gt;</span>fs.defaultFS<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">value</span>&gt;</span>hdfs://localhost:9000<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">name</span>&gt;</span>hadoop.tmp.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">value</span>&gt;</span>/usr/local/hadoop/tmp<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight xml"><figcaption><span>$HADOOP_HOME/etc/hadoop/hdfs-site.xml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.replication<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">value</span>&gt;</span>1<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>在林老师的文档中，还配置了<code>dfs.namenode.name.dir</code>和<code>dfs.datanode.data.dir</code></p>
<p>而这两个变量的默认值为</p>
<ul>
<li><code>dfs.datanode.data.dir</code>: <code>file://$&#123;hadoop.tmp.dir&#125;/dfs/data</code></li>
<li><code>dfs.namemode.name.dir</code>: <code>file://$&#123;hadoop.tmp.dir&#125;/dfs/name</code></li>
</ul>
<p>所以只需要设置好tmp目录即可，默认的tmp目录为<code>/tmp</code>，这个目录内的文件会在电脑重启以后被清除，因此将其配置在$HADOOP_HOME内</p>
</blockquote>
<p>格式化hdfs文件系统<a id="namenodeformat"></a></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">hdfs namenode -format</span><br></pre></td></tr></table></figure>
<p>在倒数第十二行左右可以看到格式化成功的信息</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2024-06-15 20:55:38,067 INFO common.Storage: Storage directory /usr/local/hadoop/tmp/dfs/name has been successfully formatted.</span><br><span class="line">2024-06-15 20:55:38,161 INFO namenode.FSImageFormatProtobuf: Saving image file /usr/local/hadoop/tmp/dfs/name/current/fsimage.ckpt_0000000000000000000 using no compression</span><br><span class="line">2024-06-15 20:55:38,279 INFO namenode.FSImageFormatProtobuf: Image file /usr/local/hadoop/tmp/dfs/name/current/fsimage.ckpt_0000000000000000000 of size 401 bytes saved in 0 seconds .</span><br><span class="line">2024-06-15 20:55:38,292 INFO namenode.NNStorageRetentionManager: Going to retain 1 images with txid &gt;= 0</span><br><span class="line">2024-06-15 20:55:38,322 INFO namenode.FSNamesystem: Stopping services started for active state</span><br><span class="line">2024-06-15 20:55:38,322 INFO namenode.FSNamesystem: Stopping services started for standby state</span><br><span class="line">2024-06-15 20:55:38,324 INFO namenode.FSImage: FSImageSaver clean checkpoint: txid=0 when meet shutdown.</span><br><span class="line">2024-06-15 20:55:38,325 INFO namenode.NameNode: SHUTDOWN_MSG: </span><br><span class="line">/************************************************************</span><br><span class="line">SHUTDOWN_MSG: Shutting down NameNode at jccc-MS-7D48/127.0.1.1</span><br><span class="line">************************************************************/</span><br></pre></td></tr></table></figure>
<p>启动<code>NameNode</code>守护进程和<code>DataNode</code>守护进程</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">start-dfs.sh</span><br></pre></td></tr></table></figure>
<p>启动完成后，通过<code>jps</code>命令可以查看到相应的进程</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">43529 NameNode</span><br><span class="line">44041 Jps</span><br><span class="line">43692 DataNode</span><br><span class="line">43901 SecondaryNameNode</span><br></pre></td></tr></table></figure>
<blockquote>
<p>这些进程的作用如下</p>
<ul>
<li><code>NameNode</code>：HDFS的主节点，负责管理文件系统的命名空间和元数据信息。</li>
<li><code>DataNode</code>：HDFS的从节点，负责处理文件系统客户端的读写请求，在文件系统中实际存储数据。</li>
<li><code>SecondaryNameNode</code>：主要作用是帮助NameNode合并编辑日志（edits log）和文件系统镜像（fsimage），以此来减少NameNode启动时间。</li>
<li><code>Jps</code>：<code>jps</code>命令本身的进程，用于列出当前运行的Java进程。</li>
</ul>
</blockquote>
<h2 id="运行hadoop伪分布式实例"><a class="markdownIt-Anchor" href="#运行hadoop伪分布式实例"></a> 运行Hadoop伪分布式实例</h2>
<p>尝试运行Hadoop伪分布实例<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup></p>
<h2 id="问题集锦"><a class="markdownIt-Anchor" href="#问题集锦"></a> 问题集锦</h2>
<h5 id="缺少namenode"><a class="markdownIt-Anchor" href="#缺少namenode"></a> 缺少Namenode</h5>
<p>在集群启动后，输入<code>jps</code>查看进程发现缺少了Namenode<sup class="footnote-ref"><a href="#fn3" id="fnref3">[3]</a></sup></p>
<p>原因：</p>
<ol>
<li>启动Hadoop以后没有正常关闭就直接关机</li>
<li>频繁使用<code>hadoop namenode -format</code>对<code>Namenode</code>进行格式化</li>
<li>NameNode格式化失败</li>
</ol>
<p>解决方式：</p>
<ol>
<li>停止Hadoop集群
<ul>
<li><code>stop-dfs.sh</code></li>
</ul>
</li>
<li>查看<a href="#tmpdir">核心文件</a><code>core-site.xml</code>里的临时文件夹配置
<ul>
<li><code>&lt;value&gt;/usr/local/hadoop/tmp&lt;/value&gt;</code></li>
</ul>
</li>
<li>删除tmp文件夹
<ul>
<li><code>rm -rf /usr/local/hadoop/tmp</code></li>
</ul>
</li>
<li><a href="#namenodeformat">重新对Namenode进行格式化</a></li>
</ol>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p><a href="https://hadoop.apache.org/">Apache Hadoop</a> <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn2" class="footnote-item"><p><a href="https://dblab.xmu.edu.cn/blog/4193/">Hadoop3.3.5安装教程_单机/伪分布式配置_Hadoop3.3.5/Ubuntu22.04(20.04/18.04/16.04)</a> <a href="#fnref2" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn3" class="footnote-item"><p><a href="https://www.cnblogs.com/wansiqi/p/14848496.html#:~:text=Hadoop%E9%9B%86%E7%BE%A4%E5%90%AF%E5%8A%A8%E5%90%8Ejps%E7%BC%BA%E5%B0%91namenode%20%E5%8E%9F%E5%9B%A0%E5%88%86%E6%9E%90%EF%BC%9A1%E3%80%81%E5%87%BA%E7%8E%B0%E8%BF%99%E7%A7%8D%E6%83%85%E5%86%B5%E7%9A%84%E5%8E%9F%E5%9B%A0%E5%A4%A7%E5%A4%9A%E6%98%AF%E5%9B%A0%E4%B8%BA%E6%88%91%E4%BB%AC%E5%90%AF%E5%8A%A8Hadoop%E9%9B%86%E7%BE%A4%E5%90%8E%E6%B2%A1%E6%9C%89%E5%85%B3%E9%97%AD%E5%B0%B1%E7%9B%B4%E6%8E%A5%E5%85%B3%E9%97%AD%E4%BA%86%E8%99%9A%E6%8B%9F%E6%9C%BA%202%E3%80%81%E9%A2%91%E7%B9%81%E4%BD%BF%E7%94%A8hadoop%20namenode,-format%E5%AF%B9namenode%E8%BF%9B%E8%A1%8C%E6%A0%BC%E5%BC%8F%E5%8C%96%20%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88%EF%BC%9A1%EF%BC%89%E5%81%9C%E6%AD%A2Hadoop%E9%9B%86%E7%BE%A4%202%EF%BC%89%E6%9F%A5%E7%9C%8B%E6%A0%B8%E5%BF%83%E6%96%87%E4%BB%B6core-site.xml%203%EF%BC%89%E5%88%A0%E9%99%A4namenode%E5%BB%BA%E7%AB%8B%E7%9A%84%E4%B8%B4%E6%97%B6%E6%96%87%E4%BB%B6%E5%A4%B9%204%EF%BC%89%E9%87%8D%E6%96%B0%E5%AF%B9namenode%E6%A0%BC%E5%BC%8F%E5%8C%96%E5%90%8E%E5%86%8D%E6%AC%A1%E5%90%AF%E5%8A%A8%E9%9B%86%E7%BE%A4%E5%B0%B1%E5%A5%BD%E4%BA%86">Hadoop集群启动后jps缺少namenode</a> <a href="#fnref3" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
      <categories>
        <category>Big Data</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Big Data</tag>
        <tag>Hadoop</tag>
      </tags>
  </entry>
  <entry>
    <title>大数据实验踩坑指南_No.2——Hive的安装配置</title>
    <url>/2024/06/16/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AE%9E%E9%AA%8C%E8%B8%A9%E5%9D%91%E6%8C%87%E5%8D%97-No-2%E2%80%94%E2%80%94Hive%E7%9A%84%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h1 id="大数据实验踩坑指南_no2hive的安装配置"><a class="markdownIt-Anchor" href="#大数据实验踩坑指南_no2hive的安装配置"></a> 大数据实验踩坑指南_No.2——Hive的安装配置</h1>
<blockquote>
<p>事先说明，Beeline还有很多坑没有处理好，暂时先跳过，只使用传统Hive Cli</p>
</blockquote>
<h2 id="hive基础安装"><a class="markdownIt-Anchor" href="#hive基础安装"></a> Hive基础安装</h2>
<p>通过<a href="https://hive.apache.org">官网</a>下载<a href="https://dlcdn.apache.org/hive/hive-3.1.3/apache-hive-3.1.3-bin.tar.gz">apache-hive-3.1.3-bin.tar.gz</a></p>
<p>根据另一篇文章<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>安装好MySQL</p>
<p>将文件解压到<code>/usr/local</code>目录内</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> tar -zxvf /home/hadoop/Downloads/apache-hive-3.1.3-bin.tar.gz -C /usr/local/</span><br></pre></td></tr></table></figure>
<p>进入该目录并将Hive的主目录改名</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/local</span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">mv</span> apache-hive-3.1.3-bin hive</span><br></pre></td></tr></table></figure>
<p>修改目录拥有者</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> <span class="built_in">chown</span> -R hadoop:hadoop hive</span><br></pre></td></tr></table></figure>
<p>配置Hive相关的环境变量</p>
<figure class="highlight sh"><figcaption><span>/home/hadoop/.bashrc</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> HIVE_HOME=/usr/local/hive</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$HIVE_HOME</span>/bin</span><br></pre></td></tr></table></figure>
<p>加载配置文件</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">source</span> /home/hadoop/.bashrc</span><br></pre></td></tr></table></figure>
<h2 id="mysql配置"><a class="markdownIt-Anchor" href="#mysql配置"></a> MySQL配置</h2>
<p>启动MySQL服务</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> service mysql start</span><br></pre></td></tr></table></figure>
<p>登录MySQl Shell</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> mysql -u root</span><br></pre></td></tr></table></figure>
<p>创建<code>hadoop</code>用户，密码为<code>hadoop</code></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">CREATE</span> <span class="keyword">USER</span> <span class="string">&#x27;hadoop&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;hadoop&#x27;</span>;</span><br></pre></td></tr></table></figure>
<p>创建<code>hive</code>数据库并把数据库的权限赋予<code>hadoop</code>用户</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">create</span> database hive;</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">grant</span> <span class="keyword">all</span> privileges <span class="keyword">on</span> hive.<span class="operator">*</span> <span class="keyword">to</span> hadoop;</span><br></pre></td></tr></table></figure>
<p>最后记得刷新权限</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> flush privileges;</span><br></pre></td></tr></table></figure>
<p>输入<code>exit</code>退出MySQL</p>
<p>登录<code>hadoop</code>目录，输入密码<code>hadoop</code></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">mysql -u hadoop -p</span><br></pre></td></tr></table></figure>
<p>下载JDBC连接驱动的<a href="https://downloads.mysql.com/archives/c-j/">deb安装包</a>，我的MySQL版本为8.0.37，网站上写的Product Version只有8.0.33，不过也是兼容的，选择好MySQL版本和Ubuntu版本，即可下载<a href="https://downloads.mysql.com/archives/get/p/3/file/mysql-connector-j_8.0.33-1ubuntu22.04_all.deb">deb安装包</a></p>
<blockquote>
<p>现在MySQL版本更新到了9，可以直接使用MySQL 9和对应的JDBC驱动</p>
</blockquote>
<p>通过<code>apt</code>工具安装驱动</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt-get install /home/hadoop/Downloads/mysql-connector-j_8.0.33-1ubuntu22.04_all.deb</span><br></pre></td></tr></table></figure>
<p>然后将安装好的驱动复制到Hive的lib目录下</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cp</span> /usr/share/java/mysql-connector-j-8.0.33.jar <span class="variable">$HIVE_HOME</span>/lib/</span><br></pre></td></tr></table></figure>
<h2 id="mysql注意事项"><a class="markdownIt-Anchor" href="#mysql注意事项"></a> MySQL注意事项</h2>
<h4 id="通信问题"><a class="markdownIt-Anchor" href="#通信问题"></a> 通信问题</h4>
<p>为了让Hive与MySQL能通信，需要修改以下配置</p>
<figure class="highlight plaintext"><figcaption><span>/etc/mysql/mysql.conf.d/mysqld.cnf</span></figcaption><table><tr><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line">bind-address    = 0.0.0.0</span><br></pre></td></tr></table></figure>
<h4 id="命令差异"><a class="markdownIt-Anchor" href="#命令差异"></a> 命令差异</h4>
<p>MySQL8和MySQL5.7命令有差异</p>
<h5 id="创建用户与赋权"><a class="markdownIt-Anchor" href="#创建用户与赋权"></a> 创建用户与赋权</h5>
<p>在MySQL5.7版本上，使用以下命令可以同时创建账户并赋权</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">GRANT</span> <span class="keyword">ALL</span> PRIVILEGES <span class="keyword">ON</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">TO</span> <span class="string">&#x27;hadoop&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;hadoop&#x27;</span> <span class="keyword">WITH</span> <span class="keyword">GRANT</span> OPTION;</span><br></pre></td></tr></table></figure>
<p>但是在新版本的<code>MySQL 8.x</code>版本上，已经将两个操作分离，执行以上命令会导致语法错误</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="string">&#x27;hadoop&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;hadoop&#x27;</span> <span class="keyword">WITH</span> <span class="keyword">GRANT</span> OPTION;</span><br><span class="line">ERROR <span class="number">1064</span> (<span class="number">42000</span>): You have an error <span class="keyword">in</span> your <span class="keyword">SQL</span> syntax; <span class="keyword">check</span> the manual that corresponds <span class="keyword">to</span> your MySQL server version <span class="keyword">for</span> the <span class="keyword">right</span> syntax <span class="keyword">to</span> use near <span class="string">&#x27;IDENTIFIED BY &#x27;</span><span class="number">123456</span><span class="string">&#x27; WITH GRANT OPTION&#x27;</span> <span class="keyword">at</span> line <span class="number">1</span></span><br></pre></td></tr></table></figure>
<p>应将创建用户与授权命令分离：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">CREATE</span> <span class="keyword">USER</span> <span class="string">&#x27;hadoop&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;123456&#x27;</span>;</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">ON</span> hive.<span class="operator">*</span> <span class="keyword">TO</span> <span class="string">&#x27;hadoop&#x27;</span>@<span class="string">&#x27;%&#x27;</span>;</span><br></pre></td></tr></table></figure>
<h5 id="修改密码"><a class="markdownIt-Anchor" href="#修改密码"></a> 修改密码</h5>
<p>MySQL修改密码有三种方式<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup></p>
<p><strong>方法一</strong>：使用UPDATE语句更改MySQL用户密码</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> USE mysql;</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">UPDATE</span> <span class="keyword">user</span> </span><br><span class="line">            <span class="keyword">SET</span> password <span class="operator">=</span> PASSWORD(<span class="string">&#x27;newpasswd&#x27;</span>)</span><br><span class="line">            <span class="keyword">WHERE</span> <span class="keyword">user</span> <span class="operator">=</span> <span class="string">&#x27;hadoop&#x27;</span> <span class="keyword">AND</span> host <span class="operator">=</span> <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">mysql<span class="operator">&gt;</span> FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>注意：MySQL 5.7.6版本以下，才能使用此方法来修改密码。从MySQL 5.7.6版本起，user表仅使用authentication_string列代替之前版本中的password列来存储密码。此外，它删除了password列。</p>
</blockquote>
<p>版本在5.7.6+，必须在UPDATE语句中使用authentication_string列代替password列</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> USE mysql;</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">UPDATE</span> <span class="keyword">user</span> </span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SET</span> authentication_string <span class="operator">=</span> PASSWORD(<span class="string">&#x27;newpasswd&#x27;</span>)</span><br><span class="line">            <span class="keyword">WHERE</span> <span class="keyword">user</span> <span class="operator">=</span> <span class="string">&#x27;jccc&#x27;</span> <span class="keyword">AND</span> </span><br><span class="line">                  host <span class="operator">=</span> <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">mysql<span class="operator">&gt;</span> FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure>
<p><strong>方法二</strong>：使用SET PASSWORD语句更改MySQL用户密码</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SET</span> PASSWORD <span class="keyword">FOR</span> <span class="string">&#x27;jccc&#x27;</span>@<span class="string">&#x27;%&#x27;</span> <span class="operator">=</span> PASSWORD(<span class="string">&#x27;newpasswd2&#x27;</span>);</span><br></pre></td></tr></table></figure>
<p>从MySQL 5.7.6版本开始，MySQL不推荐使用此语法，可能会在将来的版本中将其删除。作为一个代替的解决方案，它使用明文密码如下：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SET</span> PASSWORD <span class="keyword">FOR</span> <span class="string">&#x27;jccc&#x27;</span>@<span class="string">&#x27;%&#x27;</span> <span class="operator">=</span> <span class="string">&#x27;newpasswd2&#x27;</span>;</span><br></pre></td></tr></table></figure>
<p><strong>方法三</strong>：使用<code>ALTER USER</code>语句改MySQL用户密码</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">ALTER</span> <span class="keyword">USER</span> jccc@<span class="operator">%</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;newpasswd3&#x27;</span>;</span><br></pre></td></tr></table></figure>
<h2 id="hive配置"><a class="markdownIt-Anchor" href="#hive配置"></a> Hive配置</h2>
<h3 id="hive自身配置"><a class="markdownIt-Anchor" href="#hive自身配置"></a> Hive自身配置</h3>
<p>进入Hive的目录，复制几个配置文件的模板</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> <span class="variable">$HIVE_HOME</span>/conf</span><br><span class="line"><span class="built_in">cp</span> hive-env.sh.template hive-env.sh</span><br><span class="line"><span class="built_in">cp</span> hive-default.xml.template hive-default.xml</span><br></pre></td></tr></table></figure>
<p>配置<code>hive-site.xml</code>文件，跟使用TiDB<sup class="footnote-ref"><a href="#fn3" id="fnref3">[3]</a></sup>的配置类似</p>
<p>各个选项的说明可以在<a href="https://cwiki.apache.org/confluence/display/Hive/Configuration+Properties?spm=5176.28103460.0.0.7d815d27rIvLt1#ConfigurationProperties-AuthenticationandAuthorization">这里</a>看到</p>
<blockquote>
<p><strong>注意</strong>：</p>
<p><a href="#%E5%91%BD%E4%BB%A4%E5%B7%AE%E5%BC%82">创建用户和授权命令在MySQL8.x版本中有所不同</a>，配置文件中根据你创建的MySQL用户和密码进行修改。</p>
<p><code>hive-site.xml</code>配置文件中，需要将<code>javax.jdo.option.ConnectionDriverName</code>的值修改为<code>com.mysql.cj.jdbc.Driver</code>，而原本的<code>com.mysql.jdbc.Driver</code>在较新的MySQL Connector/J版本中已被标记为过时，新的驱动类提供了更好的功能和性能。如果使用原本的值，初始化Hive会出现以下警告。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Loading class &#x27;com.mysql.jdbc.Driver&#x27;. This is deprecated. The new driver class is &#x27;com.mysql.cj.jdbc.Driver&#x27;. The driver is automatically registered via the SPI and manual loading of the driver class is generally unnecessary.</span><br></pre></td></tr></table></figure>
<p>还有用户名密码要设为MySQL中对应的。</p>
</blockquote>
<figure class="highlight xml"><figcaption><span>$HIVE_HOME/conf/hive-site.xml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">	<span class="comment">&lt;!-- MySQL连接配置 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">name</span>&gt;</span>javax.jdo.option.ConnectionURL<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">value</span>&gt;</span>jdbc:mysql://localhost:3306/hive<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">description</span>&gt;</span>MySQL address<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">name</span>&gt;</span>javax.jdo.option.ConnectionUserName<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">value</span>&gt;</span>hadoop<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">description</span>&gt;</span>MySQL username<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">name</span>&gt;</span>javax.jdo.option.ConnectionPassword<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">value</span>&gt;</span>hadoop<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">description</span>&gt;</span>MySQL password<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">name</span>&gt;</span>javax.jdo.option.ConnectionDriverName<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">value</span>&gt;</span>com.mysql.cj.jdbc.Driver<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!-- Metastore配置 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">name</span>&gt;</span>hive.metastore.uris<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">value</span>&gt;</span>thrift://localhost:9083<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">name</span>&gt;</span>hive.metastore.schema.verification<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">value</span>&gt;</span>false<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">		新版本（4.0）使用Beeline代替了传统的hive cli</span></span><br><span class="line"><span class="comment">		Beeline需要通过HiveServer2网络服务对Hive进行访问</span></span><br><span class="line"><span class="comment">		如果使用3.x的版本，可以直接在hive cli中输入SQL语句，hive cli并不依赖于HivesServer2</span></span><br><span class="line"><span class="comment">		（但是即使你使用的是3.x的版本，在实验后面把数据从Hive导入MySQL时</span></span><br><span class="line"><span class="comment">		仍然需要使用到HiveServer2）</span></span><br><span class="line"><span class="comment">		下面是hiveserver2的配置</span></span><br><span class="line"><span class="comment">	--&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">name</span>&gt;</span>hive.server2.thrift.port<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">value</span>&gt;</span>10000<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">name</span>&gt;</span>hive.server2.thrift.bind.host<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">value</span>&gt;</span>127.0.0.1<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!-- 这里为了方便，我们将HiveServer2设置为无需认证（也可以省略这个配置，默认值即为NONE）</span></span><br><span class="line"><span class="comment">	任何客户端可直接连接到HiveServer2</span></span><br><span class="line"><span class="comment">	安全的认证方式有简单用户名/密码认证、Kerberos 认证、LDAP 认证、PAM认证等</span></span><br><span class="line"><span class="comment">	如有需要，自行进行配置</span></span><br><span class="line"><span class="comment">	--&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">name</span>&gt;</span>hive.server2.authentication<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">value</span>&gt;</span>NONE<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>配置Hive的环境变量<code>hive-env.sh</code></p>
<figure class="highlight sh"><figcaption><span>$HIVE_HOME/conf/hive-env.sh</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> HADOOP_HOME=/usr/local/hadoop</span><br><span class="line"><span class="built_in">export</span> JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64</span><br><span class="line"><span class="built_in">export</span> HIVE_CONF_DIR=/usr/local/hive/conf</span><br><span class="line"><span class="built_in">export</span> HIVE_AUX_JARS_PATH=/usr/local/hive/lib</span><br></pre></td></tr></table></figure>
<p>运行下面的命令初始化MySQL元数据</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">schematool -dbType mysql -initSchema --verbose</span><br></pre></td></tr></table></figure>
<h3 id="配置hadoop的代理用户"><a class="markdownIt-Anchor" href="#配置hadoop的代理用户"></a> 配置Hadoop的代理用户</h3>
<p>HiveServer2的使用需要用到Hadoop的代理用户，使用以下配置允许hadoop用户代理所有主机中和所有用户</p>
<figure class="highlight xml"><figcaption><span>$HADOOP_HOME/etc/hadoop/core-site.xml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>hadoop.proxyuser.hadoop.hosts<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>*<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>hadoop.proxyuser.hadoop.groups<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>*<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p><strong>注意</strong>：这里的hadoop.proxyuser.xxx.hosts和hadoop.proxy.xxx.groups要把中间的xxx换成你的用户名<sup class="footnote-ref"><a href="#fn4" id="fnref4">[4]</a></sup>，也就是允许xxx代理所有主机所有用户（折腾几天才发现hiveserver2启动不起来是这里的问题(≖_≖ )）</p>
</blockquote>
<h3 id="启动并试用hive"><a class="markdownIt-Anchor" href="#启动并试用hive"></a> 启动并试用Hive</h3>
<p>首先启动Hadoop集群</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">start-all.sh</span><br></pre></td></tr></table></figure>
<p>启动Metastore（传统Hive Cli不需要HiveServer2）</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">hive --service metastore</span><br></pre></td></tr></table></figure>
<p>启动Hive客户端并进行测试</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">hive</span><br></pre></td></tr></table></figure>
<p>在里面可以输入SQL语句，如果要退出Hive交互式执行环境，可以输入如下命令：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hive&gt; exit;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>（Beeline部分待完善）<br />
如果使用的是4.0版本，Beeline代替了传统的hive cli，需要先启动HiveServer2再进入Beeline，大部分Hive的SQL语句也是可以用于Beeline的</p>
<p>启动HiveServer2：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">hive --service hiveserver2</span><br></pre></td></tr></table></figure>
<p>Beeline连接HiveServer2。为了拥有访问hadoop目录的权限，把<code>username</code>改为你的系统用户名</p>
<blockquote>
<p>如果不指定用户，使用的是匿名用户，没有权限访问/user/hive/warehouse，无法创建数据库</p>
</blockquote>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">beeline -u jdbc:hive2://localhost:10000 -n username</span><br></pre></td></tr></table></figure>
<p>使用<code>!quit</code>或<code>!exit</code>退出Beeline</p>
</blockquote>
<h2 id="hive排错"><a class="markdownIt-Anchor" href="#hive排错"></a> Hive排错</h2>
<h3 id="无法执行hive的sql语句"><a class="markdownIt-Anchor" href="#无法执行hive的sql语句"></a> 无法执行Hive的SQL语句</h3>
<p>运行hive命令如果报错：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">FAILED: HiveException java.lang.RuntimeException: Unable to instantiate org.apache.hadoop.hive.ql.metadata.SessionHiveMetaStoreClient</span><br></pre></td></tr></table></figure>
<p>说明<code>Hive</code>在尝试连接到Hive MetaStore时失败了</p>
<p>可能是因为<code>Hive MetaStore</code>服务没有运行，在后台运行以下命令：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">hive --service metastore &amp;</span><br></pre></td></tr></table></figure>
<p>然后再运行<code>hive</code>即可正常使用</p>
<p>如果还是不行，就重新初始化<code>hive</code></p>
<p>尝试进入MySQL将hive数据库删除。由于已经授权给用户<code>hadoop</code>，直接登录<code>hadoop</code>对hive数据库重置即可，无需登录<code>root</code>用户进行删除并重新创建授权</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">drop</span> database hive;</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">create</span> database hive;</span><br></pre></td></tr></table></figure>
<p>然后删除HDFS中的<code>/tmp</code>目录</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">hdfs dfs -<span class="built_in">rm</span> -r /tmp</span><br></pre></td></tr></table></figure>
<p>再重新升级元数据</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">schematool -initSchema -dbType mysql --verbose</span><br></pre></td></tr></table></figure>
<h3 id="格式化失败"><a class="markdownIt-Anchor" href="#格式化失败"></a> 格式化失败</h3>
<p>如果在运行<code>schematool</code>命令进行初始化时报以下错误</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Error: Table &#x27;CTLGS&#x27; already exists (state=42S01,code=1050)</span><br><span class="line">org.apache.hadoop.hive.metastore.HiveMetaException: Schema initialization FAILED! Metastore state would be inconsistent !!</span><br><span class="line">Underlying cause: java.io.IOException : Schema script failed, errorcode 2</span><br><span class="line">Use --verbose for detailed stacktrace.</span><br><span class="line">*** schemaTool failed ***</span><br></pre></td></tr></table></figure>
<p>可以尝试先进入<code>MySQL</code>，删除<code>hive</code>数据库再重建</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">DROP</span> DATABASE hive;</span><br><span class="line"><span class="keyword">CREATE</span> DATABASE hive;</span><br></pre></td></tr></table></figure>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><a href="/2024/06/16/Ubuntu%E4%B8%8B%E7%9A%84MySQL%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/" title="Ubuntu下的MySQL安装配置">Ubuntu下的MySQL安装配置</a>
 <a href="#fnref1" class="footnote-backref">↩︎</a></li>
<li id="fn2" class="footnote-item"><p><a href="https://blog.csdn.net/happyxin_/article/details/125614272">MySQL修改密码（三种方法示例）</a> <a href="#fnref2" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn3" class="footnote-item"><p><a href="https://cwiki.apache.org/confluence/display/Hive/Using+TiDB+as+the+Hive+Metastore+database">Using TiDB as the Hive Metastore database</a> <a href="#fnref3" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn4" class="footnote-item"><p><a href="https://hadoop.apache.org/docs/current/hadoop-project-dist/hadoop-common/Superusers.html">Proxy user - Superusers Acting On Behalf Of Other Users</a> <a href="#fnref4" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
      <categories>
        <category>Big Data</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
        <tag>Database</tag>
        <tag>Big Data</tag>
      </tags>
  </entry>
  <entry>
    <title>大数据实验踩坑指南_No.3——ZooKeeper的安装配置.md</title>
    <url>/2024/06/16/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AE%9E%E9%AA%8C%E8%B8%A9%E5%9D%91%E6%8C%87%E5%8D%97-No-3%E2%80%94%E2%80%94ZooKeeper%E7%9A%84%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h1 id="大数据实验踩坑指南_no3zookeeper的安装配置"><a class="markdownIt-Anchor" href="#大数据实验踩坑指南_no3zookeeper的安装配置"></a> 大数据实验踩坑指南_No.3——ZooKeeper的安装配置</h1>
<h2 id="zookeeper基础安装"><a class="markdownIt-Anchor" href="#zookeeper基础安装"></a> ZooKeeper基础安装</h2>
<h3 id="下载并解压zookeeper"><a class="markdownIt-Anchor" href="#下载并解压zookeeper"></a> 下载并解压ZooKeeper</h3>
<p>首先确保你已经从官方网站下载了正确版本的ZooKeeper压缩文件，这里假设你已经下载了<code>apache-zookeeper-3.9.2-bin.tar.gz</code>文件到<code>/home/hadoop/Downloads/BG</code>目录。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> /home/hadoop/Downloads/BG</span><br><span class="line"><span class="built_in">cd</span> /home/hadoop/Downloads/BG</span><br><span class="line">wget https://dlcdn.apache.org/zookeeper/zookeeper-3.9.2/apache-zookeeper-3.9.2-bin.tar.gz</span><br></pre></td></tr></table></figure>
<p>接下来，解压这个文件到<code>/usr/local</code>目录</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> tar -zxvf /home/hadoop/Downloads/BG/apache-zookeeper-3.9.2-bin.tar.gz -C /usr/local/</span><br></pre></td></tr></table></figure>
<h3 id="进入解压目录并将zookeeper的主目录重命名"><a class="markdownIt-Anchor" href="#进入解压目录并将zookeeper的主目录重命名"></a> 进入解压目录并将ZooKeeper的主目录重命名</h3>
<p>进入<code>/usr/local</code>目录，对解压后的目录重命名</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/local/</span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">mv</span> ./apache-zookeeper-3.9.2-bin ./zookeeper</span><br></pre></td></tr></table></figure>
<h3 id="修改目录拥有者"><a class="markdownIt-Anchor" href="#修改目录拥有者"></a> 修改目录拥有者</h3>
<p>然后更改目录的所有权</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> <span class="built_in">chown</span> -R hadoop:hadoop ./zookeeper</span><br></pre></td></tr></table></figure>
<p>配置环境变量</p>
<figure class="highlight sh"><figcaption><span>/home/hadoop/.bashrc</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> ZOOKEEPER_HOME=/usr/local/zookeeper</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$ZOOKEEPER_HOME</span>/bin</span><br></pre></td></tr></table></figure>
<p>加载配置</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">source</span> /home/hadoop/.bashrc</span><br></pre></td></tr></table></figure>
<h2 id="zookeeper配置启动"><a class="markdownIt-Anchor" href="#zookeeper配置启动"></a> ZooKeeper配置启动</h2>
<h3 id="添加并修改配置文件"><a class="markdownIt-Anchor" href="#添加并修改配置文件"></a> 添加并修改配置文件</h3>
<p>进入ZooKeeper的配置目录，并复制一份配置的模板</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> <span class="variable">$ZOOKEEPER_HOME</span>/conf</span><br><span class="line"><span class="built_in">cp</span> <span class="variable">$ZOOKEEPER_HOME</span>/conf/zoo_sample.cfg <span class="variable">$ZOOKEEPER_HOME</span>/conf/zoo.cfg</span><br></pre></td></tr></table></figure>
<p>修改<code>zoo.cfg</code>文件内容</p>
<figure class="highlight plaintext"><figcaption><span>$ZOOKEEPER_HOME/conf/zoo.cfg</span></figcaption><table><tr><td class="code"><pre><span class="line">tickTime=2000</span><br><span class="line">initLimit=10</span><br><span class="line">syncLimit=5</span><br><span class="line">dataDir=/usr/local/zookeeper/data			# 修改这个数据目录，以免数据被清除</span><br><span class="line">clientPort=2181</span><br></pre></td></tr></table></figure>
<h3 id="启动并测试zookeeper是否正确运行"><a class="markdownIt-Anchor" href="#启动并测试zookeeper是否正确运行"></a> 启动并测试ZooKeeper是否正确运行</h3>
<p>输入以下命令启动ZooKeeper服务</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">zkServer.sh start</span><br></pre></td></tr></table></figure>
<p>输入<code>jps</code>，可以看到ZooKeeper的进程</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">51900 QuorumPeerMain</span><br></pre></td></tr></table></figure>
<p>连接ZooKeeper</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">zkCli.sh -server 127.0.0.1:2181</span><br></pre></td></tr></table></figure>
<p>连接成功会看到以下信息：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Connecting to localhost:2181</span><br><span class="line">...</span><br><span class="line">Welcome to ZooKeeper!</span><br><span class="line">...</span><br><span class="line">JLine support is enabled</span><br><span class="line">...</span><br></pre></td></tr></table></figure>
<p>输入<code>quit</code>退出ZooKeeper</p>
<p>退出后，输入以下命令停止ZooKeeper服务</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">zkServer.sh stop</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Big Data</category>
      </categories>
      <tags>
        <tag>Big Data</tag>
        <tag>ZooKeeper</tag>
        <tag>HBase</tag>
      </tags>
  </entry>
  <entry>
    <title>大数据实验踩坑指南_No.4——HBase的安装配置.md</title>
    <url>/2024/06/16/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AE%9E%E9%AA%8C%E8%B8%A9%E5%9D%91%E6%8C%87%E5%8D%97-No-4%E2%80%94%E2%80%94HBase%E7%9A%84%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h1 id="大数据实验踩坑指南_no4hbase的安装配置"><a class="markdownIt-Anchor" href="#大数据实验踩坑指南_no4hbase的安装配置"></a> 大数据实验踩坑指南_No.4——HBase的安装配置</h1>
<h2 id="前置准备"><a class="markdownIt-Anchor" href="#前置准备"></a> 前置准备</h2>
<p>按照之前的内容配置好Hadoop和Zookeeper<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></p>
<h2 id="hbase基础安装"><a class="markdownIt-Anchor" href="#hbase基础安装"></a> HBase基础安装</h2>
<p>到<a href="https://hbase.apache.org">HBase官网</a>下载<a href="https://dlcdn.apache.org/hbase/2.5.8/hbase-2.5.8-hadoop3-bin.tar.gz">hbase-2.5.8-hadoop3-bin.tar.gz</a></p>
<p>解压文件到<code>/usr/local</code>目录</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> tar -zxvf /home/hadoop/Downloads/hbase-2.5.8-hadoop3-bin.tar.gz -C /usr/local/</span><br><span class="line"><span class="built_in">cd</span> /usr/local													<span class="comment"># 进入安装目录</span></span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">mv</span> hbase-2.5.8-hadoop3 hbase								<span class="comment"># 将文件明改为hadoop</span></span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">chown</span> -R hadoop:hadoop ./hbase							<span class="comment"># 将目录以及目录内的所有子目录、文件的拥有者改为hadoop用户组的hadoop用户</span></span><br></pre></td></tr></table></figure>
<p>配置hbase的环境变量</p>
<figure class="highlight sh"><figcaption><span>/home/hadoop/.bashrc</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> HBASE_HOME=/usr/local/hbase</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$HBASE_HOME</span>/bin</span><br></pre></td></tr></table></figure>
<figure class="highlight sh"><figcaption><span>$HBASE_HOME/conf/hbase-env.sh</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64</span><br><span class="line"><span class="built_in">export</span> HBASE_MANAGES_ZK=<span class="literal">false</span>								<span class="comment"># 因为我们使用自己安装的ZooKeeper，就禁用自带的ZooKeeper</span></span><br></pre></td></tr></table></figure>
<h2 id="hbase配置"><a class="markdownIt-Anchor" href="#hbase配置"></a> HBase配置</h2>
<p>参考<code>$HADOOP_HOME/etc/hadoop/core-site.xml</code>修改<code>hbase-site.xml</code></p>
<figure class="highlight xml"><figcaption><span>$HADOOP_HOME/etc/hadoop/core-site.xml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>fs.defaultFS<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>hdfs://localhost:9000<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight xml"><figcaption><span>$HBASE_HOME/conf/hbase-site.xml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">name</span>&gt;</span>hbase.cluster.distributed<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">name</span>&gt;</span>hbase.tmp.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">value</span>&gt;</span>/usr/local/hbase/tmp<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">name</span>&gt;</span>hbase.unsafe.stream.capability.enforce<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">value</span>&gt;</span>false<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">name</span>&gt;</span>hbase.rootdir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">value</span>&gt;</span>hdfs://localhost:9000/hbase<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>注意<code>hbase.rootdir</code>的端口号要与<code>$HADOOP_HOME/etc/hadoop/core-site.xml</code>文件中<code>fs.defaultFS</code>的端口号要一致，这里是<code>9000</code>，HBase给出的端口号是<code>8020</code>，是不正确的</p>
</blockquote>
<h2 id="启动hbase"><a class="markdownIt-Anchor" href="#启动hbase"></a> 启动HBase</h2>
<p>启动HBase之前先启动HDFS和ZooKeeper</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">start-dfs.sh</span><br><span class="line">zkServer.sh start</span><br></pre></td></tr></table></figure>
<p>然后启动HBase</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">start-hbase.sh</span><br></pre></td></tr></table></figure>
<p>输入<code>jps</code>可以看到<code>HRegionServer</code>、<code>HMaster</code>、进程已经启动</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">56532 HRegionServer</span><br><span class="line">56328 HMaster</span><br><span class="line">43529 NameNode</span><br><span class="line">43692 DataNode</span><br><span class="line">51900 QuorumPeerMain</span><br><span class="line">43901 SecondaryNameNode</span><br><span class="line">57310 Jps</span><br></pre></td></tr></table></figure>
<p>进入HBase Shell：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">hbase shell</span><br></pre></td></tr></table></figure>
<p>输出如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">HBase Shell</span><br><span class="line">Use &quot;help&quot; to get list of supported commands.</span><br><span class="line">Use &quot;exit&quot; to quit this interactive shell.</span><br><span class="line">For Reference, please visit: http://hbase.apache.org/2.0/book.html#shell</span><br><span class="line">Version 2.5.8-hadoop3, r37444de6531b1bdabf2e445c83d0268ab1a6f919, Thu Feb 29 15:55:21 PST 2024</span><br><span class="line">Took 0.0017 seconds</span><br><span class="line">hbase:001:0&gt;</span><br></pre></td></tr></table></figure>
<p>输入<code>exit</code>退出HBase Shell</p>
<p>停止HBase的运行：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">stop-hbase.sh</span><br></pre></td></tr></table></figure>
<p>如果无法停止，先通过<code>hbase-daemon.sh</code>把<code>master</code>和<code>religionserver</code>停止</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">hbase-daemon.sh stop religionserver</span><br><span class="line">hbase-daemon.sh stop master</span><br><span class="line">stop-hbase.sh</span><br></pre></td></tr></table></figure>
<p>输入<code>jps</code>可以看到<code>HMaster</code>和<code>HRegionServer</code>已经不见了</p>
<blockquote>
<p><strong>重要</strong>：<br />
HBase和Hadoop的启动顺序一定是【启动HDFS<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span></span></span></span>启动HBase】<br />
关闭顺序一定是【关闭HBase<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span></span></span></span>关闭HDFS】<br />
ZooKeeper一定要在HBase之前启动</p>
</blockquote>
<h2 id="hbase试用和排错"><a class="markdownIt-Anchor" href="#hbase试用和排错"></a> HBase试用和排错</h2>
<p>启动Hbase Shell</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">hbase shell</span><br></pre></td></tr></table></figure>
<p>尝试创建并列出表</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">HBase Shell</span><br><span class="line">Use &quot;help&quot; to get list of supported commands.</span><br><span class="line">Use &quot;exit&quot; to quit this interactive shell.</span><br><span class="line">For Reference, please visit: http://hbase.apache.org/2.0/book.html#shell</span><br><span class="line">Version 2.5.8-hadoop3, r37444de6531b1bdabf2e445c83d0268ab1a6f919, Thu Feb 29 15:55:21 PST 2024</span><br><span class="line">Took 0.0017 seconds                                                                                                                     </span><br><span class="line">hbase:001:0&gt; create &quot;test&quot;,&quot;cf&quot;</span><br><span class="line">Created table test</span><br><span class="line">Took 1.0771 seconds                                                                                                                     </span><br><span class="line">=&gt; Hbase::Table - test</span><br><span class="line">hbase:002:0&gt; list</span><br><span class="line">TABLE                                                                                                                                   </span><br><span class="line">test                                                                                                                                    </span><br><span class="line">1 row(s)</span><br><span class="line">Took 0.0303 seconds                                                                                                                     </span><br><span class="line">=&gt; [&quot;test&quot;]</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>可以看到创建成功了</p>
<p>其他HBase的操作请查看<a href="https://dblab.xmu.edu.cn/blog/4252/">林老师的文档</a></p>
<p><strong>如果没有创建成功并报错</strong>：<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ERROR: org.apache.hadoop.hbase.ipc.ServerNotRunningYetException: Server is not running yet</span><br></pre></td></tr></table></figure>
<p>有两种原因</p>
<p><strong>原因一</strong>：可能是因为hadoop还处于安全模式，输入以下命令查看</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">hdfs dfsadmin -safemode get</span><br></pre></td></tr></table></figure>
<p>如果输出如下，等待一段时间，Hadoop会自动退出安全模式，<code>ON</code>会变为<code>OFF</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Safe mode is ON</span><br></pre></td></tr></table></figure>
<p><strong>原因二</strong>：jar包冲突</p>
<p>在Hadoop和HBase中的jar包冲突了</p>
<p>首先停止HBase</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">stop-hbase.sh</span><br></pre></td></tr></table></figure>
<p>如果无法停止，先通过<code>hbase-daemon.sh</code>把<code>master</code>和<code>religionserver</code>停止</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">hbase-daemon.sh stop religionserver</span><br><span class="line">hbase-daemon.sh stop master</span><br><span class="line">stop-hbase.sh</span><br></pre></td></tr></table></figure>
<p>修改HBase的以下配置，将注释符号<code>#</code>去掉，然后重启HBase</p>
<figure class="highlight sh"><figcaption><span>$HBASE_HOME/conf/hbase-env.sh</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> HBASE_DISABLE_HADOOP_CLASSPATH_LOOKUP=<span class="string">&quot;true&quot;</span></span><br></pre></td></tr></table></figure>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><ul>
<li>
<a href="/2024/06/16/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AE%9E%E9%AA%8C%E8%B8%A9%E5%9D%91%E6%8C%87%E5%8D%97-No-1%E2%80%94%E2%80%94Hadoop%E7%9A%84%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/" title="大数据实验踩坑指南_No.1——Hadoop的安装配置">大数据实验踩坑指南_No.1——Hadoop的安装配置</a>
</li>
<li>
<a href="/2024/06/16/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AE%9E%E9%AA%8C%E8%B8%A9%E5%9D%91%E6%8C%87%E5%8D%97-No-3%E2%80%94%E2%80%94ZooKeeper%E7%9A%84%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/" title="大数据实验踩坑指南_No.3——ZooKeeper的安装配置.md">大数据实验踩坑指南_No.3——ZooKeeper的安装配置.md</a>
</li>
</ul>
 <a href="#fnref1" class="footnote-backref">↩︎</a></li>
<li id="fn2" class="footnote-item"><p><a href="https://www.cnblogs.com/zhangrui153169/p/15736700.html">Hbase正常启动，执行命令报错 Server is not running yet</a> <a href="#fnref2" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
      <categories>
        <category>Big Data</category>
      </categories>
      <tags>
        <tag>Database</tag>
        <tag>Big Data</tag>
        <tag>Hadoop</tag>
        <tag>ZooKeeper</tag>
        <tag>HBase</tag>
      </tags>
  </entry>
  <entry>
    <title>大数据实验踩坑指南_No.5——R语言和软件包的安装</title>
    <url>/2024/06/16/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AE%9E%E9%AA%8C%E8%B8%A9%E5%9D%91%E6%8C%87%E5%8D%97-No-5%E2%80%94%E2%80%94R%E8%AF%AD%E8%A8%80%E5%92%8C%E8%BD%AF%E4%BB%B6%E5%8C%85%E7%9A%84%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<h1 id="大数据实验踩坑指南_no5r语言和软件包的安装"><a class="markdownIt-Anchor" href="#大数据实验踩坑指南_no5r语言和软件包的安装"></a> 大数据实验踩坑指南_No.5——R语言和软件包的安装</h1>
<h2 id="安装r"><a class="markdownIt-Anchor" href="#安装r"></a> 安装R</h2>
<p>安装R的步骤可以在CRAN<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>上查看，这里不赘述</p>
<h2 id="安装依赖"><a class="markdownIt-Anchor" href="#安装依赖"></a> 安装依赖</h2>
<p>由于在Ubuntu上不支持通过二进制包进行安装R包，需要安装<code>r-base-dev</code>软件包来编译R包</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt-get install r-base-dev</span><br></pre></td></tr></table></figure>
<p>安装完成后，为了后续能顺利安装好所需的R包，首先需要用<code>apt</code>安装以下一些依赖<a id="RDependencies"></a></p>
<ul>
<li>libcurl4-openssl-dev：用于网络请求。</li>
<li>libxml2-dev：用于处理XML数据。</li>
<li>libssl-dev：SSL/TLS支持。</li>
<li>libncurses5-dev：用于文本用户界面。</li>
<li>libbz2-dev：bzip2压缩支持。</li>
<li>libreadline-dev：用于读取和编辑命令行输入。</li>
<li>libsqlite3-dev：SQLite数据库支持。</li>
<li>libpng-dev：PNG图像支持。</li>
<li>libjpeg-dev：JPEG图像支持。</li>
<li>libtiff-dev：TIFF图像支持。</li>
<li>libpango1.0-dev：文本布局和渲染。</li>
<li>libharfbuzz-dev：文本形状化。</li>
<li>libfreetype6-dev：TrueType字体支持。</li>
<li>liblcms2-dev：色彩管理。</li>
<li>libpangoft2-dev：Pango和FreeType的接口。</li>
<li>libudunits2-dev：用于处理单位的库。</li>
<li>libmysqlclient-dev：MySQL交互支持。</li>
<li>libmysqlclient21：为MySQL提供运行时支持。</li>
</ul>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt-get install libcurl4-openssl-dev libxml2-dev libssl-dev \</span><br><span class="line">    libncurses5-dev libbz2-dev libreadline-dev libsqlite3-dev libpng-dev \</span><br><span class="line">    libjpeg-dev libtiff-dev libpango1.0-dev libharfbuzz-dev libfreetype6-dev \</span><br><span class="line">    liblcms2-dev libpangoft2-1.0-0 libudunits2-dev libmysqlclient-dev libmysqlclient21</span><br></pre></td></tr></table></figure>
<blockquote>
<p>有些包名包含了版本号，可能随着时间推移，包名会发生改变，可以通过<code>apt search</code>命令搜索正确的包名</p>
</blockquote>
<blockquote>
<p>如果由于网络原因安装失败，尝试通过<code>Software &amp; Updates</code>修改软件源</p>
<img src="Software&Update.png" style="max-width:50%">
<img src="set_apt_mirror.png" style="max-width:80%">
</blockquote>
<p>由于在Ubuntu上不支持通过二进制包进行安装R包，需要安装以下一些工具</p>
<ul>
<li>build-essential：Ubuntu的基础编译工具集，包含了dpkg-dev、g++、gcc、libc6-dev（或libc-dev）、make</li>
<li>make：用于构建过程</li>
<li>autoconf、automake、libtool：用于生成和维护自动化的Makefile。</li>
<li>texinfo：用于创建和维护Texinfo格式文档。</li>
<li>pkg-config：用于查询库的位置和编译选项。</li>
<li>cmake：编译系统<br />
这些工具可以通过以下命令安装：</li>
</ul>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt-get install make autoconf automake libtool texinfo pkg-config build-essential cmake</span><br></pre></td></tr></table></figure>
<p>安装完成后，为了顺利下载，需要把软件源换为国内的镜像源，输入以下命令写入配置文件，设置<code>hadoop</code>用户的R镜像</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;options(repos=c(USTC=&quot;https://mirrors.ustc.edu.cn/CRAN/&quot;))&#x27;</span> &gt;&gt; ~/.Rprofile</span><br></pre></td></tr></table></figure>
<p>在终端下运行以下命令启动R</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">R</span><br></pre></td></tr></table></figure>
<p>可以执行下面的命令退出R：</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="operator">&gt;</span> q<span class="punctuation">(</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure>
<h2 id="安装r包"><a class="markdownIt-Anchor" href="#安装r包"></a> 安装R包</h2>
<p>启动R进入R命令提示符状态，执行以下命令安装所需要的R软件包</p>
<blockquote>
<p>其中的<code>c()</code>表示一个向量，<code>install.packages()</code>函数会下载向量里的元素对应的软件包，如果下载单个软件包，可以执行<code>install.packages(&quot;package_name&quot;)</code></p>
<p>普通用户下载R包会下载到用户家目录下的R目录内，第一次下载会创建目录<code>$HOME/R/x86_64-pc-linux-gnu-library/4.4</code></p>
<p>dependencies选项让R安装软件包时，把它们所依赖的包也安装上<br />
repos选项如果上面已经配置了，这里可以省略</p>
</blockquote>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="operator">&gt;</span> install.packages<span class="punctuation">(</span><span class="built_in">c</span><span class="punctuation">(</span><span class="string">&#x27;RMySQL&#x27;</span><span class="punctuation">,</span><span class="string">&#x27;devtools&#x27;</span><span class="punctuation">,</span><span class="string">&#x27;ggplot2&#x27;</span><span class="punctuation">)</span><span class="punctuation">,</span>repos <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span>USTC<span class="operator">=</span><span class="string">&quot;https://mirrors.ustc.edu.cn/CRAN/&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">Installing packages into ‘<span class="operator">/</span>usr<span class="operator">/</span>local<span class="operator">/</span>lib<span class="operator">/</span>R<span class="operator">/</span>site<span class="operator">-</span>library’</span><br><span class="line"><span class="punctuation">(</span>as ‘lib’ is unspecified<span class="punctuation">)</span></span><br><span class="line">Warning <span class="keyword">in</span> install.packages<span class="punctuation">(</span><span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;RMySQL&quot;</span><span class="punctuation">,</span> <span class="string">&quot;ggplot2&quot;</span><span class="punctuation">,</span> <span class="string">&quot;devtools&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span> <span class="operator">:</span></span><br><span class="line">  <span class="string">&#x27;lib = &quot;/usr/local/lib/R/site-library&quot;&#x27;</span> is not writable</span><br><span class="line">Would you like to use a personal library instead<span class="operator">?</span> <span class="punctuation">(</span>yes<span class="operator">/</span>No<span class="operator">/</span>cancel<span class="punctuation">)</span> yes</span><br><span class="line">Would you like to create a personal library</span><br><span class="line">‘<span class="operator">/</span>home<span class="operator">/</span>hadoop<span class="operator">/</span>R<span class="operator">/</span>x86_64<span class="operator">-</span>pc<span class="operator">-</span>linux<span class="operator">-</span>gnu<span class="operator">-</span>library<span class="operator">/</span><span class="number">4.4</span>’</span><br><span class="line">to install packages into<span class="operator">?</span> <span class="punctuation">(</span>yes<span class="operator">/</span>No<span class="operator">/</span>cancel<span class="punctuation">)</span> yes</span><br></pre></td></tr></table></figure>
<p>等待编译安装完成</p>
<p>如果安装失败，尝试重新打开终端和R，重新执行安装命令</p>
<blockquote>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">Warning message<span class="operator">:</span></span><br><span class="line">In install.packages<span class="punctuation">(</span><span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;RMySQL&quot;</span><span class="punctuation">,</span> <span class="string">&quot;devtools&quot;</span><span class="punctuation">,</span> <span class="string">&quot;ggplot2&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span> repos <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span>USTC <span class="operator">=</span> <span class="string">&quot;https://mirrors.ustc.edu.cn/CRAN/&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span> <span class="operator">:</span></span><br><span class="line">  installation of package ‘RMySQL’ had non<span class="operator">-</span>zero exit status</span><br></pre></td></tr></table></figure>
<p>如果出现以上错误，多重复尝试几次安装命令，并确保<a href="#RDependencies">上面的依赖</a>安装完全</p>
</blockquote>
<p>最后在R命令提示符下，再执行如下命令安装<code>taiyun/recharts</code></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="operator">&gt;</span> devtools<span class="operator">::</span>install_github<span class="punctuation">(</span><span class="string">&#x27;taiyun/recharts&#x27;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p><a href="https://cran.r-project.org/bin/linux/ubuntu/">Ubuntu Packages For R - Brief Instructions</a> <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
      <categories>
        <category>Big Data</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Big Data</tag>
        <tag>R</tag>
      </tags>
  </entry>
  <entry>
    <title>大数据实验踩坑指南_No.6——实验案例：网站用户行为分析</title>
    <url>/2024/06/16/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AE%9E%E9%AA%8C%E8%B8%A9%E5%9D%91%E6%8C%87%E5%8D%97-No-6%E2%80%94%E2%80%94%E5%AE%9E%E9%AA%8C%E6%A1%88%E4%BE%8B%EF%BC%9A%E7%BD%91%E7%AB%99%E7%94%A8%E6%88%B7%E8%A1%8C%E4%B8%BA%E5%88%86%E6%9E%90/</url>
    <content><![CDATA[<h1 id="大数据实验踩坑指南_no6实验案例网站用户行为分析"><a class="markdownIt-Anchor" href="#大数据实验踩坑指南_no6实验案例网站用户行为分析"></a> 大数据实验踩坑指南_No.6——实验案例：网站用户行为分析</h1>
<h2 id="实验环境搭建"><a class="markdownIt-Anchor" href="#实验环境搭建"></a> 实验环境搭建</h2>
<p>在这个实验中，需要用到下列软件包，以下是我的软件版本，点击即可跳转到官网或国内镜像站的下载链接：</p>
<ul>
<li><a href="https://mirrors.tuna.tsinghua.edu.cn/ubuntu-releases/22.04/ubuntu-22.04.4-desktop-amd64.iso">Linux</a>: Ubuntu 22.04.4 LTS</li>
<li><a href="https://dlcdn.apache.org/hadoop/common/hadoop-3.3.6/hadoop-3.3.6.tar.gz">Hadoop</a>: 3.3.6</li>
<li><a href="https://dlcdn.apache.org/hive/hive-3.1.3/apache-hive-3.1.3-bin.tar.gz">Hive</a>: 3.1.3</li>
<li><a href="https://dlcdn.apache.org/hive/hive-3.1.3/apache-hive-3.1.3-bin.tar.gz">ZooKeeper</a>: 3.9.2</li>
<li><a href="https://cran.r-project.org/index.html">R</a>有两种安装方式，效果是一样的，二选一即可
<ul>
<li><a href="https://cran.r-project.org/bin/linux/ubuntu/">Ubuntu Packages For R - Brief Instructions</a></li>
<li><a href="https://cran.r-project.org/bin/linux/ubuntu/fullREADME.html">Ubuntu Packages For R - Full Instructions</a></li>
</ul>
</li>
<li><a href="https://www.apache.org/dyn/closer.lua/hbase/2.5.8/hbase-2.5.8-hadoop3-bin.tar.gz">HBase</a>: 2.5.8-hadoop3-bin</li>
<li><a href="https://www.jetbrains.com/help/idea/installation-guide.html">JetBrains IntelliJ IDEA</a>
<ul>
<li>使用Linux版本的Standalone installation单独下载IDEA</li>
</ul>
</li>
</ul>
<p>请根据前面的教程安装配置好这些软件</p>
<ul>
<li>
<a href="/2024/06/16/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AE%9E%E9%AA%8C%E8%B8%A9%E5%9D%91%E6%8C%87%E5%8D%97-No-1%E2%80%94%E2%80%94Hadoop%E7%9A%84%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/" title="大数据实验踩坑指南_No.1——Hadoop的安装配置">大数据实验踩坑指南_No.1——Hadoop的安装配置</a>
</li>
<li>
<a href="/2024/06/16/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AE%9E%E9%AA%8C%E8%B8%A9%E5%9D%91%E6%8C%87%E5%8D%97-No-2%E2%80%94%E2%80%94Hive%E7%9A%84%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/" title="大数据实验踩坑指南_No.2——Hive的安装配置">大数据实验踩坑指南_No.2——Hive的安装配置</a>
</li>
<li>
<a href="/2024/06/16/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AE%9E%E9%AA%8C%E8%B8%A9%E5%9D%91%E6%8C%87%E5%8D%97-No-3%E2%80%94%E2%80%94ZooKeeper%E7%9A%84%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/" title="大数据实验踩坑指南_No.3——ZooKeeper的安装配置.md">大数据实验踩坑指南_No.3——ZooKeeper的安装配置.md</a>
</li>
<li>
<a href="/2024/06/16/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AE%9E%E9%AA%8C%E8%B8%A9%E5%9D%91%E6%8C%87%E5%8D%97-No-4%E2%80%94%E2%80%94HBase%E7%9A%84%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/" title="大数据实验踩坑指南_No.4——HBase的安装配置.md">大数据实验踩坑指南_No.4——HBase的安装配置.md</a>
</li>
<li>
<a href="/2024/06/16/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AE%9E%E9%AA%8C%E8%B8%A9%E5%9D%91%E6%8C%87%E5%8D%97-No-5%E2%80%94%E2%80%94R%E8%AF%AD%E8%A8%80%E5%92%8C%E8%BD%AF%E4%BB%B6%E5%8C%85%E7%9A%84%E5%AE%89%E8%A3%85/" title="大数据实验踩坑指南_No.5——R语言和软件包的安装">大数据实验踩坑指南_No.5——R语言和软件包的安装</a>
</li>
</ul>
<p><a href="https://dblab.xmu.edu.cn/blog/4189/">林子雨老师的教程</a></p>
<p>IDE可以自选IntelliJ IDEA<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>或Eclipse<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup></p>
<h2 id="本地数据集上传到数据仓库hive"><a class="markdownIt-Anchor" href="#本地数据集上传到数据仓库hive"></a> 本地数据集上传到数据仓库Hive</h2>
<h3 id="实验数据集的下载"><a class="markdownIt-Anchor" href="#实验数据集的下载"></a> 实验数据集的下载</h3>
<ul>
<li>本案例采用的数据集为<code>user.zip</code>，包含了一个大规模数据集<code>raw_user.csv</code>（包含2000万条记录），和一个小数据集<code>small_user.csv</code>（只包含30万条记录）。小数据集<code>small_user.csv</code>是从大规模数据集<code>raw_user.csv</code>中抽取的一小部分数据。之所以抽取出一少部分记录单独构成一个小数据集，是因为在第一遍跑通整个实验流程时，会遇到各种错误、各种问题，先用小数据集测试，可以大量节约程序运行时间。等到第一次完整实验流程都顺利跑通以后，可以最后用大规模数据集进行最后的测试。</li>
<li>把数据集<code>user.zip</code>文件下载到Linux系统的<code>/home/hadoop/Downloads/</code>目录下面</li>
</ul>
<p>下载案例的数据集<code>user.zip</code>到目录<code>/home/hadoop/Downloads/</code>内（系统语言如果是中文，则是`/home/hadoop/下载）</p>
<p>创建一个存储数据集的目录，将<code>user.zip</code>进行解压缩</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> <span class="built_in">mkdir</span> -p /usr/local/bigdatacase/dataset</span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">chown</span> -R hadoop:hadoop /usr/local/bigdatacase <span class="comment"># 修改bigdatacase目录权限</span></span><br><span class="line">unzip /home/hadoop/Downloads/user.zip -d /usr/local/bigdatacase/dataset <span class="comment"># 解压缩数据文件user.zip</span></span><br><span class="line"><span class="built_in">cd</span> /usr/local/bigdatacase/dataset</span><br></pre></td></tr></table></figure>
<p>现在可以看到<code>dataset</code>目录下有两个文件：<code>raw_user.csv</code>和<code>small_user.csv</code>。执行以下命令查看前5条数据</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">head</span> -5 raw_user.csv</span><br></pre></td></tr></table></figure>
<h3 id="数据集的预处理"><a class="markdownIt-Anchor" href="#数据集的预处理"></a> 数据集的预处理</h3>
<p>删除文件的第一行记录（字段名称）</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sed -i <span class="string">&#x27;1d&#x27;</span> raw_user.csv</span><br><span class="line">sed -i <span class="string">&#x27;1d&#x27;</span> small_user.csv</span><br><span class="line"><span class="built_in">head</span> -5 raw_user.csv</span><br><span class="line"><span class="built_in">head</span> -5 small_user.csv</span><br></pre></td></tr></table></figure>
<p>查看到已经看不到字段名成这一行</p>
<p>对字段进行预处理</p>
<p>下面要建一个脚本文件<code>pre_deal.sh</code>，请把这个脚本文件放在<code>dataset</code>目录下，和数据集<code>raw_user.csv</code>放在同一个目录下：</p>
<figure class="highlight sh"><figcaption><span>/usr/local/bigdatacase/dataset/pre_deal.sh</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#下面设置输入文件，把用户执行pre_deal.sh命令时提供的第一个参数作为输入文件名称</span></span><br><span class="line">infile=<span class="variable">$1</span></span><br><span class="line"><span class="comment">#下面设置输出文件，把用户执行pre_deal.sh命令时提供的第二个参数作为输出文件名称</span></span><br><span class="line">outfile=<span class="variable">$2</span></span><br><span class="line"><span class="comment">#注意，最后的$infile&gt; $outfile必须跟在&#125;’这两个字符的后面</span></span><br><span class="line">awk -F <span class="string">&quot;,&quot;</span> <span class="string">&#x27;BEGIN&#123;</span></span><br><span class="line"><span class="string">srand();</span></span><br><span class="line"><span class="string">        id=0;</span></span><br><span class="line"><span class="string">        Province[0]=&quot;山东&quot;;Province[1]=&quot;山西&quot;;Province[2]=&quot;河南&quot;;Province[3]=&quot;河北&quot;;Province[4]=&quot;陕西&quot;;Province[5]=&quot;内蒙古&quot;;Province[6]=&quot;上海市&quot;;</span></span><br><span class="line"><span class="string">        Province[7]=&quot;北京市&quot;;Province[8]=&quot;重庆市&quot;;Province[9]=&quot;天津市&quot;;Province[10]=&quot;福建&quot;;Province[11]=&quot;广东&quot;;Province[12]=&quot;广西&quot;;Province[13]=&quot;云南&quot;; </span></span><br><span class="line"><span class="string">        Province[14]=&quot;浙江&quot;;Province[15]=&quot;贵州&quot;;Province[16]=&quot;新疆&quot;;Province[17]=&quot;西藏&quot;;Province[18]=&quot;江西&quot;;Province[19]=&quot;湖南&quot;;Province[20]=&quot;湖北&quot;;</span></span><br><span class="line"><span class="string">        Province[21]=&quot;黑龙江&quot;;Province[22]=&quot;吉林&quot;;Province[23]=&quot;辽宁&quot;; Province[24]=&quot;江苏&quot;;Province[25]=&quot;甘肃&quot;;Province[26]=&quot;青海&quot;;Province[27]=&quot;四川&quot;;</span></span><br><span class="line"><span class="string">        Province[28]=&quot;安徽&quot;; Province[29]=&quot;宁夏&quot;;Province[30]=&quot;海南&quot;;Province[31]=&quot;香港&quot;;Province[32]=&quot;澳门&quot;;Province[33]=&quot;台湾&quot;;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    &#123;</span></span><br><span class="line"><span class="string">        id=id+1;</span></span><br><span class="line"><span class="string">        value=int(rand()*34);       </span></span><br><span class="line"><span class="string">        print id&quot;\t&quot;$1&quot;\t&quot;$2&quot;\t&quot;$3&quot;\t&quot;$5&quot;\t&quot;substr($6,1,10)&quot;\t&quot;Province[value]</span></span><br><span class="line"><span class="string">    &#125;&#x27;</span> <span class="variable">$infile</span>&gt; <span class="variable">$outfile</span></span><br></pre></td></tr></table></figure>
<p>下面就可以执行pre_deal.sh脚本文件，来对raw_user.csv进行数据预处理，命令如下：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/local/bigdatacase/dataset</span><br><span class="line">bash ./pre_deal.sh raw_user.csv user_table.txt</span><br></pre></td></tr></table></figure>
<p>可以使用head命令查看前10行数据</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">head</span> -10 user_table.txt</span><br></pre></td></tr></table></figure>
<h3 id="导入数据库"><a class="markdownIt-Anchor" href="#导入数据库"></a> 导入数据库</h3>
<p><strong>启动HDFS</strong></p>
<p>执行下面的命令启动Hadoop：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">start-dfs.sh</span><br></pre></td></tr></table></figure>
<p>然后输入jps命令查看当前的进程：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">43529 NameNode</span><br><span class="line">43692 DataNode</span><br><span class="line">63644 Jps</span><br><span class="line">43901 SecondaryNameNode</span><br></pre></td></tr></table></figure>
<p><strong>把user_table.txt上传到HDFS中</strong></p>
<p>在HDFS的根目录下创建一个新的目录bigdatacase并在这个目录下创建一个子目录<code>dataset</code></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">hdfs dfs -<span class="built_in">mkdir</span> -p /bigdatacase/dataset</span><br></pre></td></tr></table></figure>
<p>然后把本地的user_table.txt上传到分布式文件系统HDFS的<code>/bigdatacase/dataset</code>目录下</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">hdfs dfs -put /usr/local/bigdatacase/dataset/user_table.txt /bigdatacase/dataset</span><br></pre></td></tr></table></figure>
<p>可以查看以下HDFS中<code>user_table.txt</code>的前10条记录</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">hdfs dfs -<span class="built_in">cat</span> /bigdatacase/dataset/user_table.txt | <span class="built_in">head</span> -10</span><br></pre></td></tr></table></figure>
<p><strong>在Hive上创建数据库</strong></p>
<p>首先启动MySQL数据库</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">service mysql start</span><br></pre></td></tr></table></figure>
<p>启动hive的元数据</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">hive --service metastore</span><br></pre></td></tr></table></figure>
<p>在新的终端下进入Hive</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">hive</span><br></pre></td></tr></table></figure>
<p>在Hive中创建一个数据库dblab</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hive&gt; create database dblab;</span><br><span class="line">hive&gt; use dblab;</span><br></pre></td></tr></table></figure>
<p><strong>创建外部表</strong></p>
<p>在hive命令提示符下输入</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hive&gt; CREATE EXTERNAL TABLE dblab.bigdata_user(id INT,uid STRING,item_id STRING,behavior_type INT,item_category STRING,visit_date DATE,province STRING) COMMENT &#x27;Welcome to xmudblab!&#x27; ROW FORMAT DELIMITED FIELDS TERMINATED BY &#x27;\t&#x27; STORED AS TEXTFILE LOCATION &#x27;/bigdatacase/dataset&#x27;;</span><br></pre></td></tr></table></figure>
<p><strong>查询数据</strong></p>
<p>在“hive&gt;”命令提示符状态下执行下面命令查看表的信息：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hive&gt; use dblab;//使用dblab数据库</span><br><span class="line">OK</span><br><span class="line">Time taken: 0.613 seconds</span><br><span class="line">hive&gt; show tables;//显示数据库中所有表</span><br><span class="line">OK</span><br><span class="line">bigdata_user</span><br><span class="line">Time taken: 0.161 seconds, Fetched: 1 row(s)</span><br><span class="line">hive&gt; show create table bigdata_user;//查看bigdata_user表的各种属性；</span><br><span class="line">OK</span><br><span class="line">CREATE EXTERNAL TABLE `bigdata_user`(</span><br><span class="line">  `id` int, </span><br><span class="line">  `uid` string, </span><br><span class="line">  `item_id` string, </span><br><span class="line">  `behavior_type` int, </span><br><span class="line">  `item_category` string, </span><br><span class="line">  `visit_date` date, </span><br><span class="line">  `province` string)</span><br><span class="line">COMMENT &#x27;Welcome to xmudblab!&#x27;</span><br><span class="line">ROW FORMAT SERDE </span><br><span class="line">  &#x27;org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe&#x27; </span><br><span class="line">WITH SERDEPROPERTIES ( </span><br><span class="line">  &#x27;field.delim&#x27;=&#x27;\t&#x27;, </span><br><span class="line">  &#x27;serialization.format&#x27;=&#x27;\t&#x27;) </span><br><span class="line">STORED AS INPUTFORMAT </span><br><span class="line">  &#x27;org.apache.hadoop.mapred.TextInputFormat&#x27; </span><br><span class="line">OUTPUTFORMAT </span><br><span class="line">  &#x27;org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat&#x27;</span><br><span class="line">LOCATION</span><br><span class="line">  &#x27;hdfs://localhost:9000/bigdatacase/dataset&#x27;</span><br><span class="line">TBLPROPERTIES (</span><br><span class="line">  &#x27;bucketing_version&#x27;=&#x27;2&#x27;, </span><br><span class="line">  &#x27;transient_lastDdlTime&#x27;=&#x27;1718472356&#x27;)</span><br><span class="line">Time taken: 0.198 seconds, Fetched: 23 row(s)</span><br></pre></td></tr></table></figure>
<p>还可以执行下面命令查看表的简单结构：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hive&gt; desc bigdata_user;</span><br><span class="line">OK</span><br><span class="line">id                      int                                         </span><br><span class="line">uid                     string                                      </span><br><span class="line">item_id                 string                                      </span><br><span class="line">behavior_type           int                                         </span><br><span class="line">item_category           string                                      </span><br><span class="line">visit_date              date                                        </span><br><span class="line">province                string                                      </span><br><span class="line">Time taken: 0.055 seconds, Fetched: 7 row(s)</span><br></pre></td></tr></table></figure>
<p>现在可以使用下面命令查询相关数据：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hive&gt; select * from bigdata_user limit 10;</span><br><span class="line">OK</span><br><span class="line">1       10001082        285259775       1       4076    2014-12-08      湖南</span><br><span class="line">2       10001082        4368907 1       5503    2014-12-12      安徽</span><br><span class="line">3       10001082        4368907 1       5503    2014-12-12      新疆</span><br><span class="line">4       10001082        53616768        1       9762    2014-12-02      上海市</span><br><span class="line">5       10001082        151466952       1       5232    2014-12-12      黑龙江</span><br><span class="line">6       10001082        53616768        4       9762    2014-12-02      广东</span><br><span class="line">7       10001082        290088061       1       5503    2014-12-12      青海</span><br><span class="line">8       10001082        298397524       1       10894   2014-12-12      香港</span><br><span class="line">9       10001082        32104252        1       6513    2014-12-12      山西</span><br><span class="line">10      10001082        323339743       1       10894   2014-12-12      宁夏</span><br><span class="line">Time taken: 1.483 seconds, Fetched: 10 row(s)</span><br><span class="line">hive&gt; select behavior_type from bigdata_user limit 10;</span><br><span class="line">OK</span><br><span class="line">1</span><br><span class="line">1</span><br><span class="line">1</span><br><span class="line">1</span><br><span class="line">1</span><br><span class="line">4</span><br><span class="line">1</span><br><span class="line">1</span><br><span class="line">1</span><br><span class="line">1</span><br><span class="line">Time taken: 0.106 seconds, Fetched: 10 row(s)</span><br><span class="line">hive&gt; </span><br></pre></td></tr></table></figure>
<h2 id="hive数据分析"><a class="markdownIt-Anchor" href="#hive数据分析"></a> Hive数据分析</h2>
<h3 id="简单查询分析"><a class="markdownIt-Anchor" href="#简单查询分析"></a> 简单查询分析</h3>
<p>首先执行一条简单的指令：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hive&gt; select behavior_type from bigdata_user limit 10;#查看前10位用户对商品的行为</span><br><span class="line">OK</span><br><span class="line">1</span><br><span class="line">1</span><br><span class="line">1</span><br><span class="line">1</span><br><span class="line">1</span><br><span class="line">4</span><br><span class="line">1</span><br><span class="line">1</span><br><span class="line">1</span><br><span class="line">1</span><br><span class="line">Time taken: 0.116 seconds, Fetched: 10 row(s)</span><br></pre></td></tr></table></figure>
<p>如果要查出每位用户购买商品时的多种信息，输出语句格式如下：<br />
select 列1，列2，….，列n from 表名；<br />
比如查询前20位用户购买商品时的时间和商品的种类，语句如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hive&gt; select visit_date, item_category from bigdata_user limit 20;</span><br><span class="line">OK</span><br><span class="line">2014-12-08      4076</span><br><span class="line">2014-12-12      5503</span><br><span class="line">2014-12-12      5503</span><br><span class="line">2014-12-02      9762</span><br><span class="line">2014-12-12      5232</span><br><span class="line">2014-12-02      9762</span><br><span class="line">2014-12-12      5503</span><br><span class="line">2014-12-12      10894</span><br><span class="line">2014-12-12      6513</span><br><span class="line">2014-12-12      10894</span><br><span class="line">2014-12-12      2825</span><br><span class="line">2014-11-28      2825</span><br><span class="line">2014-12-15      3200</span><br><span class="line">2014-12-03      10576</span><br><span class="line">2014-11-20      10576</span><br><span class="line">2014-12-13      10576</span><br><span class="line">2014-12-08      10576</span><br><span class="line">2014-12-14      7079</span><br><span class="line">2014-12-02      6669</span><br><span class="line">2014-12-12      5232</span><br><span class="line">Time taken: 0.089 seconds, Fetched: 20 row(s)</span><br></pre></td></tr></table></figure>
<p>有时在表中查询可以利用嵌套语句，如果列名太复杂可以设置该列的别名，以简化操作的难度，举例如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hive&gt; select e.bh, e.it from (select behavior_type as bh, item_category as it from bigdata_user) as e  limit 20;</span><br><span class="line">OK</span><br><span class="line">1       4076</span><br><span class="line">1       5503</span><br><span class="line">1       5503</span><br><span class="line">1       9762</span><br><span class="line">1       5232</span><br><span class="line">4       9762</span><br><span class="line">1       5503</span><br><span class="line">1       10894</span><br><span class="line">1       6513</span><br><span class="line">1       10894</span><br><span class="line">1       2825</span><br><span class="line">1       2825</span><br><span class="line">1       3200</span><br><span class="line">1       10576</span><br><span class="line">1       10576</span><br><span class="line">1       10576</span><br><span class="line">1       10576</span><br><span class="line">1       7079</span><br><span class="line">1       6669</span><br><span class="line">1       5232</span><br><span class="line">Time taken: 0.102 seconds, Fetched: 20 row(s)</span><br></pre></td></tr></table></figure>
<h3 id="查询条数统计"><a class="markdownIt-Anchor" href="#查询条数统计"></a> 查询条数统计</h3>
<p>用聚合函数count()计算出表内有多少行数据</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hive&gt; select count(*) from bigdata_user;</span><br><span class="line">Query ID = hadoop_20240616014249_4ec3aa87-0a06-409c-9c43-40b0dd14ced7</span><br><span class="line">Total jobs = 1</span><br><span class="line">Launching Job 1 out of 1</span><br><span class="line">Number of reduce tasks determined at compile time: 1</span><br><span class="line">In order to change the average load for a reducer (in bytes):</span><br><span class="line">  set hive.exec.reducers.bytes.per.reducer=&lt;number&gt;</span><br><span class="line">In order to limit the maximum number of reducers:</span><br><span class="line">  set hive.exec.reducers.max=&lt;number&gt;</span><br><span class="line">In order to set a constant number of reducers:</span><br><span class="line">  set mapreduce.job.reduces=&lt;number&gt;</span><br><span class="line">Job running in-process (local Hadoop)</span><br><span class="line">2024-06-16 01:42:51,137 Stage-1 map = 0%,  reduce = 0%</span><br><span class="line">2024-06-16 01:42:52,142 Stage-1 map = 100%,  reduce = 0%</span><br><span class="line">2024-06-16 01:42:57,166 Stage-1 map = 100%,  reduce = 100%</span><br><span class="line">Ended Job = job_local460403743_0001</span><br><span class="line">MapReduce Jobs Launched: </span><br><span class="line">Stage-Stage-1:  HDFS Read: 5169193912 HDFS Write: 0 SUCCESS</span><br><span class="line">Total MapReduce CPU Time Spent: 0 msec</span><br><span class="line">OK</span><br><span class="line">23291027</span><br><span class="line">Time taken: 8.173 seconds, Fetched: 1 row(s)</span><br></pre></td></tr></table></figure>
<p>在函数内部加上distinct，查出uid不重复的数据有多少条</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hive&gt; select count(distinct uid) from bigdata_user;</span><br><span class="line">Query ID = hadoop_20240616014323_2c95c94e-e87b-4d88-9ae6-8a9ca4e8fc61</span><br><span class="line">Total jobs = 1</span><br><span class="line">Launching Job 1 out of 1</span><br><span class="line">Number of reduce tasks determined at compile time: 1</span><br><span class="line">In order to change the average load for a reducer (in bytes):</span><br><span class="line">  set hive.exec.reducers.bytes.per.reducer=&lt;number&gt;</span><br><span class="line">In order to limit the maximum number of reducers:</span><br><span class="line">  set hive.exec.reducers.max=&lt;number&gt;</span><br><span class="line">In order to set a constant number of reducers:</span><br><span class="line">  set mapreduce.job.reduces=&lt;number&gt;</span><br><span class="line">Job running in-process (local Hadoop)</span><br><span class="line">2024-06-16 01:43:24,499 Stage-1 map = 0%,  reduce = 0%</span><br><span class="line">2024-06-16 01:43:27,501 Stage-1 map = 100%,  reduce = 0%</span><br><span class="line">2024-06-16 01:43:40,630 Stage-1 map = 100%,  reduce = 100%</span><br><span class="line">Ended Job = job_local544803189_0002</span><br><span class="line">MapReduce Jobs Launched: </span><br><span class="line">Stage-Stage-1:  HDFS Read: 12623097568 HDFS Write: 0 SUCCESS</span><br><span class="line">Total MapReduce CPU Time Spent: 0 msec</span><br><span class="line">OK</span><br><span class="line">20000</span><br><span class="line">Time taken: 17.605 seconds, Fetched: 1 row(s)</span><br></pre></td></tr></table></figure>
<p>查询不重复的数据有多少条(为了排除客户刷单情况)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hive&gt; select count(*) from (select uid,item_id,behavior_type,item_category,visit_date,province from bigdata_user group by uid,item_id,behavior_type,item_category,visit_date,province       having count(*)=1) a;</span><br><span class="line">Query ID = hadoop_20240616014446_fc30d1c3-d4c1-486e-85ce-0a79b93223f2</span><br><span class="line">Total jobs = 2</span><br><span class="line">Launching Job 1 out of 2</span><br><span class="line">Number of reduce tasks not specified. Estimated from input data size: 5</span><br><span class="line">In order to change the average load for a reducer (in bytes):</span><br><span class="line">  set hive.exec.reducers.bytes.per.reducer=&lt;number&gt;</span><br><span class="line">In order to limit the maximum number of reducers:</span><br><span class="line">  set hive.exec.reducers.max=&lt;number&gt;</span><br><span class="line">In order to set a constant number of reducers:</span><br><span class="line">  set mapreduce.job.reduces=&lt;number&gt;</span><br><span class="line">Job running in-process (local Hadoop)</span><br><span class="line">2024-06-16 01:44:48,421 Stage-1 map = 0%,  reduce = 0%</span><br><span class="line">2024-06-16 01:45:05,693 Stage-1 map = 7%,  reduce = 0%</span><br><span class="line">2024-06-16 01:45:30,144 Stage-1 map = 18%,  reduce = 0%</span><br><span class="line">2024-06-16 01:45:32,205 Stage-1 map = 100%,  reduce = 0%</span><br><span class="line">2024-06-16 01:45:44,425 Stage-1 map = 20%,  reduce = 0%</span><br><span class="line">2024-06-16 01:45:50,471 Stage-1 map = 27%,  reduce = 0%</span><br><span class="line">2024-06-16 01:46:08,032 Stage-1 map = 33%,  reduce = 0%</span><br><span class="line">2024-06-16 01:46:13,059 Stage-1 map = 100%,  reduce = 0%</span><br><span class="line">2024-06-16 01:46:24,425 Stage-1 map = 40%,  reduce = 0%</span><br><span class="line">2024-06-16 01:46:30,623 Stage-1 map = 47%,  reduce = 0%</span><br><span class="line">2024-06-16 01:46:48,985 Stage-1 map = 54%,  reduce = 0%</span><br><span class="line">2024-06-16 01:46:54,057 Stage-1 map = 100%,  reduce = 0%</span><br><span class="line">2024-06-16 01:47:06,424 Stage-1 map = 60%,  reduce = 0%</span><br><span class="line">2024-06-16 01:47:12,464 Stage-1 map = 67%,  reduce = 0%</span><br><span class="line">2024-06-16 01:47:30,843 Stage-1 map = 74%,  reduce = 0%</span><br><span class="line">2024-06-16 01:47:33,963 Stage-1 map = 100%,  reduce = 0%</span><br><span class="line">2024-06-16 01:47:46,284 Stage-1 map = 80%,  reduce = 0%</span><br><span class="line">2024-06-16 01:47:51,291 Stage-1 map = 91%,  reduce = 0%</span><br><span class="line">2024-06-16 01:47:57,476 Stage-1 map = 95%,  reduce = 0%</span><br><span class="line">2024-06-16 01:47:59,479 Stage-1 map = 100%,  reduce = 0%</span><br><span class="line">2024-06-16 01:48:11,495 Stage-1 map = 100%,  reduce = 20%</span><br><span class="line">2024-06-16 01:48:24,516 Stage-1 map = 100%,  reduce = 40%</span><br><span class="line">2024-06-16 01:48:36,535 Stage-1 map = 100%,  reduce = 60%</span><br><span class="line">2024-06-16 01:48:48,554 Stage-1 map = 100%,  reduce = 100%</span><br><span class="line">2024-06-16 01:48:49,556 Stage-1 map = 100%,  reduce = 80%</span><br><span class="line">2024-06-16 01:49:00,573 Stage-1 map = 100%,  reduce = 99%</span><br><span class="line">2024-06-16 01:49:01,578 Stage-1 map = 100%,  reduce = 100%</span><br><span class="line">Ended Job = job_local924134795_0003</span><br><span class="line">Launching Job 2 out of 2</span><br><span class="line">Number of reduce tasks determined at compile time: 1</span><br><span class="line">In order to change the average load for a reducer (in bytes):</span><br><span class="line">  set hive.exec.reducers.bytes.per.reducer=&lt;number&gt;</span><br><span class="line">In order to limit the maximum number of reducers:</span><br><span class="line">  set hive.exec.reducers.max=&lt;number&gt;</span><br><span class="line">In order to set a constant number of reducers:</span><br><span class="line">  set mapreduce.job.reduces=&lt;number&gt;</span><br><span class="line">Job running in-process (local Hadoop)</span><br><span class="line">2024-06-16 01:49:02,850 Stage-2 map = 100%,  reduce = 100%</span><br><span class="line">Ended Job = job_local1145871970_0004</span><br><span class="line">MapReduce Jobs Launched: </span><br><span class="line">Stage-Stage-1:  HDFS Read: 34984890456 HDFS Write: 0 SUCCESS</span><br><span class="line">Stage-Stage-2:  HDFS Read: 7453944616 HDFS Write: 0 SUCCESS</span><br><span class="line">Total MapReduce CPU Time Spent: 0 msec</span><br><span class="line">OK</span><br><span class="line">22080451</span><br><span class="line">Time taken: 255.925 seconds, Fetched: 1 row(s)</span><br></pre></td></tr></table></figure>
<h3 id="关键字条件查询分析"><a class="markdownIt-Anchor" href="#关键字条件查询分析"></a> 关键字条件查询分析</h3>
<p><strong>以关键字的存在区间为条件的查询</strong></p>
<p>查询2014年12月10日到2014年12月13日有多少人浏览了商品。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hive&gt; select count(*) from bigdata_user where behavior_type=&#x27;1&#x27; and visit_date&lt;&#x27;2014-12-13&#x27; and visit_date&gt;&#x27;2014-12-10&#x27;;</span><br><span class="line">Query ID = hadoop_20240616015218_900aa649-9b2c-4a24-8ebf-6b6a50cb5a06</span><br><span class="line">Total jobs = 1</span><br><span class="line">Launching Job 1 out of 1</span><br><span class="line">Number of reduce tasks determined at compile time: 1</span><br><span class="line">In order to change the average load for a reducer (in bytes):</span><br><span class="line">  set hive.exec.reducers.bytes.per.reducer=&lt;number&gt;</span><br><span class="line">In order to limit the maximum number of reducers:</span><br><span class="line">  set hive.exec.reducers.max=&lt;number&gt;</span><br><span class="line">In order to set a constant number of reducers:</span><br><span class="line">  set mapreduce.job.reduces=&lt;number&gt;</span><br><span class="line">Job running in-process (local Hadoop)</span><br><span class="line">2024-06-16 01:52:19,677 Stage-1 map = 0%,  reduce = 0%</span><br><span class="line">2024-06-16 01:52:27,914 Stage-1 map = 100%,  reduce = 0%</span><br><span class="line">2024-06-16 01:52:59,420 Stage-1 map = 100%,  reduce = 100%</span><br><span class="line">Ended Job = job_local2129098898_0005</span><br><span class="line">MapReduce Jobs Launched: </span><br><span class="line">Stage-Stage-1:  HDFS Read: 27530904880 HDFS Write: 0 SUCCESS</span><br><span class="line">Total MapReduce CPU Time Spent: 0 msec</span><br><span class="line">OK</span><br><span class="line">2137738</span><br><span class="line">Time taken: 41.237 seconds, Fetched: 1 row(s)</span><br></pre></td></tr></table></figure>
<p>以月的第n天为统计单位，依次显示第n天网站卖出去的商品的个数</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hive&gt; select count(distinct uid), day(visit_date) from bigdata_user where behavior_type=&#x27;4&#x27; group by day(visit_date);</span><br><span class="line">Query ID = hadoop_20240616015346_c33511b1-be1b-4631-9e87-74152ae033e7</span><br><span class="line">Total jobs = 1</span><br><span class="line">Launching Job 1 out of 1</span><br><span class="line">Number of reduce tasks not specified. Estimated from input data size: 5</span><br><span class="line">In order to change the average load for a reducer (in bytes):</span><br><span class="line">  set hive.exec.reducers.bytes.per.reducer=&lt;number&gt;</span><br><span class="line">In order to limit the maximum number of reducers:</span><br><span class="line">  set hive.exec.reducers.max=&lt;number&gt;</span><br><span class="line">In order to set a constant number of reducers:</span><br><span class="line">  set mapreduce.job.reduces=&lt;number&gt;</span><br><span class="line">Job running in-process (local Hadoop)</span><br><span class="line">2024-06-16 01:53:48,126 Stage-1 map = 0%,  reduce = 0%</span><br><span class="line">2024-06-16 01:53:51,128 Stage-1 map = 100%,  reduce = 0%</span><br><span class="line">2024-06-16 01:54:04,164 Stage-1 map = 100%,  reduce = 60%</span><br><span class="line">2024-06-16 01:54:05,167 Stage-1 map = 100%,  reduce = 100%</span><br><span class="line">Ended Job = job_local1718417321_0006</span><br><span class="line">MapReduce Jobs Launched: </span><br><span class="line">Stage-Stage-1:  HDFS Read: 59831235976 HDFS Write: 0 SUCCESS</span><br><span class="line">Total MapReduce CPU Time Spent: 0 msec</span><br><span class="line">OK</span><br><span class="line">3098    1</span><br><span class="line">2969    8</span><br><span class="line">3110    13</span><br><span class="line">3225    16</span><br><span class="line">5267    18</span><br><span class="line">2780    21</span><br><span class="line">3104    24</span><br><span class="line">3121    4</span><br><span class="line">2804    5</span><br><span class="line">2910    11</span><br><span class="line">2922    19</span><br><span class="line">2763    22</span><br><span class="line">2990    25</span><br><span class="line">2825    26</span><br><span class="line">2828    28</span><br><span class="line">3137    3</span><br><span class="line">2957    14</span><br><span class="line">3284    15</span><br><span class="line">3049    17</span><br><span class="line">2893    23</span><br><span class="line">2867    7</span><br><span class="line">2794    9</span><br><span class="line">7604    12</span><br><span class="line">2862    20</span><br><span class="line">2913    27</span><br><span class="line">3161    2</span><br><span class="line">2850    6</span><br><span class="line">2869    10</span><br><span class="line">2710    29</span><br><span class="line">3018    30</span><br><span class="line">Time taken: 18.451 seconds, Fetched: 30 row(s)</span><br></pre></td></tr></table></figure>
<p><strong>关键字赋予给定值为条件，对其他数据进行分析</strong></p>
<p>取给定时间和给定地点，求当天发出到该地点的货物的数量。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hive&gt; select count(*) from bigdata_user where province=&#x27;江西&#x27; and visit_date=&#x27;2014-12-12&#x27; and behavior_type=&#x27;4&#x27;;</span><br><span class="line">Query ID = hadoop_20240616015514_7f149dba-f8a0-4191-a9d9-399ca649580b</span><br><span class="line">Total jobs = 1</span><br><span class="line">Launching Job 1 out of 1</span><br><span class="line">Number of reduce tasks determined at compile time: 1</span><br><span class="line">In order to change the average load for a reducer (in bytes):</span><br><span class="line">  set hive.exec.reducers.bytes.per.reducer=&lt;number&gt;</span><br><span class="line">In order to limit the maximum number of reducers:</span><br><span class="line">  set hive.exec.reducers.max=&lt;number&gt;</span><br><span class="line">In order to set a constant number of reducers:</span><br><span class="line">  set mapreduce.job.reduces=&lt;number&gt;</span><br><span class="line">Job running in-process (local Hadoop)</span><br><span class="line">2024-06-16 01:55:15,459 Stage-1 map = 0%,  reduce = 0%</span><br><span class="line">2024-06-16 01:55:24,635 Stage-1 map = 100%,  reduce = 0%</span><br><span class="line">2024-06-16 01:55:58,440 Stage-1 map = 100%,  reduce = 100%</span><br><span class="line">Ended Job = job_local2110211223_0007</span><br><span class="line">MapReduce Jobs Launched: </span><br><span class="line">Stage-Stage-1:  HDFS Read: 42438712192 HDFS Write: 0 SUCCESS</span><br><span class="line">Total MapReduce CPU Time Spent: 0 msec</span><br><span class="line">OK</span><br><span class="line">885</span><br><span class="line">Time taken: 44.359 seconds, Fetched: 1 row(s)</span><br></pre></td></tr></table></figure>
<h3 id="根据用户行为分析"><a class="markdownIt-Anchor" href="#根据用户行为分析"></a> 根据用户行为分析</h3>
<p><strong>查询一件商品在某天的购买比例或浏览比例</strong></p>
<p>查询有多少用户在2014-12-11购买了商品</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hive&gt; select count(*) from bigdata_user where visit_date=&#x27;2014-12-11&#x27;and behavior_type=&#x27;4&#x27;;</span><br><span class="line">Query ID = hadoop_20240616015657_97eeb057-f1c4-4615-8b9c-b52eecb32691</span><br><span class="line">Total jobs = 1</span><br><span class="line">Launching Job 1 out of 1</span><br><span class="line">Number of reduce tasks determined at compile time: 1</span><br><span class="line">In order to change the average load for a reducer (in bytes):</span><br><span class="line">  set hive.exec.reducers.bytes.per.reducer=&lt;number&gt;</span><br><span class="line">In order to limit the maximum number of reducers:</span><br><span class="line">  set hive.exec.reducers.max=&lt;number&gt;</span><br><span class="line">In order to set a constant number of reducers:</span><br><span class="line">  set mapreduce.job.reduces=&lt;number&gt;</span><br><span class="line">Job running in-process (local Hadoop)</span><br><span class="line">2024-06-16 01:56:58,654 Stage-1 map = 0%,  reduce = 0%</span><br><span class="line">2024-06-16 01:57:07,712 Stage-1 map = 100%,  reduce = 0%</span><br><span class="line">2024-06-16 01:57:39,940 Stage-1 map = 100%,  reduce = 100%</span><br><span class="line">Ended Job = job_local208501678_0008</span><br><span class="line">MapReduce Jobs Launched: </span><br><span class="line">Stage-Stage-1:  HDFS Read: 49892615848 HDFS Write: 0 SUCCESS</span><br><span class="line">Total MapReduce CPU Time Spent: 0 msec</span><br><span class="line">OK</span><br><span class="line">6771</span><br><span class="line">Time taken: 42.782 seconds, Fetched: 1 row(s)</span><br></pre></td></tr></table></figure>
<p>查询有多少用户在2014-12-11点击了该店</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hive&gt; select count(*) from bigdata_user where visit_date =&#x27;2014-12-11&#x27;;</span><br><span class="line">Query ID = hadoop_20240616015820_54043f5d-8fb0-4dd9-97c8-8f2f29d8cc1f</span><br><span class="line">Total jobs = 1</span><br><span class="line">Launching Job 1 out of 1</span><br><span class="line">Number of reduce tasks determined at compile time: 1</span><br><span class="line">In order to change the average load for a reducer (in bytes):</span><br><span class="line">  set hive.exec.reducers.bytes.per.reducer=&lt;number&gt;</span><br><span class="line">In order to limit the maximum number of reducers:</span><br><span class="line">  set hive.exec.reducers.max=&lt;number&gt;</span><br><span class="line">In order to set a constant number of reducers:</span><br><span class="line">  set mapreduce.job.reduces=&lt;number&gt;</span><br><span class="line">Job running in-process (local Hadoop)</span><br><span class="line">2024-06-16 01:58:22,332 Stage-1 map = 0%,  reduce = 0%</span><br><span class="line">2024-06-16 01:58:30,479 Stage-1 map = 100%,  reduce = 0%</span><br><span class="line">2024-06-16 01:59:01,726 Stage-1 map = 100%,  reduce = 100%</span><br><span class="line">Ended Job = job_local981603111_0009</span><br><span class="line">MapReduce Jobs Launched: </span><br><span class="line">Stage-Stage-1:  HDFS Read: 57346519504 HDFS Write: 0 SUCCESS</span><br><span class="line">Total MapReduce CPU Time Spent: 0 msec</span><br><span class="line">OK</span><br><span class="line">944979</span><br><span class="line">Time taken: 40.809 seconds, Fetched: 1 row(s)</span><br></pre></td></tr></table></figure>
<p><strong>查询某个用户在某一天点击网站占该天所有点击行为的比例（点击行为包括浏览、加入购物车、收藏、购买）</strong></p>
<p>查询用户10001082在2014-12-12点击网站的次数</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hive&gt; select count(*) from bigdata_user where uid=10001082 and visit_date=&#x27;2014-12-12&#x27;;</span><br><span class="line">Query ID = hadoop_20240616020035_9ad77af3-2cba-4456-924d-9646ed7be7d0</span><br><span class="line">Total jobs = 1</span><br><span class="line">Launching Job 1 out of 1</span><br><span class="line">Number of reduce tasks determined at compile time: 1</span><br><span class="line">In order to change the average load for a reducer (in bytes):</span><br><span class="line">  set hive.exec.reducers.bytes.per.reducer=&lt;number&gt;</span><br><span class="line">In order to limit the maximum number of reducers:</span><br><span class="line">  set hive.exec.reducers.max=&lt;number&gt;</span><br><span class="line">In order to set a constant number of reducers:</span><br><span class="line">  set mapreduce.job.reduces=&lt;number&gt;</span><br><span class="line">Job running in-process (local Hadoop)</span><br><span class="line">2024-06-16 02:00:36,927 Stage-1 map = 0%,  reduce = 0%</span><br><span class="line">2024-06-16 02:00:46,135 Stage-1 map = 100%,  reduce = 0%</span><br><span class="line">2024-06-16 02:01:20,744 Stage-1 map = 100%,  reduce = 100%</span><br><span class="line">Ended Job = job_local219554971_0010</span><br><span class="line">MapReduce Jobs Launched: </span><br><span class="line">Stage-Stage-1:  HDFS Read: 64800423160 HDFS Write: 0 SUCCESS</span><br><span class="line">Total MapReduce CPU Time Spent: 0 msec</span><br><span class="line">OK</span><br><span class="line">69</span><br><span class="line">Time taken: 45.22 seconds, Fetched: 1 row(s)</span><br></pre></td></tr></table></figure>
<p>查询所有用户在这一天点击该网站的次数</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hive&gt; select count(*) from bigdata_user where visit_date=&#x27;2014-12-12&#x27;;</span><br><span class="line">Query ID = hadoop_20240616020246_fcb99cc6-d131-4e1c-9cc0-ce38b7de499d</span><br><span class="line">Total jobs = 1</span><br><span class="line">Launching Job 1 out of 1</span><br><span class="line">Number of reduce tasks determined at compile time: 1</span><br><span class="line">In order to change the average load for a reducer (in bytes):</span><br><span class="line">  set hive.exec.reducers.bytes.per.reducer=&lt;number&gt;</span><br><span class="line">In order to limit the maximum number of reducers:</span><br><span class="line">  set hive.exec.reducers.max=&lt;number&gt;</span><br><span class="line">In order to set a constant number of reducers:</span><br><span class="line">  set mapreduce.job.reduces=&lt;number&gt;</span><br><span class="line">Job running in-process (local Hadoop)</span><br><span class="line">2024-06-16 02:02:48,411 Stage-1 map = 0%,  reduce = 0%</span><br><span class="line">2024-06-16 02:02:56,581 Stage-1 map = 100%,  reduce = 0%</span><br><span class="line">2024-06-16 02:03:28,882 Stage-1 map = 100%,  reduce = 100%</span><br><span class="line">Ended Job = job_local1580275434_0011</span><br><span class="line">MapReduce Jobs Launched: </span><br><span class="line">Stage-Stage-1:  HDFS Read: 72254326816 HDFS Write: 0 SUCCESS</span><br><span class="line">Total MapReduce CPU Time Spent: 0 msec</span><br><span class="line">OK</span><br><span class="line">1344980</span><br><span class="line">Time taken: 41.911 seconds, Fetched: 1 row(s)</span><br></pre></td></tr></table></figure>
<p><strong>给定购买商品的数量范围，查询某一天在该网站的购买该数量商品的用户id</strong></p>
<p>查询某一天在该网站购买商品超过5次的用户id</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hive&gt; select uid from bigdata_user where behavior_type=&#x27;4&#x27; and visit_date=&#x27;2014-12-12&#x27; group by uid having count(behavior_type=&#x27;4&#x27;)&gt;5;</span><br><span class="line">Query ID = hadoop_20240616020903_0ad7cef8-7e49-4107-8683-fd98599a18e1</span><br><span class="line">Total jobs = 1</span><br><span class="line">Launching Job 1 out of 1</span><br><span class="line">Number of reduce tasks not specified. Estimated from input data size: 5</span><br><span class="line">In order to change the average load for a reducer (in bytes):</span><br><span class="line">  set hive.exec.reducers.bytes.per.reducer=&lt;number&gt;</span><br><span class="line">In order to limit the maximum number of reducers:</span><br><span class="line">  set hive.exec.reducers.max=&lt;number&gt;</span><br><span class="line">In order to set a constant number of reducers:</span><br><span class="line">  set mapreduce.job.reduces=&lt;number&gt;</span><br><span class="line">Job running in-process (local Hadoop)</span><br><span class="line">2024-06-16 02:09:07,206 Stage-1 map = 0%,  reduce = 0%</span><br><span class="line">2024-06-16 02:09:18,314 Stage-1 map = 100%,  reduce = 0%</span><br><span class="line">2024-06-16 02:09:56,917 Stage-1 map = 100%,  reduce = 100%</span><br><span class="line">Ended Job = job_local1592485813_0001</span><br><span class="line">MapReduce Jobs Launched: </span><br><span class="line">Stage-Stage-1:  HDFS Read: 10138340136 HDFS Write: 0 SUCCESS</span><br><span class="line">Total MapReduce CPU Time Spent: 0 msec</span><br><span class="line">OK</span><br><span class="line">100605</span><br><span class="line">100728355</span><br><span class="line">100796503</span><br><span class="line">10095384</span><br><span class="line">...</span><br><span class="line">64315314</span><br><span class="line">6500849</span><br><span class="line">65095287</span><br><span class="line">6534626</span><br><span class="line">Time taken: 53.599 seconds, Fetched: 1564 row(s)</span><br></pre></td></tr></table></figure>
<h3 id="用户实时查询分析"><a class="markdownIt-Anchor" href="#用户实时查询分析"></a> 用户实时查询分析</h3>
<p><strong>查询某个地区的用户当天浏览网站的次数</strong></p>
<p>创建新的数据表进行存储</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hive&gt; create table scan(province STRING,scan INT) COMMENT &#x27;This is the search of bigdataday&#x27; ROW FORMAT DELIMITED FIELDS TERMINATED BY &#x27;\t&#x27; STORED AS TEXTFILE;</span><br><span class="line">OK</span><br><span class="line">Time taken: 1.17 seconds</span><br></pre></td></tr></table></figure>
<p>导入数据</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hive&gt; insert overwrite table scan select province,count(behavior_type) from bigdata_user where behavior_type=&#x27;1&#x27; group by province;</span><br><span class="line">Query ID = hadoop_20240616021413_4ab776e4-cc98-475c-95bc-6973ee82e279</span><br><span class="line">Total jobs = 2</span><br><span class="line">Launching Job 1 out of 2</span><br><span class="line">Number of reduce tasks not specified. Estimated from input data size: 5</span><br><span class="line">In order to change the average load for a reducer (in bytes):</span><br><span class="line">  set hive.exec.reducers.bytes.per.reducer=&lt;number&gt;</span><br><span class="line">In order to limit the maximum number of reducers:</span><br><span class="line">  set hive.exec.reducers.max=&lt;number&gt;</span><br><span class="line">In order to set a constant number of reducers:</span><br><span class="line">  set mapreduce.job.reduces=&lt;number&gt;</span><br><span class="line">Job running in-process (local Hadoop)</span><br><span class="line">2024-06-16 02:14:15,184 Stage-1 map = 0%,  reduce = 0%</span><br><span class="line">2024-06-16 02:14:17,188 Stage-1 map = 100%,  reduce = 0%</span><br><span class="line">2024-06-16 02:14:27,290 Stage-1 map = 100%,  reduce = 100%</span><br><span class="line">Ended Job = job_local52434044_0002</span><br><span class="line">Loading data to table dblab.scan</span><br><span class="line">Launching Job 2 out of 2</span><br><span class="line">Number of reduce tasks determined at compile time: 1</span><br><span class="line">In order to change the average load for a reducer (in bytes):</span><br><span class="line">  set hive.exec.reducers.bytes.per.reducer=&lt;number&gt;</span><br><span class="line">In order to limit the maximum number of reducers:</span><br><span class="line">  set hive.exec.reducers.max=&lt;number&gt;</span><br><span class="line">In order to set a constant number of reducers:</span><br><span class="line">  set mapreduce.job.reduces=&lt;number&gt;</span><br><span class="line">Job running in-process (local Hadoop)</span><br><span class="line">2024-06-16 02:14:28,626 Stage-3 map = 100%,  reduce = 100%</span><br><span class="line">Ended Job = job_local2032099341_0003</span><br><span class="line">MapReduce Jobs Launched: </span><br><span class="line">Stage-Stage-1:  HDFS Read: 22561512896 HDFS Write: 2644 SUCCESS</span><br><span class="line">Stage-Stage-3:  HDFS Read: 4969269104 HDFS Write: 1654 SUCCESS</span><br><span class="line">Total MapReduce CPU Time Spent: 0 msec</span><br><span class="line">OK</span><br><span class="line">Time taken: 15.49 seconds</span><br></pre></td></tr></table></figure>
<p>显示结果</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hive&gt; select * from scan;</span><br><span class="line">OK</span><br><span class="line">台湾    645421</span><br><span class="line">四川    646636</span><br><span class="line">宁夏    643964</span><br><span class="line">安徽    645594</span><br><span class="line">广东    643067</span><br><span class="line">广西    645380</span><br><span class="line">河南    645191</span><br><span class="line">贵州    645203</span><br><span class="line">辽宁    644007</span><br><span class="line">陕西    645452</span><br><span class="line">吉林    645223</span><br><span class="line">江西    644830</span><br><span class="line">甘肃    645495</span><br><span class="line">西藏    644691</span><br><span class="line">重庆市  645230</span><br><span class="line">上海市  644384</span><br><span class="line">云南    645295</span><br><span class="line">北京市  645735</span><br><span class="line">江苏    646701</span><br><span class="line">浙江    645915</span><br><span class="line">海南    646311</span><br><span class="line">湖北    645080</span><br><span class="line">青海    645554</span><br><span class="line">内蒙古  645438</span><br><span class="line">天津市  645704</span><br><span class="line">山东    646162</span><br><span class="line">山西    644977</span><br><span class="line">新疆    644826</span><br><span class="line">湖南    645725</span><br><span class="line">澳门    645513</span><br><span class="line">香港    644758</span><br><span class="line">黑龙江  645571</span><br><span class="line">河北    645313</span><br><span class="line">福建    646174</span><br><span class="line">Time taken: 0.093 seconds, Fetched: 34 row(s)</span><br></pre></td></tr></table></figure>
<h2 id="hive-mysql-hbase数据互导"><a class="markdownIt-Anchor" href="#hive-mysql-hbase数据互导"></a> Hive、MySQL、HBase数据互导</h2>
<h3 id="hive预操作"><a class="markdownIt-Anchor" href="#hive预操作"></a> Hive预操作</h3>
<p>创建临时表<code>user_action</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hive&gt; create table dblab.user_action(id STRING,uid STRING, item_id STRING, behavior_type STRING, item_category STRING, visit_date DATE, province STRING) COMMENT &#x27;Welcome to XMU dblab! &#x27; ROW FORMAT DELIMITED FIELDS TERMINATED BY &#x27;\t&#x27; STORED AS TEXTFILE;</span><br><span class="line">OK</span><br><span class="line">Time taken: 0.277 seconds</span><br></pre></td></tr></table></figure>
<p>现在可以新建一个终端，执行命令查看一下，确认这个数据文件在HDFS中确实已经被创建，在新建的终端中执行下面命令</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">hdfs dfs -<span class="built_in">ls</span> /user/hive/warehouse/dblab.db/</span><br></pre></td></tr></table></figure>
<p>可以看到目录内容：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Found 2 items</span><br><span class="line">drwxr-xr-x   - hadoop supergroup          0 2024-06-16 02:14 /user/hive/warehouse/dblab.db/scan</span><br><span class="line">drwxr-xr-x   - hadoop supergroup          0 2024-06-16 02:18 /user/hive/warehouse/dblab.db/user_action</span><br></pre></td></tr></table></figure>
<p><strong>将<code>bigdata_user</code>表中的数据插入到<code>user_action</code></strong></p>
<p>下面把<code>dblab.bigdata_user</code>数据插入到<code>dblab.user_action</code>表中，命令如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hive&gt; INSERT OVERWRITE TABLE dblab.user_action select * from dblab.bigdata_user;</span><br><span class="line">Query ID = hadoop_20240616022349_4259971c-f495-4711-be42-69c01bc36c59</span><br><span class="line">Total jobs = 3</span><br><span class="line">Launching Job 1 out of 3</span><br><span class="line">Number of reduce tasks is set to 0 since there&#x27;s no reduce operator</span><br><span class="line">Job running in-process (local Hadoop)</span><br><span class="line">2024-06-16 02:23:51,241 Stage-1 map = 0%,  reduce = 0%</span><br><span class="line">2024-06-16 02:24:03,244 Stage-1 map = 10%,  reduce = 0%</span><br><span class="line">2024-06-16 02:24:06,246 Stage-1 map = 100%,  reduce = 0%</span><br><span class="line">2024-06-16 02:24:18,254 Stage-1 map = 30%,  reduce = 0%</span><br><span class="line">2024-06-16 02:24:24,260 Stage-1 map = 100%,  reduce = 0%</span><br><span class="line">2024-06-16 02:24:36,268 Stage-1 map = 50%,  reduce = 0%</span><br><span class="line">2024-06-16 02:24:41,272 Stage-1 map = 100%,  reduce = 0%</span><br><span class="line">2024-06-16 02:24:53,281 Stage-1 map = 70%,  reduce = 0%</span><br><span class="line">2024-06-16 02:24:58,285 Stage-1 map = 100%,  reduce = 0%</span><br><span class="line">Ended Job = job_local1890104177_0013</span><br><span class="line">Stage-4 is selected by condition resolver.</span><br><span class="line">Stage-3 is filtered out by condition resolver.</span><br><span class="line">Stage-5 is filtered out by condition resolver.</span><br><span class="line">Moving data to directory hdfs://localhost:9000/user/hive/warehouse/dblab.db/user_action/.hive-staging_hive_2024-06-16_02-23-49_848_6247200484593972572-1/-ext-10000</span><br><span class="line">Loading data to table dblab.user_action</span><br><span class="line">MapReduce Jobs Launched: </span><br><span class="line">Stage-Stage-1:  HDFS Read: 72254308806 HDFS Write: 3926636398 SUCCESS</span><br><span class="line">Total MapReduce CPU Time Spent: 0 msec</span><br><span class="line">OK</span><br><span class="line">Time taken: 79.633 seconds</span><br></pre></td></tr></table></figure>
<p>然后执行下面命令查询上面的插入命令是否成功执行</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hive&gt; select * from user_action limit 10;</span><br><span class="line">OK</span><br><span class="line">1       10001082        285259775       1       4076    2014-12-08      湖南</span><br><span class="line">2       10001082        4368907 1       5503    2014-12-12      安徽</span><br><span class="line">3       10001082        4368907 1       5503    2014-12-12      新疆</span><br><span class="line">4       10001082        53616768        1       9762    2014-12-02      上海市</span><br><span class="line">5       10001082        151466952       1       5232    2014-12-12      黑龙江</span><br><span class="line">6       10001082        53616768        4       9762    2014-12-02      广东</span><br><span class="line">7       10001082        290088061       1       5503    2014-12-12      青海</span><br><span class="line">8       10001082        298397524       1       10894   2014-12-12      香港</span><br><span class="line">9       10001082        32104252        1       6513    2014-12-12      山西</span><br><span class="line">10      10001082        323339743       1       10894   2014-12-12      宁夏</span><br><span class="line">Time taken: 0.081 seconds, Fetched: 10 row(s)</span><br></pre></td></tr></table></figure>
<h3 id="使用java-api将数据从hive导入mysql"><a class="markdownIt-Anchor" href="#使用java-api将数据从hive导入mysql"></a> 使用Java API将数据从Hive导入MySQL</h3>
<p><strong>将前面生成的临时表数据从Hive导入到 MySQL中</strong></p>
<p>登录MySQL</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> mysql -u root</span><br></pre></td></tr></table></figure>
<p>创建数据库并授权给<code>hadoop</code>用户</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> databases; # 显示所有数据库</span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------+</span></span><br><span class="line"><span class="operator">|</span> Database           <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------+</span></span><br><span class="line"><span class="operator">|</span> hive               <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> information_schema <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> mysql              <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> performance_schema <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> sys                <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------+</span></span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">create</span> database dblab; 创建dblab数据库</span><br><span class="line">Query OK, <span class="number">1</span> <span class="type">row</span> affected (<span class="number">0.02</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">grant</span> <span class="keyword">all</span> privileges <span class="keyword">on</span> dblab.<span class="operator">*</span> <span class="keyword">to</span> hadoop; # 将dblab数据库授权给hadoop用户</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.01</span> sec)</span><br></pre></td></tr></table></figure>
<p>退出<code>root</code>用户</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> exit;</span><br><span class="line">Bye</span><br></pre></td></tr></table></figure>
<p>登陆<code>hadoop</code>用户</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> databases; # 显示所有数据库</span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------+</span></span><br><span class="line"><span class="operator">|</span> Database           <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------+</span></span><br><span class="line"><span class="operator">|</span> dblab              <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> hive               <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> information_schema <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> performance_schema <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------+</span></span><br><span class="line"><span class="number">4</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> use dblab;</span><br><span class="line">Database changed</span><br></pre></td></tr></table></figure>
<p>注意：用下面命令查看数据库的编码</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> variables <span class="keyword">like</span> &quot;char%&quot;;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------+----------------------------+</span></span><br><span class="line"><span class="operator">|</span> Variable_name            <span class="operator">|</span> <span class="keyword">Value</span>                      <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------+----------------------------+</span></span><br><span class="line"><span class="operator">|</span> character_set_client     <span class="operator">|</span> utf8mb4                    <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> character_set_connection <span class="operator">|</span> utf8mb4                    <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> character_set_database   <span class="operator">|</span> utf8mb4                    <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> character_set_filesystem <span class="operator">|</span> <span class="type">binary</span>                     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> character_set_results    <span class="operator">|</span> utf8mb4                    <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> character_set_server     <span class="operator">|</span> utf8mb4                    <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> character_set_system     <span class="operator">|</span> utf8mb3                    <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> character_sets_dir       <span class="operator">|</span> <span class="operator">/</span>usr<span class="operator">/</span>share<span class="operator">/</span>mysql<span class="operator">/</span>charsets<span class="operator">/</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------+----------------------------+</span></span><br><span class="line"><span class="number">8</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.01</span> sec)</span><br></pre></td></tr></table></figure>
<blockquote>
<p>如果character_set_server不是utf8之类的编码，则需要修改配置文件</p>
<p>在<code>[mysqld]</code>下添加一行<code>character_set_server=utf8</code></p>
<figure class="highlight plaintext"><figcaption><span>/etc/mysql/mysql.conf.d/mysqld.cnf</span></figcaption><table><tr><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line">character_set_server=utf8</span><br></pre></td></tr></table></figure>
<p>然后重启MySQL服务</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> service mysql restart</span><br></pre></td></tr></table></figure>
</blockquote>
<p>创建表</p>
<p>下面在MySQL的数据库<code>dblab</code>中创建一个新表<code>user_action</code>，并设置其编码为<code>utf-8</code>：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `dblab`.`user_action` (`id` <span class="type">varchar</span>(<span class="number">50</span>),`uid` <span class="type">varchar</span>(<span class="number">50</span>),`item_id` <span class="type">varchar</span>(<span class="number">50</span>),`behavior_type` <span class="type">varchar</span>(<span class="number">10</span>),`item_category` <span class="type">varchar</span>(<span class="number">50</span>), `visit_date` <span class="type">DATE</span>,`province` <span class="type">varchar</span>(<span class="number">20</span>)) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected, <span class="number">1</span> warning (<span class="number">0.03</span> sec)</span><br></pre></td></tr></table></figure>
<p>创建成功后<code>exit</code>退出MySQL</p>
<p>导入数据</p>
<p>通过JDBC连接Hive和MySQL，将数据从Hive导入MySQL。通过JDBC连接Hive，需要通过Hive的thrift服务实现跨语言访问Hive，实现thrift服务需要开启hiveserver2。</p>
<p>启动HDFS以后，在终端中启动<code>metastore</code></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">hive --service metastore</span><br></pre></td></tr></table></figure>
<p>在另一个终端中执行以下命令开启<code>HiveServer2</code>，并设置默认端口为10000（如果按照前面教程配置了hiveserver2的端口，这里的<code>-hiveconf</code>选项不需要添加）</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">hive --service hiveserver2 -hiveconf hive.server2.thrift.port=10000</span><br></pre></td></tr></table></figure>
<p>启动时，当屏幕上出现“Hive Session ID = 6bd1726e-37c5-41fc-93ea-ef7e176b24f2”信息时，会停留较长的时间，需要出现几个“Hive Session ID=…”以后，Hive才会真正启动。启动成功以后，会出现如下信息</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Hive Session ID = bb1c1106-83ce-4653-9541-c79a86945ea0</span><br><span class="line">Hive Session ID = 0e577e34-83c1-40de-9fb6-917be3d5e022</span><br></pre></td></tr></table></figure>
<p>不要关闭这个终端，保持服务的运行</p>
<p>在新的终端下运行以下命令查看10000号和10002号端口是否已经被占用，如果被占用，说明启动成功，可以在浏览器访问<code>127.0.0.1:10002</code>打开hiveserver2的网页接口</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> netstat -anp |grep <span class="string">&quot;10000\|10002&quot;</span></span><br></pre></td></tr></table></figure>
<p>端口信息如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tcp6       0      0 :::10000                :::*                    LISTEN      76077/java          </span><br><span class="line">tcp6       0      0 :::10002                :::*                    LISTEN      76077/java</span><br></pre></td></tr></table></figure>
<p>启动IntelliJ IDEA，创建一个项目名为HivetoMySQL</p>
<p>将<code>$HADOOP_HOME/share/hadoop/common</code>和<code>$HIVE_HOME/lib</code>目录下JAR包导入到项目中，<sup class="footnote-ref"><a href="#fn3" id="fnref3">[3]</a></sup> <a id="jar"></a></p>
<ol>
<li>点击工具栏的 File 选项</li>
<li>点击 Project Structure（CTRL + SHIFT + ALT + S on Windows/Linux，⌘ + ; on Mac OS X）</li>
<li>选择左侧的 Modules 选项</li>
<li>选择 Dependencies tab</li>
<li>点击 + → JARs or directories</li>
<li>选择需要导入JAR包的所在目录</li>
<li>点击 Apply 应用选项</li>
</ol>
<p>导入后可以在左边的External Libraries中看到导入的JAR包</p>
<p>删除原有的<code>Main</code>类，创建一个公共类<code>HivetoMySQL</code></p>
<p>编写<code>HivetoMySQL.java</code>代码，注意用户名和密码，以及端口是否正确，运行代码等待导入</p>
<p>然后就是漫漫漫漫漫漫漫漫漫漫漫漫长长长长长长长长长长长长长长的等待时间…（人生苦短，不要用raw_user…）</p>
<figure class="highlight java"><figcaption><span>HivetoMySQL</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.sql.*;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HivetoMySQL</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">String</span> <span class="variable">driverName</span> <span class="operator">=</span> <span class="string">&quot;org.apache.hive.jdbc.HiveDriver&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">String</span> <span class="variable">driverName_mysql</span> <span class="operator">=</span> <span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> SQLException &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Class.forName(driverName);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line">            <span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            System.exit(<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">Connection</span> <span class="variable">con1</span> <span class="operator">=</span> DriverManager.getConnection(<span class="string">&quot;jdbc:hive2://localhost:10000/default&quot;</span>, <span class="string">&quot;hive&quot;</span>, <span class="string">&quot;hive&quot;</span>);<span class="comment">//后两个参数是用户名密码</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (con1 == <span class="literal">null</span>) System.out.println(<span class="string">&quot;连接失败&quot;</span>);</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="type">Statement</span> <span class="variable">stmt</span> <span class="operator">=</span> con1.createStatement();</span><br><span class="line">            <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;select * from dblab.user_action&quot;</span>;</span><br><span class="line">            System.out.println(<span class="string">&quot;Running: &quot;</span> + sql);</span><br><span class="line">            <span class="type">ResultSet</span> <span class="variable">res</span> <span class="operator">=</span> stmt.executeQuery(sql);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//InsertToMysql</span></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                Class.forName(driverName_mysql);</span><br><span class="line">                <span class="type">Connection</span> <span class="variable">con2</span> <span class="operator">=</span> DriverManager.getConnection(<span class="string">&quot;jdbc:mysql://localhost:3306/dblab&quot;</span>, <span class="string">&quot;hadoop&quot;</span>, <span class="string">&quot;hadoop&quot;</span>);</span><br><span class="line">                <span class="type">String</span> <span class="variable">sql2</span> <span class="operator">=</span> <span class="string">&quot;insert into user_action(id,uid,item_id,behavior_type,item_category,visit_date,province) values (?,?,?,?,?,?,?)&quot;</span>;</span><br><span class="line">                <span class="type">PreparedStatement</span> <span class="variable">ps</span> <span class="operator">=</span> con2.prepareStatement(sql2);</span><br><span class="line">                <span class="keyword">while</span> (res.next()) &#123;</span><br><span class="line">                    ps.setString(<span class="number">1</span>, res.getString(<span class="number">1</span>));</span><br><span class="line">                    ps.setString(<span class="number">2</span>, res.getString(<span class="number">2</span>));</span><br><span class="line">                    ps.setString(<span class="number">3</span>, res.getString(<span class="number">3</span>));</span><br><span class="line">                    ps.setString(<span class="number">4</span>, res.getString(<span class="number">4</span>));</span><br><span class="line">                    ps.setString(<span class="number">5</span>, res.getString(<span class="number">5</span>));</span><br><span class="line">                    ps.setDate(<span class="number">6</span>, res.getDate(<span class="number">6</span>));</span><br><span class="line">                    ps.setString(<span class="number">7</span>, res.getString(<span class="number">7</span>));</span><br><span class="line">                    ps.executeUpdate();</span><br><span class="line">                &#125;</span><br><span class="line">                ps.close();</span><br><span class="line">                con2.close();</span><br><span class="line">                res.close();</span><br><span class="line">                stmt.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        con1.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="使用hbase-java-api把数据从本地导入到hbase中"><a class="markdownIt-Anchor" href="#使用hbase-java-api把数据从本地导入到hbase中"></a> 使用HBase Java API把数据从本地导入到HBase中</h3>
<p><strong>数据准备</strong></p>
<p>先将之前的<code>user_action</code>数据从HDFS复制到Linux系统的本地文件系统中</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">hdfs dfs -get /user/hive/warehouse/dblab.db/user_action /usr/local/bigdatacase/dataset/</span><br><span class="line"><span class="built_in">cat</span> /usr/local/bigdatacase/dataset/user_action/* | <span class="built_in">head</span> -10     <span class="comment"># 查看前十行数据</span></span><br><span class="line"><span class="built_in">cat</span> /usr/local/bigdatacase/dataset/user_action/00000* &gt; /usr/local/bigdatacase/dataset/user_action.output    <span class="comment">#将00000*数据复制一份命名为`user_action.output`</span></span><br><span class="line"><span class="built_in">head</span> /usr/local/bigdatacase/dataset/user_action.output      <span class="comment"># 查看user_action.output的前十行</span></span><br></pre></td></tr></table></figure>
<p>创建一个项目，起名叫<code>ImportHBase</code>，像<a href="#jar">上面</a>一样将目录<code>$HADOOP_HOME/share/hadoop/common</code>和<code>$HBASE_HOME/lib</code>下的JAR包导入到项目中，删除原有的<code>Main</code>类，新建一个<code>ImportHBase</code>类</p>
<p>编写代码<code>ImportHBase.java</code></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.conf.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.hbase.HBaseConfiguration;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.hbase.*;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.hbase.client.*;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.hbase.util.Bytes;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ImportHBase</span> <span class="keyword">extends</span> <span class="title class_">Thread</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> Configuration config;</span><br><span class="line">    <span class="keyword">public</span> Connection conn;</span><br><span class="line">    <span class="keyword">public</span> Table table;</span><br><span class="line">    <span class="keyword">public</span> Admin admin;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">ImportHBase</span><span class="params">()</span> &#123;</span><br><span class="line">        config = HBaseConfiguration.create();</span><br><span class="line"><span class="comment">//      config.set(&quot;hbase.master&quot;, &quot;master:60000&quot;);</span></span><br><span class="line"><span class="comment">//      config.set(&quot;hbase.zookeeper.quorum&quot;, &quot;master&quot;);</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            conn = ConnectionFactory.createConnection(config);</span><br><span class="line">            admin = conn.getAdmin();</span><br><span class="line">            table = conn.getTable(TableName.valueOf(<span class="string">&quot;user_action&quot;</span>));</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="keyword">if</span> (args.length == <span class="number">0</span>) &#123;       <span class="comment">//第一个参数是该jar所使用的类，第二个参数是数据集所存放的路径</span></span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Exception</span>(<span class="string">&quot;You must set input path!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">String</span> <span class="variable">fileName</span> <span class="operator">=</span> args[args.length - <span class="number">1</span>];  <span class="comment">//输入的文件路径是最后一个参数</span></span><br><span class="line">        <span class="type">ImportHBase</span> <span class="variable">test</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ImportHBase</span>();</span><br><span class="line">        test.importLocalFileToHBase(fileName);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">importLocalFileToHBase</span><span class="params">(String fileName)</span> &#123;</span><br><span class="line">        <span class="type">long</span> <span class="variable">st</span> <span class="operator">=</span> System.currentTimeMillis();</span><br><span class="line">        <span class="type">BufferedReader</span> <span class="variable">br</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            br = <span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(</span><br><span class="line">                    fileName)));</span><br><span class="line">            <span class="type">String</span> <span class="variable">line</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">            <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span> ((line = br.readLine()) != <span class="literal">null</span>) &#123;</span><br><span class="line">                count++;</span><br><span class="line">                put(line);</span><br><span class="line">                <span class="keyword">if</span> (count % <span class="number">10000</span> == <span class="number">0</span>)</span><br><span class="line">                    System.out.println(count);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (br != <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    br.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                table.close(); <span class="comment">// must close the client</span></span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">long</span> <span class="variable">en2</span> <span class="operator">=</span> System.currentTimeMillis();</span><br><span class="line">        System.out.println(<span class="string">&quot;Total Time: &quot;</span> + (en2 - st) + <span class="string">&quot; ms&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@SuppressWarnings(&quot;deprecation&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">put</span><span class="params">(String line)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        String[] arr = line.split(<span class="string">&quot;\t&quot;</span>, -<span class="number">1</span>);</span><br><span class="line">        String[] column = &#123;<span class="string">&quot;id&quot;</span>, <span class="string">&quot;uid&quot;</span>, <span class="string">&quot;item_id&quot;</span>, <span class="string">&quot;behavior_type&quot;</span>, <span class="string">&quot;item_category&quot;</span>, <span class="string">&quot;date&quot;</span>, <span class="string">&quot;province&quot;</span>&#125;;</span><br><span class="line">        <span class="keyword">if</span> (arr.length == <span class="number">7</span>) &#123;</span><br><span class="line">            <span class="type">Put</span> <span class="variable">put</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Put</span>(Bytes.toBytes(arr[<span class="number">0</span>]));<span class="comment">// rowkey</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">                put.addColumn(Bytes.toBytes(<span class="string">&quot;f1&quot;</span>), Bytes.toBytes(column[i]), Bytes.toBytes(arr[i]));</span><br><span class="line">            &#125;</span><br><span class="line">            table.put(put); <span class="comment">// put to server</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">get</span><span class="params">(String rowkey, String columnFamily, String column,</span></span><br><span class="line"><span class="params">                    <span class="type">int</span> versions)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">long</span> <span class="variable">st</span> <span class="operator">=</span> System.currentTimeMillis();</span><br><span class="line">        <span class="type">Get</span> <span class="variable">get</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Get</span>(Bytes.toBytes(rowkey));</span><br><span class="line">        get.addColumn(Bytes.toBytes(columnFamily), Bytes.toBytes(column));</span><br><span class="line">        <span class="type">Scan</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scan</span>(get);</span><br><span class="line">        scanner.readVersions(versions);</span><br><span class="line">        <span class="type">ResultScanner</span> <span class="variable">rsScanner</span> <span class="operator">=</span> table.getScanner(scanner);</span><br><span class="line">        <span class="keyword">for</span> (Result result : rsScanner) &#123;</span><br><span class="line">            <span class="keyword">final</span> List&lt;Cell&gt; list = result.listCells();</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">final</span> Cell kv : list) &#123;</span><br><span class="line">                System.out.println(Bytes.toStringBinary(kv.getValueArray()) + <span class="string">&quot;\t&quot;</span></span><br><span class="line">                        + kv.getTimestamp()); <span class="comment">// mid + time</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        rsScanner.close();</span><br><span class="line">        <span class="type">long</span> <span class="variable">en2</span> <span class="operator">=</span> System.currentTimeMillis();</span><br><span class="line">        System.out.println(<span class="string">&quot;Total Time: &quot;</span> + (en2 - st) + <span class="string">&quot; ms&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>打包成可执行jar包<sup class="footnote-ref"><a href="#fn4" id="fnref4">[4]</a></sup></p>
<ol>
<li>点击工具栏 Files 选项</li>
<li>点击 Project Structure（CTRL + SHIFT + ALT + S on Windows/Linux，⌘ + ; on Mac OS X）</li>
<li>点击 Artifacts</li>
<li>点击 + 号，选择JAR，From Modules with dependencies</li>
<li>Main Class 选择ImportHBase</li>
<li>JAR files from libraries 选择 extract to the target JAR</li>
<li>选择META-INF/MANIFEST.MF的路径，路径选择src即可</li>
<li>点击OK完成配置</li>
<li>点击工具栏 Build 选项</li>
<li>点击Build Artifact</li>
<li>点击 Build 等待编译</li>
</ol>
<p>将生成的jar包复制到<code>/usr/local/bigdatacase/hbase</code>目录</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> /usr/local/bigdatacase/hbase</span><br><span class="line"><span class="built_in">cp</span> ImportHBase.jar /usr/local/bigdatacase/hbase</span><br></pre></td></tr></table></figure>
<p>启动HDFS、ZooKeeper和HBase</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">start-dfs.sh</span><br><span class="line">zkServer.sh start</span><br><span class="line">start-hbase.sh</span><br></pre></td></tr></table></figure>
<p>启动HBase Shell</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">hbase shell</span><br></pre></td></tr></table></figure>
<p>启动成功后，进入&quot;hbase&gt;&quot;命令提示符状态</p>
<p>创建<code>user_action</code>表</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hbase:001:0&gt; create &#x27;user_action&#x27;, &#123; NAME =&gt; &#x27;f1&#x27;, VERSIONS =&gt; 5&#125;</span><br><span class="line">Created table user_action</span><br><span class="line">Took 1.5141 seconds                                                                                                                     </span><br><span class="line">=&gt; Hbase::Table - user_action</span><br></pre></td></tr></table></figure>
<p>确保<code>user_action</code>表为空</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hbase:001:0&gt; truncate &#x27;user_action&#x27;</span><br><span class="line">Truncating &#x27;user_action&#x27; table (it may take a while):</span><br><span class="line">Disabling table...</span><br><span class="line">Truncating table...</span><br><span class="line">Took 2.9350 seconds</span><br></pre></td></tr></table></figure>
<p>通过hadoop jar命令运行上面的Java程序</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">hadoop jar /usr/local/bigdatacase/hbase/ImportHBase ImportHBase /usr/local/bigdatacase/dataset/user_action.output</span><br></pre></td></tr></table></figure>
<p>然后就是漫长的等待时间（相较于上面的Hive导入MySQL，已经是非常非常快了）</p>
<p>导入完成以后在HBase Shell窗口，执行下面命令查询数据</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hbase:001:0&gt; scan &#x27;user_action&#x27;,&#123;LIMIT=&gt;10&#125; </span><br><span class="line">ROW                                                                   COLUMN+CELL                                                                                                                                                                                                  </span><br><span class="line"> 1                                                                    column=f1:behavior_type, timestamp=2024-06-16T04:51:32.554, value=1                                                                                                                                          </span><br><span class="line"> 1                                                                    column=f1:date, timestamp=2024-06-16T04:51:32.554, value=2014-12-08                                                                                                                                          </span><br><span class="line"> 1                                                                    column=f1:item_category, timestamp=2024-06-16T04:51:32.554, value=4076                                                                                                                                       </span><br><span class="line"> 1                                                                    column=f1:item_id, timestamp=2024-06-16T04:51:32.554, value=285259775                                                                                                                                        </span><br><span class="line"> 1                                                                    column=f1:province, timestamp=2024-06-16T04:51:32.554, value=\xE6\xB9\x96\xE5\x8D\x97                                                                                                                        </span><br><span class="line"> 1                                                                    column=f1:uid, timestamp=2024-06-16T04:51:32.554, value=10001082                                                                                                                                             </span><br><span class="line"> 10                                                                   column=f1:behavior_type, timestamp=2024-06-16T04:51:32.573, value=1                                                                                                                                          </span><br><span class="line"> 10                                                                   column=f1:date, timestamp=2024-06-16T04:51:32.573, value=2014-12-12                                                                                                                                          </span><br><span class="line"> 10                                                                   column=f1:item_category, timestamp=2024-06-16T04:51:32.573, value=10894                                                                                                                                      </span><br><span class="line"> 10                                                                   column=f1:item_id, timestamp=2024-06-16T04:51:32.573, value=323339743                                                                                                                                        </span><br><span class="line"> 10                                                                   column=f1:province, timestamp=2024-06-16T04:51:32.573, value=\xE5\xAE\x81\xE5\xA4\x8F                                                                                                                        </span><br><span class="line"> 10                                                                   column=f1:uid, timestamp=2024-06-16T04:51:32.573, value=10001082                                                                                                                                             </span><br><span class="line"> 100                                                                  column=f1:behavior_type, timestamp=2024-06-16T04:51:32.709, value=1                                                                                                                                          </span><br><span class="line"> 100                                                                  column=f1:date, timestamp=2024-06-16T04:51:32.709, value=2014-12-02                                                                                                                                          </span><br><span class="line"> 100                                                                  column=f1:item_category, timestamp=2024-06-16T04:51:32.709, value=10576                                                                                                                                      </span><br><span class="line"> 100                                                                  column=f1:item_id, timestamp=2024-06-16T04:51:32.709, value=275221686                                                                                                                                        </span><br><span class="line"> 100                                                                  column=f1:province, timestamp=2024-06-16T04:51:32.709, value=\xE6\xB1\x9F\xE8\x8B\x8F                                                                                                                        </span><br><span class="line"> 100                                                                  column=f1:uid, timestamp=2024-06-16T04:51:32.709, value=10001082                                                                                                                                             </span><br><span class="line"> 1000                                                                 column=f1:behavior_type, timestamp=2024-06-16T04:51:33.352, value=1                                                                                                                                          </span><br><span class="line"> 1000                                                                 column=f1:date, timestamp=2024-06-16T04:51:33.352, value=2014-12-02                                                                                                                                          </span><br><span class="line"> 1000                                                                 column=f1:item_category, timestamp=2024-06-16T04:51:33.352, value=3381                                                                                                                                       </span><br><span class="line"> 1000                                                                 column=f1:item_id, timestamp=2024-06-16T04:51:33.352, value=168463559                                                                                                                                        </span><br><span class="line"> 1000                                                                 column=f1:province, timestamp=2024-06-16T04:51:33.352, value=\xE5\x86\x85\xE8\x92\x99\xE5\x8F\xA4                                                                                                            </span><br><span class="line"> 1000                                                                 column=f1:uid, timestamp=2024-06-16T04:51:33.352, value=100068031                                                                                                                                            </span><br><span class="line"> 10000                                                                column=f1:behavior_type, timestamp=2024-06-16T04:51:35.031, value=1                                                                                                                                          </span><br><span class="line"> 10000                                                                column=f1:date, timestamp=2024-06-16T04:51:35.031, value=2014-12-05                                                                                                                                          </span><br><span class="line"> 10000                                                                column=f1:item_category, timestamp=2024-06-16T04:51:35.031, value=12488                                                                                                                                      </span><br><span class="line"> 10000                                                                column=f1:item_id, timestamp=2024-06-16T04:51:35.031, value=45571867                                                                                                                                         </span><br><span class="line"> 10000                                                                column=f1:province, timestamp=2024-06-16T04:51:35.031, value=\xE8\xB4\xB5\xE5\xB7\x9E                                                                                                                        </span><br><span class="line"> 10000                                                                column=f1:uid, timestamp=2024-06-16T04:51:35.031, value=100198255                                                                                                                                            </span><br><span class="line"> 100000                                                               column=f1:behavior_type, timestamp=2024-06-16T04:51:46.061, value=1                                                                                                                                          </span><br><span class="line"> 100000                                                               column=f1:date, timestamp=2024-06-16T04:51:46.061, value=2014-11-29                                                                                                                                          </span><br><span class="line"> 100000                                                               column=f1:item_category, timestamp=2024-06-16T04:51:46.061, value=6580                                                                                                                                       </span><br><span class="line"> 100000                                                               column=f1:item_id, timestamp=2024-06-16T04:51:46.061, value=78973192                                                                                                                                         </span><br><span class="line"> 100000                                                               column=f1:province, timestamp=2024-06-16T04:51:46.061, value=\xE5\xB1\xB1\xE4\xB8\x9C                                                                                                                        </span><br><span class="line"> 100000                                                               column=f1:uid, timestamp=2024-06-16T04:51:46.061, value=101480065                                                                                                                                            </span><br><span class="line"> 1000000                                                              column=f1:behavior_type, timestamp=2024-06-16T04:53:21.091, value=1                                                                                                                                          </span><br><span class="line"> 1000000                                                              column=f1:date, timestamp=2024-06-16T04:53:21.091, value=2014-11-29                                                                                                                                          </span><br><span class="line"> 1000000                                                              column=f1:item_category, timestamp=2024-06-16T04:53:21.091, value=10961                                                                                                                                      </span><br><span class="line"> 1000000                                                              column=f1:item_id, timestamp=2024-06-16T04:53:21.091, value=88763784                                                                                                                                         </span><br><span class="line"> 1000000                                                              column=f1:province, timestamp=2024-06-16T04:53:21.091, value=\xE5\xB1\xB1\xE8\xA5\xBF                                                                                                                        </span><br><span class="line"> 1000000                                                              column=f1:uid, timestamp=2024-06-16T04:53:21.091, value=111256954                                                                                                                                            </span><br><span class="line"> 10000000                                                             column=f1:behavior_type, timestamp=2024-06-16T05:09:10.864, value=1                                                                                                                                          </span><br><span class="line"> 10000000                                                             column=f1:date, timestamp=2024-06-16T05:09:10.864, value=2014-11-27                                                                                                                                          </span><br><span class="line"> 10000000                                                             column=f1:item_category, timestamp=2024-06-16T05:09:10.864, value=1854                                                                                                                                       </span><br><span class="line"> 10000000                                                             column=f1:item_id, timestamp=2024-06-16T05:09:10.864, value=87168683                                                                                                                                         </span><br><span class="line"> 10000000                                                             column=f1:province, timestamp=2024-06-16T05:09:10.864, value=\xE6\xB9\x96\xE5\x8D\x97                                                                                                                        </span><br><span class="line"> 10000000                                                             column=f1:uid, timestamp=2024-06-16T05:09:10.864, value=123265349                                                                                                                                            </span><br><span class="line"> 10000001                                                             column=f1:behavior_type, timestamp=2024-06-16T05:09:10.864, value=1                                                                                                                                          </span><br><span class="line"> 10000001                                                             column=f1:date, timestamp=2024-06-16T05:09:10.864, value=2014-11-18                                                                                                                                          </span><br><span class="line"> 10000001                                                             column=f1:item_category, timestamp=2024-06-16T05:09:10.864, value=13712                                                                                                                                      </span><br><span class="line"> 10000001                                                             column=f1:item_id, timestamp=2024-06-16T05:09:10.864, value=125559152                                                                                                                                        </span><br><span class="line"> 10000001                                                             column=f1:province, timestamp=2024-06-16T05:09:10.864, value=\xE6\xB9\x96\xE5\x8C\x97                                                                                                                        </span><br><span class="line"> 10000001                                                             column=f1:uid, timestamp=2024-06-16T05:09:10.864, value=123265349                                                                                                                                            </span><br><span class="line"> 10000002                                                             column=f1:behavior_type, timestamp=2024-06-16T05:09:10.864, value=1                                                                                                                                          </span><br><span class="line"> 10000002                                                             column=f1:date, timestamp=2024-06-16T05:09:10.864, value=2014-12-18                                                                                                                                          </span><br><span class="line"> 10000002                                                             column=f1:item_category, timestamp=2024-06-16T05:09:10.864, value=14079                                                                                                                                      </span><br><span class="line"> 10000002                                                             column=f1:item_id, timestamp=2024-06-16T05:09:10.864, value=222706509                                                                                                                                        </span><br><span class="line"> 10000002                                                             column=f1:province, timestamp=2024-06-16T05:09:10.864, value=\xE5\x86\x85\xE8\x92\x99\xE5\x8F\xA4                                                                                                            </span><br><span class="line"> 10000002                                                             column=f1:uid, timestamp=2024-06-16T05:09:10.864, value=123265349</span><br></pre></td></tr></table></figure>
<blockquote>
<p>没啦，别问为什么没写完，因为数据没导完啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊</p>
<p>不愧是大数据</p>
</blockquote>
<p>在这里放一只小猫，学累了就摸摸它</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">　　　　　　 ＿＿</span><br><span class="line">　　　　　／＞　　フ</span><br><span class="line">　　　　　| 　_　 _ l</span><br><span class="line">　 　　　／` ミ＿xノ</span><br><span class="line">　　 　 /　　　 　 |</span><br><span class="line">　　　 /　 ヽ　　 ﾉ</span><br><span class="line">　 　 │　　|　|　|</span><br><span class="line">　／￣|　　 |　|　|</span><br><span class="line">　| (￣ヽ＿_ヽ_)__)</span><br><span class="line">　＼二つ</span><br></pre></td></tr></table></figure>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p><a href="https://www.jetbrains.com/help/idea/installation-guide.html#-aa9dmj_178">Install IntelliJ IDEA</a> <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn2" class="footnote-item"><p><a href="https://mirrors.aliyun.com/eclipse/eclipse/downloads/drops4/R-4.23-202203080310/eclipse-SDK-4.23-linux-gtk-x86_64.tar.gz">Eclipse 阿里镜像站</a> <a href="#fnref2" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn3" class="footnote-item"><p><a href="https://www.jetbrains.com/help/idea/working-with-module-dependencies.html#add-a-new-dependency">Add a new dependency</a> <a href="#fnref3" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn4" class="footnote-item"><p><a href="https://www.jetbrains.com/help/idea/working-with-artifacts.html#configure_artifact">Deployment/Artifacts</a> <a href="#fnref4" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
      <categories>
        <category>Big Data</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Big Data</tag>
        <tag>Hadoop</tag>
        <tag>ZooKeeper</tag>
        <tag>HBase</tag>
        <tag>R</tag>
        <tag>Hive</tag>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>大数据实验踩坑指南</title>
    <url>/2024/06/16/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AE%9E%E9%AA%8C%E8%B8%A9%E5%9D%91%E6%8C%87%E5%8D%97/</url>
    <content><![CDATA[<p>本文记录搭建伪分布式的大数据集群的全过程，复现（<s>抄袭</s>）了林子雨老师的网站用户行为分析案例<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>，删除了已被归档的sqoop工具的部分，并对一些踩坑点进行了说明和修改</p>
<p>本文环境说明：</p>
<ul>
<li>本文使用的Shell为bash shell</li>
<li>本文的Linux用户名及密码为<code>hadoop</code></li>
<li>本文的MySQL使用用户hadoop，密码为hadoop</li>
</ul>
<p>记录分为以下章节</p>
<ul>
<li>
<a href="/2024/06/16/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AE%9E%E9%AA%8C%E8%B8%A9%E5%9D%91%E6%8C%87%E5%8D%97-No-1%E2%80%94%E2%80%94Hadoop%E7%9A%84%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/" title="大数据实验踩坑指南_No.1——Hadoop的安装配置">大数据实验踩坑指南_No.1——Hadoop的安装配置</a>
</li>
<li>
<a href="/2024/06/16/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AE%9E%E9%AA%8C%E8%B8%A9%E5%9D%91%E6%8C%87%E5%8D%97-No-2%E2%80%94%E2%80%94Hive%E7%9A%84%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/" title="大数据实验踩坑指南_No.2——Hive的安装配置">大数据实验踩坑指南_No.2——Hive的安装配置</a>
</li>
<li>
<a href="/2024/06/16/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AE%9E%E9%AA%8C%E8%B8%A9%E5%9D%91%E6%8C%87%E5%8D%97-No-3%E2%80%94%E2%80%94ZooKeeper%E7%9A%84%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/" title="大数据实验踩坑指南_No.3——ZooKeeper的安装配置.md">大数据实验踩坑指南_No.3——ZooKeeper的安装配置.md</a>
</li>
<li>
<a href="/2024/06/16/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AE%9E%E9%AA%8C%E8%B8%A9%E5%9D%91%E6%8C%87%E5%8D%97-No-4%E2%80%94%E2%80%94HBase%E7%9A%84%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/" title="大数据实验踩坑指南_No.4——HBase的安装配置.md">大数据实验踩坑指南_No.4——HBase的安装配置.md</a>
</li>
<li>
<a href="/2024/06/16/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AE%9E%E9%AA%8C%E8%B8%A9%E5%9D%91%E6%8C%87%E5%8D%97-No-5%E2%80%94%E2%80%94R%E8%AF%AD%E8%A8%80%E5%92%8C%E8%BD%AF%E4%BB%B6%E5%8C%85%E7%9A%84%E5%AE%89%E8%A3%85/" title="大数据实验踩坑指南_No.5——R语言和软件包的安装">大数据实验踩坑指南_No.5——R语言和软件包的安装</a>
</li>
<li>
<a href="/2024/06/16/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AE%9E%E9%AA%8C%E8%B8%A9%E5%9D%91%E6%8C%87%E5%8D%97-No-6%E2%80%94%E2%80%94%E5%AE%9E%E9%AA%8C%E6%A1%88%E4%BE%8B%EF%BC%9A%E7%BD%91%E7%AB%99%E7%94%A8%E6%88%B7%E8%A1%8C%E4%B8%BA%E5%88%86%E6%9E%90/" title="大数据实验踩坑指南_No.6——实验案例：网站用户行为分析">大数据实验踩坑指南_No.6——实验案例：网站用户行为分析</a>
</li>
</ul>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p><a href="https://dblab.xmu.edu.cn/post/7499/">重磅：大数据课程实验案例：网站用户行为分析（免费共享）</a> <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
      <categories>
        <category>Big Data</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Big Data</tag>
        <tag>Hadoop</tag>
        <tag>ZooKeeper</tag>
        <tag>HBase</tag>
        <tag>R</tag>
        <tag>Hive</tag>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>将Hexo备份到Github仓库</title>
    <url>/2024/05/07/%E5%B0%86Hexo%E5%A4%87%E4%BB%BD%E5%88%B0Github%E4%BB%93%E5%BA%93/</url>
    <content><![CDATA[<h1 id="将hexo博客备份到github仓库"><a class="markdownIt-Anchor" href="#将hexo博客备份到github仓库"></a> 将Hexo博客备份到Github仓库</h1>
<p>在另一篇文章中，我示范了如何利用<a href="https://github.com/hexojs/hexo-deployer-git">hexo-deployer-git</a>插件将博客推送到GitHub。使用这个插件，我们能够将已编译的博客文件推送到名为<code>&lt;username&gt;.github.io</code>的Github仓库。<br />
在这个仓库中，只有public目录下的文件会被上传，而其他的源文件，比如source、scaffolds，以及node模块等，则不会被包含在上传的内容中。</p>
<img src="未备份1.png" style="max_width:100%">
<img src="未备份2.png" style="max_width:100%">
因此我们需要通过git创建分支，将我们的源文件进行备份。
<h2 id="创建分支"><a class="markdownIt-Anchor" href="#创建分支"></a> 创建分支</h2>
<p>首先克隆我们的<code>&lt;username&gt;.github.io</code>仓库</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/&lt;username&gt;/&lt;username&gt;.github.io</span><br><span class="line"><span class="built_in">cd</span> &lt;username&gt;.github.io</span><br></pre></td></tr></table></figure>
<p>创建一个新分支<code>hexo</code>并切换到这个分支</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git checkout -b hexo</span><br></pre></td></tr></table></figure>
<p>然后将.git整个文件夹移动到你的博客根目录</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mv</span> .git [Blogroot]</span><br></pre></td></tr></table></figure>
<h2 id="配置gitignore"><a class="markdownIt-Anchor" href="#配置gitignore"></a> 配置gitignore</h2>
<p>一般需要忽略一些无关文件，这些文件不需要推送到仓库中，配置<code>.gitignore</code>文件</p>
<figure class="highlight plaintext"><figcaption><span>.gitignore</span></figcaption><table><tr><td class="code"><pre><span class="line">.DS_Store</span><br><span class="line">Thumbs.db</span><br><span class="line">db.json</span><br><span class="line">*.log</span><br><span class="line">node_modules/</span><br><span class="line">public/</span><br><span class="line">.deploy*/</span><br></pre></td></tr></table></figure>
<p>提交<code>.gitignore</code>文件</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git add .gitignore</span><br><span class="line">git commit -m <span class="string">&quot;Add .gitignore&quot;</span></span><br></pre></td></tr></table></figure>
<h2 id="开始备份"><a class="markdownIt-Anchor" href="#开始备份"></a> 开始备份</h2>
<blockquote>
<p>如果对主题进行了修改，要删除主题目录下的<code>.git</code>文件夹，比如<code>[Blogroot]/theme/next/.git</code></p>
</blockquote>
<p>依次执行添加暂存区、提交本地库、推送至Github</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git add .       <span class="comment"># 添加暂存区</span></span><br><span class="line">git commit -m <span class="string">&quot;Hexo source post&quot;</span></span><br><span class="line">git push origin hexo</span><br></pre></td></tr></table></figure>
<h2 id="恢复博客"><a class="markdownIt-Anchor" href="#恢复博客"></a> 恢复博客</h2>
<p>那么如果本地博客没了，要怎么恢复呢？</p>
<p>首先要把<a href="https://nodejs.org">node</a>、<a href="https://www.npmjs.com">npm</a>、<a href="https://hexo.io">hexo</a>这些基础软件像第一次搭建那样安装好</p>
<p>然后只需要将Github仓库里的<code>hexo</code>分支（即备份分支）克隆下来，进入克隆下来的目录</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> -b hexo https://github.com/Jccc-l/Jccc-l.github.io.git</span><br></pre></td></tr></table></figure>
<p>执行以下命令安装<code>packages.json</code>文件所记录的node模块</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure>
<p>恢复完成，可以像以前那样写博客了</p>
<h2 id="reference"><a class="markdownIt-Anchor" href="#reference"></a> Reference</h2>
<ul>
<li><a href="https://ayshansu.github.io/%E3%80%90Hexo%E3%80%91Hexo%E5%8D%9A%E5%AE%A2%E5%A4%87%E4%BB%BD%E5%88%B0Github/">【Hexo】Hexo博客备份到Github</a></li>
</ul>
]]></content>
      <categories>
        <category>Blog</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Blog</tag>
        <tag>Github</tag>
      </tags>
  </entry>
  <entry>
    <title>搭建我的Hexo博客</title>
    <url>/2024/01/17/%E6%90%AD%E5%BB%BA%E6%88%91%E7%9A%84Hexo%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<h1 id="搭建我的hexo博客"><a class="markdownIt-Anchor" href="#搭建我的hexo博客"></a> 搭建我的Hexo博客</h1>
<p>Hexo是一个快速、简洁高效的博客框架，部署步骤简单，编写支持Markdown</p>
<p>这次记录一下我的博客搭建过程，搭配<a href="https://hexo.io/zh-cn/docs/index.html">Hexo官方文档</a>食用更佳</p>
<h2 id="基础安装"><a class="markdownIt-Anchor" href="#基础安装"></a> 基础安装</h2>
<h3 id="基础软件安装"><a class="markdownIt-Anchor" href="#基础软件安装"></a> 基础软件安装</h3>
<p>安装Hexo需要安装以下程序</p>
<ul>
<li><a href="https://nodejs.org/en">Node.js</a></li>
<li><a href="https://git-scm.com/">Git</a></li>
</ul>
<h4 id="linux"><a class="markdownIt-Anchor" href="#linux"></a> Linux</h4>
<h5 id="arch系"><a class="markdownIt-Anchor" href="#arch系"></a> Arch系</h5>
<ul>
<li>安装
<ul>
<li>sudo pacman -S nodejs npm git</li>
</ul>
</li>
</ul>
<h5 id="debian系"><a class="markdownIt-Anchor" href="#debian系"></a> Debian系</h5>
<ol>
<li>更新本地apt索引
<ul>
<li><code>sudo apt-get update</code></li>
</ul>
</li>
<li>安装
<ul>
<li><code>sudo apt-get install nodejs npm git</code></li>
</ul>
</li>
</ol>
<h5 id="fedora系"><a class="markdownIt-Anchor" href="#fedora系"></a> Fedora系</h5>
<ul>
<li>安装
<ul>
<li><code>sudo dnf install nodejs npm git</code></li>
</ul>
</li>
</ul>
<h5 id="centos"><a class="markdownIt-Anchor" href="#centos"></a> CentOS</h5>
<ul>
<li>安装
<ul>
<li><code>sudo yum install nodejs npm git</code></li>
</ul>
</li>
</ul>
<h4 id="windows"><a class="markdownIt-Anchor" href="#windows"></a> Windows</h4>
<p>Windows可以通过官网进行下载和安装<a href="https://git-scm.com/">Git</a>，<a href="https://nodejs.org/en/download/current">Node.js</a>，<a href="https://www.npmjs.com/">npm</a></p>
<p>通过以下命令查看是否安装成功</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git -v</span><br><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure>
<p>如果全都正确显示软件版本，则安装成功，如果显示<code>Command not found</code>说明安装失败</p>
<h3 id="安装hexo"><a class="markdownIt-Anchor" href="#安装hexo"></a> 安装Hexo</h3>
<p>然后通过<code>npm</code>安装<code>hexo</code>，由于在npm的服务器在国外，在国内访问的速度比较慢，可以通过<code>cnpm</code>使用<a href="https://npmmirror.com/">国内的镜像站</a>进行安装</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> npm install -g cnpm --registry=https://registry.npmmirror.com</span><br></pre></td></tr></table></figure>
<p>输入<code>npm list --global</code>可以看到<code>hexo</code>已经被安装</p>
<img src="Hexo_Installed.png" style="max-width:50%">
<h2 id="hexo博客的建立与管理"><a class="markdownIt-Anchor" href="#hexo博客的建立与管理"></a> Hexo博客的建立与管理</h2>
<p>创建一个文件夹blog用于存储我的博客文件</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> ~/Documents/blog</span><br><span class="line"><span class="built_in">cd</span> ~/Documents/blog</span><br></pre></td></tr></table></figure>
<p>在文件夹中进行初始化</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure>
<p>等待初始化完成</p>
<img src="Hexo_init.png" style="max-width:100%;">
<p>新建完成，得到这样的目录结构</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">├── _config.landscape.yml</span><br><span class="line">├── _config.yml</span><br><span class="line">├── node_modules</span><br><span class="line">├── package.json</span><br><span class="line">├── scaffolds</span><br><span class="line">├── source</span><br><span class="line">│   └── _posts</span><br><span class="line">├── themes</span><br><span class="line">└── yarn.lock</span><br></pre></td></tr></table></figure>
<p>博客的源文件会储存在<code>source</code>目录内，</p>
<p>编辑<code>_config.yml</code>文件，将post_asset_folder:false中的false改为true，该设置使hexo在创建一篇博客同时创建一个文件夹以存储这个博客的图片等有用的文件</p>
<h2 id="hexo的构建"><a class="markdownIt-Anchor" href="#hexo的构建"></a> Hexo的构建</h2>
<p>初始化Hexo以后，可以直接构建</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">hexo generate       <span class="comment"># 或者hexo g</span></span><br></pre></td></tr></table></figure>
<p>随后会生成一个public目录，里面放置着根据配置生成的博客文件</p>
<img src="Hexo_Generate.png" style="max-width:100%">
<h2 id="启动内建服务器"><a class="markdownIt-Anchor" href="#启动内建服务器"></a> 启动内建服务器</h2>
<p>启动hexo内建服务器，然后就可以使用浏览器通过本地IP进行访问了</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">hexo server         <span class="comment"># 或者hexo s</span></span><br></pre></td></tr></table></figure>
<img src="Hexo_Server.png" style="max-width:75%;">
<p>在浏览器中输入<code>127.0.0.1:4000</code>即可查看本地博客</p>
<img src="Hexo_Local_Server.png" style="max-width:100%;">
<h2 id="hexo部署远程平台"><a class="markdownIt-Anchor" href="#hexo部署远程平台"></a> Hexo部署远程平台</h2>
<p>在上述操作中已经把博客部署到本地，现在需要部署到远程平台</p>
<h3 id="部署到github"><a class="markdownIt-Anchor" href="#部署到github"></a> 部署到Github</h3>
<h4 id="创建一个github账号"><a class="markdownIt-Anchor" href="#创建一个github账号"></a> 创建一个Github账号</h4>
<p>在<a href="https://github.com">Github官网</a>上创建一个账号，点击左上角的<code>Sign up</code>根据提示进行操作即可（相信你们会的≖‿≖✧）</p>
<img src="Github_Sign_Up.png" style="max-width:100%;">
<h4 id="配置git"><a class="markdownIt-Anchor" href="#配置git"></a> 配置Git</h4>
<p><strong>配置Git本地信息</strong></p>
<p>这些信息可以是虚拟的，会显示在git commit信息中</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git config --global user.email <span class="string">&quot;you@example.com&quot;</span>          <span class="comment"># 配置邮箱</span></span><br><span class="line">git config --global user.name <span class="string">&quot;Your Name&quot;</span>                 <span class="comment"># 配置kkk名字</span></span><br></pre></td></tr></table></figure>
<p>在 Git 中缓存 GitHub 凭据，这样在推送博客时，不需要输入账号密码</p>
<p><strong>安装gh-cli</strong></p>
<p>ArchLinux：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> pacman -S github-cli</span><br></pre></td></tr></table></figure>
<p><strong>缓存凭据</strong></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">gh auth login</span><br></pre></td></tr></table></figure>
<img src="GH_Auth_Login.png" style="max-width:100%;">
<p>复制这串验证码，按<code>Enter</code>打开浏览器，粘贴验证码认证即可</p>
<img src="GH_Auth_Web.png" style="max-width:100%;">
<img src="GH_Auth_Success.png" style="max-width:100%;">
<h4 id="创建github仓库"><a class="markdownIt-Anchor" href="#创建github仓库"></a> 创建Github仓库</h4>
<p>创建一个仓库，用于部署我们的博客</p>
<p><strong>注意</strong>：将新仓库的名字设置为<code>&lt;用户名&gt;.github.io</code></p>
<p>比如：你的用户名是Jack</p>
<p>那么创建一个叫做<code>Jack.github.io</code>的仓库</p>
<img src="Github_Repo_Name.png" style="max-width:100%;">
<p>点击创建即可</p>
<img src="Create_Repo.png" style="max-width:100%;">
<h4 id="安装推送插件"><a class="markdownIt-Anchor" href="#安装推送插件"></a> 安装推送插件</h4>
<p><a href="https://github.com/hexojs/hexo-deployer-git">hexo-deployer-git</a>为我们提供了将hexo博客推送到Github的功能</p>
<p>安装命令如下，在博客目录下执行：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">cnpm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>
<h4 id="修改主配置文件"><a class="markdownIt-Anchor" href="#修改主配置文件"></a> 修改主配置文件</h4>
<p>编辑博客目录下的_config.yml文件，添加以下内容</p>
<figure class="highlight yml"><figcaption><span>[Blogroot]/_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment"># You can use this:</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">https://github.com/Jccc-l/Jccc-l.github.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">main</span></span><br><span class="line"><span class="comment"># token: &#x27;&#x27;</span></span><br><span class="line"><span class="comment"># message: [message]</span></span><br><span class="line"><span class="comment"># name: [git user]</span></span><br><span class="line"><span class="comment"># email: [git email]</span></span><br><span class="line"><span class="comment"># extend_dirs: [extend directory]</span></span><br><span class="line"><span class="comment"># ignore_hidden: false # default is true</span></span><br><span class="line"><span class="comment"># ignore_pattern: regexp  # whatever file that matches the regexp will be ignored when deploying</span></span><br></pre></td></tr></table></figure>
<ul>
<li><code>repo</code>：仓库的链接，复制HTTPS或SSH链接<br />
<img src="Copy_Repo_URL.png" style="max-width:50%;"></li>
<li><code>branch</code>：博客推送的仓库分支，Github创建的主分支默认是<code>main</code>，检查一下是否一致</li>
<li><code>token</code>：Github生成的token用于访问仓库身份认证，但是之前已经用github-cli缓存了凭据，可以删掉这个选项</li>
<li><code>message</code>：commit信息，默认：<code>Site updated: &#123;&#123; now("yyyy-MM-dd HH:mm:ss") &#125;&#125;</code></li>
<li><code>name</code>和<code>email</code>：commit信息中的名字和邮箱，前面用<code>git config</code>已经设置了全局的信息，可以删掉</li>
<li><code>ignore_hidden</code>：在发布博客时是否忽略隐藏文件</li>
</ul>
<p>还有其他配置选项可以在<a href="https://github.com/hexojs/hexo-deployer-git">插件的仓库</a>中查询</p>
<p>配置完成后，输入<code>hexo deploy</code>或（<code>hexo d</code>）进行博客推送</p>
<p>然后访问&lt;用户名&gt;.github.io就可以访问到你的hexo博客网站了</p>
<h2 id="完成基本搭建"><a class="markdownIt-Anchor" href="#完成基本搭建"></a> 完成基本搭建</h2>
<p>以后如果需要对博客进行增删改，通过以下步骤进行：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">hexo new <span class="string">&quot;Hello World&quot;</span>      <span class="comment"># 或者hexo n &quot;Hello World&quot;      创建一篇叫做&quot;Hello World&quot;的博客</span></span><br><span class="line">hexo clean                  <span class="comment"># 或者hexo cl                   清除缓存文件</span></span><br><span class="line">hexo generate               <span class="comment"># 或者hexo g                    生成博客</span></span><br><span class="line">hexo server                 <span class="comment"># 或者hexo s                    启用内建服务器本地预览博客</span></span><br><span class="line">hexo deploy                 <span class="comment"># 或者hexo d                    推送博客到Github</span></span><br></pre></td></tr></table></figure>
<p>以后就可以开心地写你的博客了。</p>
]]></content>
      <categories>
        <category>Blog</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Blog</tag>
        <tag>Github</tag>
      </tags>
  </entry>
  <entry>
    <title>毕业设计大模型智能助手</title>
    <url>/2024/11/13/%E6%AF%95%E4%B8%9A%E8%AE%BE%E8%AE%A1%E5%A4%A7%E6%A8%A1%E5%9E%8B%E6%99%BA%E8%83%BD%E5%8A%A9%E6%89%8B/</url>
    <content><![CDATA[<h1 id="毕业设计大模型智能助手"><a class="markdownIt-Anchor" href="#毕业设计大模型智能助手"></a> 毕业设计大模型智能助手</h1>
<h2 id="前置准备"><a class="markdownIt-Anchor" href="#前置准备"></a> 前置准备</h2>
<p>安装Docker</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">sudo</span> pacman -S docker</span><br></pre></td></tr></table></figure>
<p>将用户添加指docker组</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">sudo</span> usermod -aG docker 用户名</span><br></pre></td></tr></table></figure>
<p>编辑文件，配置Docker镜像（可以继续添加其他镜像，用逗号分隔）</p>
<figure class="highlight json"><figcaption><span>/etc/daemon.json</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;registry-mirrors&quot;</span><span class="punctuation">:</span></span><br><span class="line">    <span class="punctuation">[</span>    </span><br><span class="line">        <span class="string">&quot;https://dockerproxy.net&quot;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
<h2 id="数据存储和预处理"><a class="markdownIt-Anchor" href="#数据存储和预处理"></a> 数据存储和预处理</h2>
<p>实验使用的的数据集来源于Stack Overflow的贴子<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></p>
<p><a href="magnet:?xt=urn:btih:745b43ba30154eb2bc1df080b4c12de904edb2cb&amp;dn=Stack%20Exchange%20Data%20Dump%20September%202024&amp;tr=udp%3A%2F%2Ftracker.opentrackr.org%3A1337%2Fannounce&amp;ws=https%3A%2F%2Farchive.org%2Fdownload%2F">磁力链接</a></p>
<h2 id="安装配置数据库"><a class="markdownIt-Anchor" href="#安装配置数据库"></a> 安装配置数据库</h2>
<p>计划将文本数据存储在MySQL数据库中</p>
<p>使用Docker安装MySQL数据库</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">export</span> STORAGE_LOCATION=<span class="variable">$HOME</span>/Documents/docker/mysql&amp;&amp; \</span><br><span class="line"><span class="built_in">mkdir</span> -p <span class="string">&quot;<span class="variable">$STORAGE_LOCATION</span>/etc/my.cnf.d&quot;</span> &amp;&amp; \</span><br><span class="line"><span class="built_in">mkdir</span> -p <span class="string">&quot;<span class="variable">$STORAGE_LOCATION</span>/etc/mysql&quot;</span> &amp;&amp; \</span><br><span class="line"><span class="built_in">mkdir</span> -p <span class="string">&quot;<span class="variable">$STORAGE_LOCATION</span>/var/lib/mysql&quot;</span> &amp;&amp; \</span><br><span class="line"><span class="built_in">mkdir</span> -p <span class="string">&quot;<span class="variable">$STORAGE_LOCATION</span>/var/log&quot;</span> &amp;&amp; \</span><br><span class="line"><span class="built_in">touch</span> <span class="string">&quot;<span class="variable">$STORAGE_LOCATION</span>/etc/my.cnf&quot;</span> &amp;&amp; \</span><br><span class="line"><span class="built_in">touch</span> <span class="string">&quot;<span class="variable">$STORAGE_LOCATION</span>/var/log/mysqld.log&quot;</span></span><br><span class="line"></span><br><span class="line">docker run -d \</span><br><span class="line">--name mysql-container \</span><br><span class="line">-p 3306:3306 \</span><br><span class="line">-e TZ=Asia/Shanghai \</span><br><span class="line">-e MYSQL_ROOT_PASSWORD=123 \</span><br><span class="line">-v <span class="variable">$STORAGE_LOCATION</span>/etc/my.cnf.d:/etc/my.cnf.d \</span><br><span class="line">-v <span class="variable">$STORAGE_LOCATION</span>/etc/mysql:/etc/mysql \</span><br><span class="line">-v <span class="variable">$STORAGE_LOCATION</span>/var/lib/mysql:/var/lib/mysql \</span><br><span class="line">-v <span class="variable">$STORAGE_LOCATION</span>/etc/my.cnf:/etc/my.cnf \</span><br><span class="line">-v <span class="variable">$STORAGE_LOCATION</span>/var/log/mysqld.log:/var/log/mysqld.log \</span><br><span class="line">mysql</span><br></pre></td></tr></table></figure>
<p>命令解释</p>
<blockquote>
<ul>
<li><code>docker run -d</code>
<ul>
<li>在后台运行容器</li>
</ul>
</li>
<li><code>--name mysql-container</code>
<ul>
<li>把容器命令为mysql-container</li>
</ul>
</li>
<li><code>-p 3306:3306</code>
<ul>
<li>把主机的3306端口映射到容器而3306端口</li>
</ul>
</li>
<li><code>-e TZ=Asia/Shanghai</code>
<ul>
<li>设置时区<code>timezone</code>环境变量</li>
</ul>
</li>
<li><code>-e MYSQL_ROOT_PASSWORD=123</code>
<ul>
<li>设置MySQL数据库的<code>root</code>用户密码</li>
</ul>
</li>
<li><code>mysql</code>
<ul>
<li>使用<code>mysql</code>镜像构建容器</li>
</ul>
</li>
</ul>
</blockquote>
<!--
> - `-e MYSQL_USER=jccc`
>     - 创建一个名为`jccc`的用户
> - `-e MYSQL_PASSWORD=123`
>     - 设置MySQL数据库的新用户密码
-->
<h2 id="导入数据"><a class="markdownIt-Anchor" href="#导入数据"></a> 导入数据</h2>
<p>我要使用到的数据文件是Posts.xml</p>
<p>通过Python脚本导入数据</p>
<h2 id="ollama安装配置"><a class="markdownIt-Anchor" href="#ollama安装配置"></a> Ollama安装配置</h2>
<p>Ollama现在支持通过Docker构建<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup></p>
<h3 id="构建ollama的docker容器"><a class="markdownIt-Anchor" href="#构建ollama的docker容器"></a> 构建Ollama的Docker容器</h3>
<p>拉取Ollama镜像</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ docker pull ollama/ollama</span><br></pre></td></tr></table></figure>
<p>创建并启动容器（支持显卡或CPU）</p>
<h4 id="cpu"><a class="markdownIt-Anchor" href="#cpu"></a> CPU</h4>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ docker run -d -v <span class="variable">$HOME</span>/Documents/docker/ollama:/root/.ollama -p 11434:11434 --name ollama ollama/ollama</span><br></pre></td></tr></table></figure>
<h4 id="nvidia-gpu"><a class="markdownIt-Anchor" href="#nvidia-gpu"></a> NVIDIA GPU</h4>
<p>NVIDIA GPU需要先安装工具包，Arch的安装命令如下，其他系统参考说明文档<sup class="footnote-ref"><a href="#fn3" id="fnref3">[3]</a></sup></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">sudo</span> pacman -S nvidia-container-toolkit</span><br></pre></td></tr></table></figure>
<p>安装完工具包，需要重启一下Docker</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">sudo</span> systemctl restart docker</span><br></pre></td></tr></table></figure>
<p>然后启动容器，以下这条命令做了以下操作</p>
<ul>
<li>把所有GPU分配给容器</li>
<li>把宿主机的<code>$HOME/Documents/docker/ollama</code>目录挂载到容器的<code>/root/.ollama</code>目录中</li>
<li>将容器命名为<code>ollama</code></li>
<li>把主机的11434端口映射到容器的11434端口</li>
</ul>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ docker run -d --gpus=all -v <span class="variable">$HOME</span>/Documents/docker/ollama:/root/.ollama -p 11434:11434 --name ollama ollama/ollama</span><br></pre></td></tr></table></figure>
<h3 id="运行模型"><a class="markdownIt-Anchor" href="#运行模型"></a> 运行模型</h3>
<p>这里先介绍以下如何在Docker中执行命令，通常是使用<code>docker exec</code>命令， 这个命令的第一个参数是容器名称，第二个参数是要运行的命令，例子如下：</p>
<ul>
<li>通过命令<code>docker exec -it ollama bash</code>，在名为ollama的容器中执行<code>bash</code>命令，进入ollama容器的bash命令行交互界面</li>
<li>通过命令<code>docker exec -it ollama ollama ...</code>，在名为ollama的容器中执行<code>ollama</code>命令</li>
</ul>
<p>Ollama有以下常用命令<sup class="footnote-ref"><a href="#fn4" id="fnref4">[4]</a></sup></p>
<p>拉取模型，镜像详情可以在Ollama仓库中查询<sup class="footnote-ref"><a href="#fn5" id="fnref5">[5]</a></sup></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ ollama pull qwen:4b</span><br></pre></td></tr></table></figure>
<p>根据Modefile文件创建模型</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ ollama create mymodel -f ./Modelfile</span><br></pre></td></tr></table></figure>
<p>移除模型</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ ollama <span class="built_in">rm</span> llama3.2</span><br></pre></td></tr></table></figure>
<p>复制模型</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ ollama <span class="built_in">cp</span> llama3.2 mymodel</span><br></pre></td></tr></table></figure>
<h2 id="open-webui安装配置"><a class="markdownIt-Anchor" href="#open-webui安装配置"></a> Open Webui安装配置</h2>
<p>Ollama主要作为一个后端服务来运行，通常需要一个前端用户界面结合使用，而Open WebUI是一个功能丰富且用户友好的Web界面，支持多重语言模型运行器，提供一个图形化的用户界面来管理和使用语言模型<sup class="footnote-ref"><a href="#fn6" id="fnref6">[6]</a></sup></p>
<p>Open WebUI可以对模型的各种参数进行调整</p>
<p>同样使用Docker容器进行安装</p>
<p>拉取镜像</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ docker pull ghcr.io/open-webui/open-webui:main</span><br></pre></td></tr></table></figure>
<p>可以通过以下命令运行</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ docker run -d -p 3000:8080 \</span><br><span class="line">--add-host=host.docker.internal:host-gateway \</span><br><span class="line">-v <span class="variable">$HOME</span>/Documents/docker/open-webui:/app/backend/data \</span><br><span class="line">--name open-webui \</span><br><span class="line">--restart always \</span><br><span class="line">ghcr.io/open-webui/open-webui:main</span><br></pre></td></tr></table></figure>
<blockquote>
<p>命令解释</p>
<ul>
<li><code>docker run</code>
<ul>
<li>这是启动一个新的Docker容器的命令。</li>
</ul>
</li>
<li><code>-d</code>
<ul>
<li>表示容器将以分离模式（后台）运行。这意味着容器会在后台运行，不会占用当前终端。</li>
</ul>
</li>
<li><code>-p 3000:8080</code>
<ul>
<li>指定端口映射，将宿主机的3000端口映射到容器内的8080端口。这样可以从宿主机通过3000端口访问容器内的服务。</li>
</ul>
</li>
<li><code>--add-host=host.docker.internal</code>host-gateway:
<ul>
<li>这个选项将宿主机的IP地址添加到容器的 /etc/hosts 文件中，使用别名 host.docker.internal。这使得容器可以通过 host.docker.internal 访问宿主机上的服务。这对于开发和调试非常有用。</li>
</ul>
</li>
<li><code>-v $HOME/Documents/docker/open-webui</code>/app/backend/data:
<ul>
<li>这个选项使用绑定挂载（bind mount）将宿主机上的 $HOME/Documents/docker/open-webui 目录挂载到容器内的 /app/backend/data 目录。这样容器内的应用程序可以读写宿主机上的这个目录，适用于需要直接访问宿主机文件的情况。</li>
</ul>
</li>
<li><code>--name open-webui</code>
<ul>
<li>为容器指定一个名称 open-webui。这使得后续操作（如停止、删除等）更加方便。</li>
</ul>
</li>
<li><code>--restart always</code>
<ul>
<li>设置容器的重启策略为 always，这意味着无论容器因何原因停止（包括手动停止），Docker 都会自动重启容器。这对于需要长期运行的服务非常有用。</li>
</ul>
</li>
<li><code>ghcr.io/open-webui/open-webui:main</code>
<ul>
<li>这是将要运行的Docker镜像的名称和标签。<a href="http://ghcr.io">ghcr.io</a> 是 GitHub Container Registry 的域名，open-webui/open-webui 是仓库和镜像名称，main 是标签，表示这个镜像是基于 main 分支构建的版本。</li>
</ul>
</li>
</ul>
</blockquote>
<p>如果想支持显卡，可以使用以下命令</p>
<blockquote>
<p><strong>由于网络原因，部分软件库无法下载，无法支持显卡</strong></p>
</blockquote>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ docker run -d -p 3000:8080 \</span><br><span class="line">--gpus all \</span><br><span class="line">--add-host=host.docker.internal:host-gateway \</span><br><span class="line">-v <span class="variable">$HOME</span>/Documents/docker/open-webui:/app/backend/data \</span><br><span class="line">--name open-webui \</span><br><span class="line">--restart always \</span><br><span class="line">ghcr.io/open-webui/open-webui:cuda</span><br></pre></td></tr></table></figure>
<blockquote>
<p>命令解释</p>
<ul>
<li><code>docker run -d -p 3000:8080</code>
<ul>
<li><code>docker run</code>启动一个新的Docker容器</li>
<li><code>-d</code>表示容器将以分离模式运行，即后台运行</li>
<li><code>-p 3000:8080</code>指定端口映射，将宿主机的3000端口映射到容器内的8080端口，允许外部访问容器内的服务。</li>
</ul>
</li>
<li><code>--gpus all</code>
<ul>
<li>这个选项用于启用GPU支持，并将所有可用的GPU设备分配给容器。</li>
</ul>
</li>
<li><code>--add-host=host.docker.internal:host-gateway</code>
<ul>
<li>这个选项将宿主机的IP地址添加到容器的<code>/etc/hosts</code>文件中，使用别名<code>host.docker.internal</code>。这使得容器可以通过<code>host.docker.internal</code>访问宿主机上的服务。</li>
</ul>
</li>
<li><code>-v $HOME/Documents/docker/open-webui:/app/backend/data</code>
<ul>
<li>使用绑定挂载（bind mount）将宿主机上的<code>$HOME/Documents/docker/open-webui</code>目录挂载到容器内的<code>/app/backend/data</code>目录。这样容器内的应用程序可以读写宿主机上的这个目录。</li>
</ul>
</li>
<li><code>--name open-webui</code>
<ul>
<li>为容器指定一个名称<code>open-webui</code></li>
</ul>
</li>
<li><code>--restart always</code>:
<ul>
<li>设置容器的重启策略为<code>always</code>，这意味着无论容器因何原因停止（包括手动停止），Docker 都会自动重启容器。</li>
</ul>
</li>
<li><code>ghcr.io/open-webui/open-webui:cuda</code>
<ul>
<li>这是将要运行的Docker镜像的名称和标签。<code>ghcr.io</code>是GitHub Container Registry的域名，<code>open-webui/open-webui</code>是仓库和镜像名称，<code>cuda</code>是标签，表示这个镜像是针对CUDA（NVIDIA的GPU计算平台）优化的版本。</li>
</ul>
</li>
</ul>
</blockquote>
<h2 id="anything-llm安装配置"><a class="markdownIt-Anchor" href="#anything-llm安装配置"></a> Anything LLM安装配置</h2>
<p>Anything LLM有多种安装方式，我这里通过Docker进行安装<sup class="footnote-ref"><a href="#fn7" id="fnref7">[7]</a></sup></p>
<p>拉取镜像</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ docker pull mintplexlabs/anythingllm</span><br></pre></td></tr></table></figure>
<p>启动一个新镜像</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">export</span> STORAGE_LOCATION=<span class="variable">$HOME</span>/Documents/docker/anythingllm &amp;&amp; \</span><br><span class="line"><span class="built_in">mkdir</span> -p <span class="variable">$STORAGE_LOCATION</span> &amp;&amp; \</span><br><span class="line"><span class="built_in">touch</span> <span class="string">&quot;<span class="variable">$STORAGE_LOCATION</span>/.env&quot;</span> &amp;&amp; \</span><br><span class="line">docker run -d -p 3001:3001 \</span><br><span class="line">--cap-add SYS_ADMIN \</span><br><span class="line">-v <span class="variable">$&#123;STORAGE_LOCATION&#125;</span>:/app/server/storage \</span><br><span class="line">-v <span class="variable">$&#123;STORAGE_LOCATION&#125;</span>/.env:/app/server/.env \</span><br><span class="line">-e STORAGE_DIR=<span class="string">&quot;/app/server/storage&quot;</span> \</span><br><span class="line">--name anythingllm \</span><br><span class="line">mintplexlabs/anythingllm</span><br></pre></td></tr></table></figure>
<blockquote>
<p>命令解释</p>
<p>前置命令</p>
<ul>
<li><code>export STORAGE_LOCATION=$HOME/Documents/docker/anythingllm</code>
<ul>
<li>这是一个bash命令，用于在当前shell会话中设置一个环境变量<code>STORAGE_LOCATION</code>，其值为用户主目录下的<code>Documents/docker/anythingllm</code>文件夹。这个变量将在后续的Docker命令中使用。</li>
</ul>
</li>
<li><code>mkdir -p $STORAGE_LOCATION</code>
<ul>
<li>这也是一个bash命令，它创建了由<code>STORAGE_LOCATION</code>变量指定的目录（如果该目录不存在的话）。<code>-p</code>选项确保即使父目录不存在也会被创建。</li>
</ul>
</li>
<li><code>touch &quot;$STORAGE_LOCATION/.env&quot;</code>
<ul>
<li><code>touch</code>命令用于创建一个空文件或更新现有文件的时间戳。这里是在<code>STORAGE_LOCATION</code>目录下创建了一个<code>.env</code>文件，这个文件通常用来存储环境变量。</li>
</ul>
</li>
</ul>
<p>Docker 命令</p>
<ul>
<li><code>docker run</code>
<ul>
<li>这是启动一个新的Docker容器的命令。</li>
</ul>
</li>
<li><code>-d</code>
<ul>
<li>表示容器将以分离模式（后台）运行。这意味着容器会在后台运行，不会占用当前终端。</li>
</ul>
</li>
<li><code>-p 3001:3001</code>
<ul>
<li>指定端口映射，将宿主机的3001端口映射到容器内的3001端口。这样可以从宿主机通过3001端口访问容器内的服务。</li>
</ul>
</li>
<li><code>--cap-add SYS_ADMIN</code>
<ul>
<li>这个选项给容器添加了<code>SYS_ADMIN</code>能力，这是一个Linux内核的能力，赋予了容器更多的权限，比如执行某些系统管理任务。请注意，赋予额外的能力可能会增加安全风险。</li>
</ul>
</li>
<li><code>-v $&#123;STORAGE_LOCATION&#125;:/app/server/storage</code>
<ul>
<li>这个选项使用绑定挂载（bind mount）将宿主机上的<code>$&#123;STORAGE_LOCATION&#125;</code>目录挂载到容器内的<code>/app/server/storage</code>目录。这样容器内的应用程序可以读写宿主机上的这个目录，适用于需要直接访问宿主机文件的情况。</li>
</ul>
</li>
<li><code>-v $&#123;STORAGE_LOCATION&#125;/.env:/app/server/.env</code>
<ul>
<li>这个选项使用绑定挂载将宿主机上的<code>$&#123;STORAGE_LOCATION&#125;/.env</code>文件挂载到容器内的<code>/app/server/.env</code>文件。这样容器内的应用程序可以读取这些环境配置。</li>
</ul>
</li>
<li><code>-e STORAGE_DIR=&quot;/app/server/storage&quot;</code>
<ul>
<li>这个选项向容器传递环境变量<code>STORAGE_DIR</code>，其值为<code>/app/server/storage</code>。应用程序内部用于引用存储目录的位置。</li>
</ul>
</li>
<li><code>--name anythingllm</code>
<ul>
<li>将容器命名为anythingllm</li>
</ul>
</li>
<li><code>mintplexlabs/anythingllm</code>
<ul>
<li>这是将要运行的Docker镜像的名称。Docker会从Docker Hub或其他注册表拉取这个镜像（如果本地没有的话），并基于此镜像启动一个新的容器。</li>
</ul>
</li>
</ul>
</blockquote>
<h2 id="向量数据库milvus"><a class="markdownIt-Anchor" href="#向量数据库milvus"></a> 向量数据库Milvus</h2>
<p>进入到你需要存储milvus数据的目录（脚本会把容器的目录挂载的当前目录下）</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> <span class="variable">$HOME</span>/Documents/docker/milvus</span><br></pre></td></tr></table></figure>
<p>下载安装脚本</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ curl -sfL https://raw.githubusercontent.com/milvus-io/milvus/master/scripts/standalone_embed.sh -o standalone_embed.sh</span><br></pre></td></tr></table></figure>
<p>启动Docker容器</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ bash standalone_embed.sh start</span><br></pre></td></tr></table></figure>
<p>为了方便数据库的管理，需要用到Milvus_CLI工具<sup class="footnote-ref"><a href="#fn8" id="fnref8">[8]</a></sup></p>
<p>通过Docker安装</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ docker run -it zilliz/milvus_cli:latest</span><br></pre></td></tr></table></figure>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p><a href="https://communitydatadump.com/index.html">stackexchange_20240930</a> <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn2" class="footnote-item"><p><a href="https://ollama.com/blog/ollama-is-now-available-as-an-official-docker-image">Ollama is now available as an official Docker image</a> <a href="#fnref2" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn3" class="footnote-item"><p><a href="https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/latest/install-guide.html#installation">Installing the NVIDIA Container Toolkit</a> <a href="#fnref3" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn4" class="footnote-item"><p><a href="https://github.com/ollama/ollama">Ollama Github Repository</a> <a href="#fnref4" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn5" class="footnote-item"><p><a href="https://ollama.com/library">Ollama Models</a> <a href="#fnref5" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn6" class="footnote-item"><p><a href="https://github.com/open-webui/open-webui">Open WebUI Github Repository</a> <a href="#fnref6" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn7" class="footnote-item"><p><a href="https://docs.anythingllm.com/installation-docker/local-docker">How to use Dockerized Anything LLM</a> <a href="#fnref7" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn8" class="footnote-item"><p><a href="https://milvus.io/docs/cli_overview.md">Milvus Command-Line Interface</a> <a href="#fnref8" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
      <categories>
        <category>人工智能</category>
      </categories>
      <tags>
        <tag>数据库</tag>
        <tag>Python</tag>
        <tag>LLM</tag>
      </tags>
  </entry>
</search>
